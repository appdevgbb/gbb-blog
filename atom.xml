<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azureglobalblackbelts.com/</id>
    <title>Azure Global Blackbelt Blog</title>
    <updated>2025-07-02T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://azureglobalblackbelts.com/"/>
    <subtitle>Azure Global Blackbelt Blog</subtitle>
    <icon>https://azureglobalblackbelts.com/img/gbb.png</icon>
    <entry>
        <title type="html"><![CDATA[When Infrastructure Scales But Understanding Doesn't]]></title>
        <id>https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt</id>
        <link href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt"/>
        <updated>2025-07-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Modern infrastructure can scale infinitely, but human understanding doesn't. Explore the cognitive overload crisis and productivity paradox affecting development teams, plus how AI-powered platforms can bridge the gap and make modern tooling more humane.]]></summary>
        <content type="html"><![CDATA[<p>We all know this, even if we don't like to admit it: modern infrastructure can scale infinitely, but human understanding doesn't.</p>
<p>We've all seen it happen—organizations going from managing dozens of servers to thousands of containers, from deploying weekly to deploying hundreds of times per day, from serving thousands of users to millions. The technology handled the scale beautifully. The humans? Not so much.</p>
<p>This is the first industry issue that platform engineering should be addressing: <strong>how do we manage infrastructure complexity that has outgrown not just individual cognitive capacity, but our collective ability to communicate and transfer knowledge as teams?</strong></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-cognitive-overload-crisis">The Cognitive Overload Crisis<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#the-cognitive-overload-crisis" class="hash-link" aria-label="Direct link to The Cognitive Overload Crisis" title="Direct link to The Cognitive Overload Crisis" translate="no">​</a></h2>
<p>Traditional approaches: runbooks, tribal knowledge, heroic individual efforts, break down when you're operating distributed systems across multiple clouds, regions, and a diverse org with multiple teams. The solution isn't making people smarter; <strong>platform engineering should be about making systems more humane</strong>.</p>
<p>Picture this scenario: A deployment fails at 2 AM. In the old world, you'd SSH into a server, check some logs, restart a service, and move on. Today? You're correlating logs across seventeen microservices each using a different log collector, checking metrics in three different monitoring systems, verifying configuration drift across multiple environments, and somehow trying to understand if the failure is related to the service mesh configuration change from last week, the database migration from yesterday, or the new security policy that rolled out an hour ago (it's probably synergistacally all of the above).</p>
<p>We haven't simply added "just" complexity, we've added <em>interdependent</em> complexity. Every piece affects every other piece in ways that aren't always obvious and the failure modes are exponentially more varied than anything we've dealt with in simpler architectures.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-productivity-paradox">The Productivity Paradox<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#the-productivity-paradox" class="hash-link" aria-label="Direct link to The Productivity Paradox" title="Direct link to The Productivity Paradox" translate="no">​</a></h2>
<p>Here's something I've felt more often lately, and we've all been there: developers spending more time fighting with tools than building features. We've given them incredible capabilities with container orchestration, service meshes, observability platforms, security scanning tools, but we've also given them incredible complexity and, let's be honest, still poorly written error messages for new systems and tools.</p>
<p>The second industry issue is <strong>developer productivity fragmentation</strong>...when the cognitive overhead of using our tools exceeds the value they provide.</p>
<p>Picture this: you work for a large financial organization where developers need to interact with fourteen different systems just to deploy a simple API change. Each system has its own authentication, its own interface, its own mental model. The developers are technically empowered to do anything, but practically paralyzed by choice and complexity.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-tool-sprawl-reality">The Tool Sprawl Reality<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#the-tool-sprawl-reality" class="hash-link" aria-label="Direct link to The Tool Sprawl Reality" title="Direct link to The Tool Sprawl Reality" translate="no">​</a></h2>
<p>Here's what actually happens in most organizations:</p>
<p><strong>Monday morning</strong>: Developer needs to deploy a simple API update. They open their laptop and immediately face decision paralysis. Which CI/CD pipeline should they use? The company has three different "approved" options, each with different capabilities and limitations. They spend 30 minutes just figuring out which one handles their specific use case.</p>
<p><strong>Tuesday</strong>: The deployment worked, but now they need to set up monitoring. There's Prometheus for infrastructure metrics, Datadog for application performance, Azure Monitor for cloud resources, and some custom logging solution the security team requires. Each tool requires different configuration, different query languages, different mental models.</p>
<p><strong>Wednesday</strong>: Something breaks in production. They have access to all the observability data in the world, but they don't know how to correlate it. They spend two hours hunting through different dashboards, Slack channels, and documentation trying to piece together what happened.</p>
<p><strong>Thursday</strong>: They try to implement the same deployment pattern for another service, but they can't remember the exact sequence they used on Monday. The documentation is out of date, and the person who originally set it up is on vacation or blissfully retired.</p>
<p><strong>Friday</strong>: They're burned out from fighting with tools instead of solving business problems.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="when-ai-actually-helps">When AI Actually Helps<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#when-ai-actually-helps" class="hash-link" aria-label="Direct link to When AI Actually Helps" title="Direct link to When AI Actually Helps" translate="no">​</a></h2>
<p>Think about what happens today when a deployment fails. Someone stares at logs, checks metrics, searches through documentation, asks around on Slack, and eventually pieces together what went wrong. What if instead, they could just ask: "Why did my deployment fail?" (or maybe a bit more complicated of an ask than that...) and get a conversation with an assistant that already knows about your logs, your metrics, and your team's troubleshooting patterns?</p>
<p>We're not trying to replace the human expertise here...we're trying to make that expertise accessible when people need it. Instead of requiring everyone to become Kubernetes troubleshooting experts, the AI can guide them through the investigation, explaining what each step reveals about what's actually happening.</p>
<p>This isn't about replacing human expertise...it's about making that expertise accessible to more people at the right moment that they need it. We're moving from "you need to know how to use this specific tool right now, in order to get answers" to "you need know where things could breakdown well enough to ask the questions, to make the right decisions" The expertise shifts from knowing exactly which buttons to click to having the experience and wisdom to articulate what evidence you actually need to diagnose a solution.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-platform-solution">The Platform Solution<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#the-platform-solution" class="hash-link" aria-label="Direct link to The Platform Solution" title="Direct link to The Platform Solution" translate="no">​</a></h2>
<p>What we're learning is that platforms work best when they don't try to replace the tools people already use and love. Instead of building another portal, we should be building small, focused products that fill the gaps between the tools people already know; making GitHub, Slack, your cloud provider, and your monitoring tools work together more seamlessly.</p>
<p>There's a clearer stack emerging here. You have multiple choices at each level...some glue together well...some not so much. But our job as platform engineers isn't to rebuild everything from scratch. It's to take what's already there and solve for the odd grey areas between these broadly adopted tools. The platform becomes the smart glue, not the central command center.</p>
<p>When we talk about "platform as a product," what we really mean is an opinionated starting point...golden/paved paths that handle the common cases...but offer the proper escape hatches when teams need to solve their specific human scale and tool sprawl problems.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-goldenpaved-path-approach">The Golden/Paved Path Approach<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#the-goldenpaved-path-approach" class="hash-link" aria-label="Direct link to The Golden/Paved Path Approach" title="Direct link to The Golden/Paved Path Approach" translate="no">​</a></h2>
<p>The key is building <strong>opinionated starter paths</strong>—what some may refer to as paved or golden paths. Instead of making people remember how to set up monitoring, security scanning, and deployment pipelines every time, these paths just do the right thing by default.</p>
<p>Why do they work? Because we've all been through this before. We've seen the patterns emerge, tried and failed a few times, and collectively figured out what the rational package should look like. With AI assistance, they're getting even smarter—understanding your specific context and helping orchestrate complex operations through simple conversation.</p>
<p>Think about how we work with platforms today. You want to deploy a service, so you open a dozen browser tabs, remember which CLI commands go with which environment, hunt for the right Slack channel to ask about permissions, and somehow piece together a deployment that mostly works.</p>
<p>What if instead, you could just say "I need to deploy this API with the standard security setup" and the system figured out the rest? The AI becomes the bridge between what you're trying to accomplish and all the tools that need to coordinate to make it happen.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-conversation-layer">The Conversation Layer<a href="https://azureglobalblackbelts.com/2025/07/02/when-infrastructure-scales-but-understanding-doesnt#the-conversation-layer" class="hash-link" aria-label="Direct link to The Conversation Layer" title="Direct link to The Conversation Layer" translate="no">​</a></h2>
<p>Instead of training everyone on every tool, we create AI-powered interaction layers that make platform expertise accessible through natural conversation, whether that's in their IDE, in Slack, or through a CLI that understands context and can perform complex workflows.</p>
<p>Better yet, the AI can document what we learn as we learn it...writing up new knowledge and evolving best practices automatically. This eliminates the toil of properly documenting discoveries and keeps our institutional/tribal knowledge current without requiring someone to stop their actual work to write it all down.</p>
<p>Again the end goal isn't to eliminate human expertise...it's to amplify it and make it accessible at the point and time of need, in the context where people are already working.</p>
<hr>
<p><strong>Next in this series</strong>: We'll explore how environmental inconsistency and governance gaps create reliability nightmares at enterprise scale, and why "it works on my machine" becomes a critical business problem when multiplied across hundreds of teams.</p>
<p><em>Have you experienced this productivity paradox in your organization? How much time do your developers spend fighting with tools versus building features?</em></p>
<p>Cross Posted to: <a href="https://www.linkedin.com/pulse/when-infrastructure-scales-understanding-doesnt-ray-kao-2rpic" target="_blank" rel="noopener noreferrer" class="">https://www.linkedin.com/pulse/when-infrastructure-scales-understanding-doesnt-ray-kao-2rpic</a></p>
<p>#PlatformEngineering #DevOps #DeveloperProductivity #AI #AgenticDevOps</p>]]></content>
        <author>
            <name>Ray Kao</name>
            <uri>https://github.com/raykao</uri>
        </author>
        <author>
            <name>Diego Casati</name>
            <uri>https://github.com/dcasati</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Human Scale Problem in Platform Engineering]]></title>
        <id>https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering</id>
        <link href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering"/>
        <updated>2025-06-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Platform engineering insights focused on scaling human capability, not just technical systems. Practical approaches to making complex infrastructure more humane and accessible.]]></summary>
        <content type="html"><![CDATA[<p>We keep doing this thing where we solve a problem, celebrate the victory, then realize we've created three new problems we didn't even know existed.</p>
<p>Remember when manually configuring servers was the bottleneck? So we built containers. Great! Now we're orchestrating thousands of them. Remember when monolithic deployments were too slow? So we built microservices. Fantastic! Now we're drowning in distributed system complexity. We solved manual infrastructure provisioning with infrastructure as code. Perfect! Now we're coordinating dozens of Terraform modules across environments and wondering how we got here.</p>
<p>Each step forward has been genuinely valuable. But we keep hitting the same pattern: <strong>our solutions outpace our ability to operate them at human scale</strong>.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-knowledge-explosion">The Knowledge Explosion<a href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering#the-knowledge-explosion" class="hash-link" aria-label="Direct link to The Knowledge Explosion" title="Direct link to The Knowledge Explosion" translate="no">​</a></h2>
<p>Think about what we're asking people to know now. Container orchestration, service mesh configuration, observability platforms, security policy engines, AI/ML operations—roles that didn't even exist a decade ago. No single person can be an expert in all of this, and that's actually okay.</p>
<p>What we've created is <strong>necessary specialization</strong>. We need people who can go deep on specific problem domains because the breadth of knowledge has expanded beyond what any individual can reasonably master. Silos aren't inherently bad—they're a natural response to complexity that exceeds what one person can hold in their head.</p>
<p>The real problem isn't that we have silos. Silos are actually fine.  Creating clear roles/responsibilities is a good thing.  It's that <strong>we're terrible at helping these specialists talk to each other</strong>.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-coordination-crisis">The Coordination Crisis<a href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering#the-coordination-crisis" class="hash-link" aria-label="Direct link to The Coordination Crisis" title="Direct link to The Coordination Crisis" translate="no">​</a></h2>
<p>Platform engineering is our attempt to build bridges between these specialists—creating <strong>interfaces and abstractions</strong> that let them work together without everyone needing to become an expert in everything. When it works, specialists can collaborate without understanding every detail of each other's domains, while <strong>guardrails</strong> ensure their work still fits together properly.</p>
<p>But let's be honest—we're still figuring this out. We're just now learning what the <strong>proper handoffs and demarcation lines</strong> should be between security engineers, platform engineers, SREs, and application developers. Even when we think we've drawn the boundaries correctly, there are still <strong>knowledge gaps and coordination challenges</strong> wherever these roles overlap each other.</p>
<p>And then there's the tool problem. We have so many overlapping options that nobody knows who should own what. Should observability be owned by the platform team using Prometheus, or the SRE team using Datadog, or the application teams using Azure Monitor? Who owns the deployment pipeline—platform engineering with their GitOps approach, or the dev teams who want to use GitHub Actions and push directly?</p>
<p>Many organizations find themselves <strong>paralyzed by choice</strong>, afraid to commit to specific tools because of vendor lock-in concerns or the fear of having to rebuild their entire process when better alternatives emerge. So they end up with tool sprawl across teams, each solving similar problems in slightly different ways, creating even more coordination complexity.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-monument-problem">The Monument Problem<a href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering#the-monument-problem" class="hash-link" aria-label="Direct link to The Monument Problem" title="Direct link to The Monument Problem" translate="no">​</a></h2>
<p>Here's where we keep making the same mistake: we treat software and engineering problems as one-and-done challenges. We chase perfect code and perfect execution, hoping that if we just build it right the first time, we'll never need to touch it again. This has been the root of our collective error.</p>
<p>Look at something like mainframe systems (...this is not a punch down at mainframe momment by the way...) — brilliant solutions, built with the assumption they'd last forever. But the world evolved beyond the paradigm it represented, and now organizations are struggling to rebuild decades of accumulated logic and debt because the original systems had no way to introspect, understand, or extend beyond their initial design and/or we felt like the problem was solved so we didn't bother to adjust and evolve it.</p>
<p><strong>We built monuments instead of living systems</strong>. The solutions we build today must be designed differently.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-current-moment">The Current Moment<a href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering#the-current-moment" class="hash-link" aria-label="Direct link to The Current Moment" title="Direct link to The Current Moment" translate="no">​</a></h2>
<p>What I'm seeing across organizations—and I think we're all experiencing this — is that these aren't really new problems. They're the same fundamental challenges we've always had, just amplified by cloud computing, microservices, and the reality of building software at "enterprise scale". Platform engineering is <strong>the current term our industry is using to rally around addressing</strong> these amplified <strong>human</strong> problems.</p>
<p>But here's what's really exciting about this moment in our industry: we're not just trying to encode operational knowledge into platforms/scripts/docs anymore. <strong>We're discovering new ways to make systems more humane through AI assistance</strong> — creating interfaces that finally match how humans naturally want to interact with complex technology.</p>
<p>The difference isn't that AI is magic; it's that <strong>we've built sufficently complex systems that conversational interfaces are required and we now have tools available to us that can truly start to make sense of them WITH US</strong>.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="the-fundamental-shift">The Fundamental Shift<a href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering#the-fundamental-shift" class="hash-link" aria-label="Direct link to The Fundamental Shift" title="Direct link to The Fundamental Shift" translate="no">​</a></h2>
<p>We already have the fundamental tools for this job. Source control, automation runners, infrastructure as code, API calls...endless API calls. These aren't going anywhere. They're battle-tested, timeless, and they'll remain at the core of what we do in platform engineering. Even AI will ultimately read from and output to this.  The challenge isn't finding new tools, it's orchestrating the ones we have into coherent, user-friendly experiences.</p>
<p>What's interesting about AI assistants is that they can become like that experienced colleague who remembers not just what we did, but why we did it. They can hold onto the collective knowledge we've built up over time, understanding which tools to use, grasping the reasoning behind our decisions, and remembering the rules and governance that shaped those choices. This institutional/tribal memory becomes accessible through simple conversation instead of forcing people to dig through documentation or doing intensive knowledge transfers that still don't fully cover the breadth and depth of what we need to build and support.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="what-this-means-for-you">What This Means for You<a href="https://azureglobalblackbelts.com/2025/06/24/human-scale-problem-in-platform-engineering#what-this-means-for-you" class="hash-link" aria-label="Direct link to What This Means for You" title="Direct link to What This Means for You" translate="no">​</a></h2>
<p>The common thread across all engineering challenges (or any task really) is that they're fundamentally about scaling human capability, not just technical capability. The limiting factor in most organizations isn't compute capacity or network bandwidth...it's human cognitive capacity and the work items that are bound by human scale, such as time and speed.</p>
<p>Platform engineering recognizes this reality and focuses on <strong>amplifying human expertise</strong> rather than expecting people to become superhuman. It's about building systems that make complex operations incrementally more understandable, moving towards enabling teams to focus on solving business problems instead of fighting with infrastructure, and create sustainable pathways for specialists to collaborate effectively.</p>
<p>This isn't a problem we solve once and move on from. The challenges evolve as our organizations grow, as new technologies emerge, and as our understanding deepens. When we see a new pattern emerge that we've had a discussion about 5, 10, 20 times??? then we need as platform engineers to create a pattern for it.  The solutions we build today must be designed to adapt and evolve with us.</p>
<hr>
<p><strong>Next in this series</strong>: We'll dive into the specific challenge of scaling infrastructure complexity beyond human cognitive capacity, and explore how the productivity paradox is affecting development teams across the industry.</p>
<p><em>What's your experience with the human scale problem in your organization? Are you seeing similar patterns where solutions create new coordination challenges?</em></p>
<p>Cross Posted to: <a href="https://www.linkedin.com/pulse/human-scale-problem-platform-engineering-ray-kao-cnjhc/" target="_blank" rel="noopener noreferrer" class="">https://www.linkedin.com/pulse/human-scale-problem-platform-engineering-ray-kao-cnjhc/</a></p>
<p>#PlatformEngineering #DevOps #DeveloperExperience #AgenticDevOps #AzureGlobalBlackBelts #FieldNotes</p>]]></content>
        <author>
            <name>Ray Kao</name>
            <uri>https://github.com/raykao</uri>
        </author>
        <author>
            <name>Diego Casati</name>
            <uri>https://github.com/dcasati</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Updating AKS Network Plugin from Kubenet to Azure CNI]]></title>
        <id>https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni</id>
        <link href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni"/>
        <updated>2025-01-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A procedure on how to update an AKS cluster network plugin, from Kubenet to Azure CNI Overlay Mode.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="problem-statement">Problem Statement<a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#problem-statement" class="hash-link" aria-label="Direct link to Problem Statement" title="Direct link to Problem Statement" translate="no">​</a></h2>
<p>When updating an Azure Kubernetes Service (AKS) network plugin from <strong>kubenet</strong> to <strong>Azure CNI</strong>, performing the update directly using <strong>Terraform</strong> may result in the cluster being deleted and recreated. The Terraform plan typically indicates that the cluster will be replaced.</p>
<p>However, using <strong>Azure CLI (az cli)</strong>, the update can be successfully applied without deleting the cluster. Once that's done, you can import the state of the cluster back to terraform.</p>
<p>A validated approach to avoid cluster recreation involves the following steps:</p>
<ul>
<li class="">Perform the <strong>CNI update</strong> out-of-band using <strong>Azure CLI</strong>.</li>
<li class=""><strong>Import the state</strong> of the cluster back to Terraform.</li>
<li class="">Perform a <strong>Terraform refresh</strong> and a <strong>Terraform plan</strong> to validate the new state.</li>
</ul>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="procedure">Procedure<a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#procedure" class="hash-link" aria-label="Direct link to Procedure" title="Direct link to Procedure" translate="no">​</a></h2>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="step-1-perform-the-upgrade-using-azure-cli"><strong>Step 1: Perform the upgrade using Azure CLI</strong><a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#step-1-perform-the-upgrade-using-azure-cli" class="hash-link" aria-label="Direct link to step-1-perform-the-upgrade-using-azure-cli" title="Direct link to step-1-perform-the-upgrade-using-azure-cli" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">clusterName</span><span class="token operator">=</span><span class="token plain">aks-kubenet-cluster</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">resourceGroup</span><span class="token operator">=</span><span class="token plain">aks-kubenet-rg</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks update </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$clusterName</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$resourceGroup</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --network-plugin azure </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --network-plugin-mode overlay</span><br></span></code></pre></div></div>
<p>While is happening, AKS will create a new node, updated with the new network options. Once that is done, the older nodes will be removed, and eventually the entire cluster will be updated.</p>
<p><img decoding="async" loading="lazy" alt="AKS nodes" src="https://azureglobalblackbelts.com/assets/images/portal-0e44ee0818508065e4a706f15768dfca.jpg" width="1696" height="394" class="img_ev3q"></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="step-2-modify-terraform-configuration"><strong>Step 2: Modify Terraform Configuration</strong><a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#step-2-modify-terraform-configuration" class="hash-link" aria-label="Direct link to step-2-modify-terraform-configuration" title="Direct link to step-2-modify-terraform-configuration" translate="no">​</a></h3>
<p>Update the Terraform configuration to reflect the new <strong>Azure CNI</strong> network plugin settings.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">  network_profile {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_plugin = "azure"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    network_plugin_mode = "overlay"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="step-3-import-the-new-cluster-state-into-terraform"><strong>Step 3: Import the new cluster state into Terraform</strong><a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#step-3-import-the-new-cluster-state-into-terraform" class="hash-link" aria-label="Direct link to step-3-import-the-new-cluster-state-into-terraform" title="Direct link to step-3-import-the-new-cluster-state-into-terraform" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> azurerm_kubernetes_cluster.aks </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"/subscriptions/6edaa0d4-86e4-431f-a3e2-d027a34f03c9/resourceGroups/aks-kubenet-rg/providers/Microsoft.ContainerService/managedClusters/aks-kubenet-cluster"</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="step-4-run-terraform-refresh-and-plan"><strong>Step 4: Run Terraform Refresh and Plan</strong><a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#step-4-run-terraform-refresh-and-plan" class="hash-link" aria-label="Direct link to step-4-run-terraform-refresh-and-plan" title="Direct link to step-4-run-terraform-refresh-and-plan" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform refresh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform plan</span><br></span></code></pre></div></div>
<p>This ensures that Terraform recognizes the new state of the AKS cluster without attempting to recreate it.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2025/01/31/updating-aks-network-plugin-from-kubenet-to-azure-cni#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>By following this approach, it is possible to transition an <strong>AKS network plugin from kubenet to Azure CNI</strong> while avoiding unnecessary cluster deletion and recreation.</p>]]></content>
        <author>
            <name>Diego Casati</name>
            <uri>https://github.com/dcasati</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[End to End TLS Encryption with AKS and AFD]]></title>
        <id>https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls</id>
        <link href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls"/>
        <updated>2024-11-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Using Azure Front Door in-front of an in-cluster nginx ingress controller to provide end-to-end TLS encryption of application traffic.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="introduction">Introduction<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<p>In this walkthrough we'll create deploy an app with end to end TLS encryption, using Azure Front Door as the Internet Facing TLS endpoint and an Nginx Ingress controller running inside an AKS cluster as the backend.</p>
<p>We'll use Azure Key Vault to store the TLS certificate, and will use the Key Vault CSI Driver to get the secrets into the ingress controller. The Key Vault CSI Driver will use Azure Workload Identity to safely retrieve the certificate.</p>
<p>Let's get to it....</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="network-setup">Network Setup<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#network-setup" class="hash-link" aria-label="Direct link to Network Setup" title="Direct link to Network Setup" translate="no">​</a></h2>
<p>First, we'll need to establish the network where our AKS cluster will be deployed. Nothing special in our network design, other than the fact that I'm creating an Azure Network Security Group at the subnet level for added security.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Resource Group Creation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">E2ETLSLab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Resource Group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the resource group id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az group show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Set an environment variable for the VNet name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_NAME</span><span class="token operator">=</span><span class="token plain">lablab-vnet</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_ADDRESS_SPACE</span><span class="token operator">=</span><span class="token number">10.140</span><span class="token plain">.0.0/16</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_SUBNET_ADDRESS_SPACE</span><span class="token operator">=</span><span class="token number">10.140</span><span class="token plain">.0.0/24</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create an NSG at the subnet level for security reasons</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network nsg create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> aks-subnet-nsg</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the NSG ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">NSG_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network nsg show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> aks-subnet-nsg </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Vnet along with the initial subet for AKS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_ADDRESS_SPACE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--subnet-name aks </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--subnet-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AKS_SUBNET_ADDRESS_SPACE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--network-security-group aks-subnet-nsg</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get a subnet resource ID, which we'll need when we create the AKS cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_SUBNET_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet subnet show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG --vnet-name $VNET_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> aks </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h2>
<p>Now, lets create the AKS cluster where our workload and ingress controller will reside. This will be a very plain AKS cluster, however we will deploy to our above created subnet and will enable the following features:</p>
<ul>
<li class=""><em>Workload Identity:</em> This will be used by the Key Vault CSI Driver to retrieve the cluster certificate</li>
<li class=""><em>OIDC Issuer:</em> This is required by Workload Identity to be used during service account fedration</li>
<li class=""><em>Key Vault CSI Driver:</em> This will be used to retrieve the cluster certificate</li>
</ul>
<blockquote>
<p><em>Note:</em> Since I created a NSG at the subnet level, I'll need to create a custom role which will be used later for automated private link creation. If you don't have an NSG on the subnet, and just rely on the managed NSG that AKS owns, then you don't need to create the custom role documented below.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># NOTE: Make sure you give your cluster a unique name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">e2etlslab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Cluster Creation Command</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-count </span><span class="token number">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-addons azure-keyvault-secrets-provider </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--vnet-subnet-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_SUBNET_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_IDENTITY</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> identity.principalId</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">###################################################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant the cluster identity rights on the cluster nsg, which we'll need later when we create the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># private link.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># NOTE: These steps are only needed if you have a custom NSG on the cluster subnet.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the role definition file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> pl-nsg-role.json</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "Name": "Private Link AKS Role",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "Description": "Grants the cluster rights on the NSG for Private Link Creation",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "Actions": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "Microsoft.Network/networkSecurityGroups/join/action"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "NotActions": [],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "DataActions": [],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "NotDataActions": [],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "assignableScopes": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${RG_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the role definition in Azure</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role definition create --role-definition @pl-nsg-role.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Assign the role</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># NOTE: New role propegation may take a minute or to, so retry as needed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Private Link AKS Role"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_IDENTITY</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$NSG_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">###################################################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup-workload-identity">Setup Workload Identity<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#setup-workload-identity" class="hash-link" aria-label="Direct link to Setup Workload Identity" title="Direct link to Setup Workload Identity" translate="no">​</a></h2>
<p>Now that we have our cluster, lets finish setting up the workload identity that will be used to retrieve our certificate from Azure Key Vault.</p>
<blockquote>
<p><em>Note:</em> For simplicity, I'm keeping all resources in the 'default' namespace. You may want to modify this for your own deployment.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Set the namespace where we will deploy our app and ingress controller</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">NAMESPACE</span><span class="token operator">=</span><span class="token plain">default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the Tenant ID for later</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_TENANT</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az account show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tenantId</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> nginx-ingress-identity --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get identity client ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> nginx-ingress-identity </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service account to federate with the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ServiceAccount</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/client-id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: nginx-ingress-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${NAMESPACE}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> nginx-ingress-federated-id </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name nginx-ingress-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${NAMESPACE}</span><span class="token plain">:nginx-ingress-sa</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-azure-key-vault-and-upload-certificate">Create the Azure Key Vault and Upload Certificate<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#create-the-azure-key-vault-and-upload-certificate" class="hash-link" aria-label="Direct link to Create the Azure Key Vault and Upload Certificate" title="Direct link to Create the Azure Key Vault and Upload Certificate" translate="no">​</a></h2>
<p>Now, lets create our Azure Key Vault and then create and upload our certificate.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a key vault name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KEY_VAULT_NAME</span><span class="token operator">=</span><span class="token plain">e2elab</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the key vaule</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"> --enable-rbac-authorization </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant access to the secret for the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault set-policy </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> --certificate-permissions get </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--spn</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault set-policy </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> --secret-permissions get </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--spn</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span></code></pre></div></div>
<p>For certificate creation, I actually took two separate paths.</p>
<ul>
<li class=""><em>Option 1:</em> Use Azure <a href="https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-app-service-certificate?tabs=portal" target="_blank" rel="noopener noreferrer" class="">App Service Certificates</a> to create and manage the certificate.</li>
<li class=""><em>Option 2:</em> Use '<a href="https://letsencrypt.org/" target="_blank" rel="noopener noreferrer" class="">LetsEncrypt</a>' and <a href="https://certbot.eff.org/" target="_blank" rel="noopener noreferrer" class="">Certbot</a> to create the certificate.</li>
</ul>
<p>Both options are totally fine, but have slight differences in approach, which I'll highlight below. If you're working in a large enterprise, you'll likely have a completely separate internal process for getting a certificate. In the end, all we care about is that we have a valid cert and key file.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="option-1-app-service-certificates">Option 1: App Service Certificates<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#option-1-app-service-certificates" class="hash-link" aria-label="Direct link to Option 1: App Service Certificates" title="Direct link to Option 1: App Service Certificates" translate="no">​</a></h3>
<p>We won't cover all the details of setting up a certificate with App Service Certificates, but you can review the doc <a href="https://learn.microsoft.com/en-us/azure/app-service/configure-ssl-app-service-certificate?tabs=portal" target="_blank" rel="noopener noreferrer" class="">here</a> for those steps.</p>
<p>When I created the certificate, I told App Svc Certs to store the cert in the Key Vault just created. We'll use the <a href="https://learn.microsoft.com/en-us/azure/aks/csi-secrets-store-driver" target="_blank" rel="noopener noreferrer" class="">Key Vault CSI Driver</a> to mount the certificate into the ingress controller, but to do that we need to get the certficate into a format that the CSI driver can read. App Svc Certs stores the certificate in an Azure Key Vault in pfx format as a secret, but for the Key Vault CSI Driver we need it stored as a certificate. We can export the PFX from the Azure Key Vault Secret and then import it as a certificate.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">APP_CERT_NAME</span><span class="token operator">=</span><span class="token plain">e2elab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the secret name for the certificate in key vault</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SECRET_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az resource show --resource-group $RG --resource-type </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"Microsoft.CertificateRegistration/certificateOrders"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $APP_CERT_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"properties.certificates.</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_CERT_NAME</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">.keyVaultSecretName"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--output</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Download the certificate </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault secret download </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_CERT_NAME</span><span class="token plain">.pfx --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SECRET_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--encoding</span><span class="token plain"> base64</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Import the certificate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault certificate </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_CERT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_CERT_NAME</span><span class="token plain">.pfx</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="option-2-letsencryptcertbot">Option 2: LetsEncrypt/CertBot<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#option-2-letsencryptcertbot" class="hash-link" aria-label="Direct link to Option 2: LetsEncrypt/CertBot" title="Direct link to Option 2: LetsEncrypt/CertBot" translate="no">​</a></h3>
<p>I'm not going to get into all the specifics of using Certbot with LetsEncrypt, but the basic are as follows. The domain I'll be using is my 'crashoverride.nyc' domain.</p>
<ol>
<li class="">Get an internet reachable host capable of running a webserver on ports 80 and 443</li>
<li class="">Create an A-record for your target domain to the public IP of the server. This is required for hostname validation used by Certbot</li>
<li class="">Run the certbot command as a priviledged user on that web server host mentioned in #1 above</li>
</ol>
<p>Here's a sample of the command I used to create a cert with two entries in the certificate Subject Alternate Names:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> certbot certonly --key-type rsa </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--standalone</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> e2elab.crashoverride.nyc </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> www.crashoverride.nyc</span><br></span></code></pre></div></div>
<p>Certbot creates several files, all with the PEM file extension. This is misleading, as fullchain.pem is the 'crt' file and the privkey.pem is the 'key' file. To store these in Azure Key Vault as certs we'll need to package these files up in a PFX format.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">APP_CERT_NAME</span><span class="token operator">=</span><span class="token plain">crashoverride</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># export to pfx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># skipping the Password prompt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">openssl pkcs12 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-export</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-passout</span><span class="token plain"> pass: </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-in</span><span class="token plain"> fullchain.pem </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-inkey</span><span class="token plain"> privkey.pem  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-out</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${APP_CERT_NAME}</span><span class="token plain">.pfx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Import the certificate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault certificate </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_CERT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_CERT_NAME</span><span class="token plain">.pfx</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-up-the-key-vault-csi-secret-provider-class">Set up the Key Vault CSI Secret Provider Class<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#set-up-the-key-vault-csi-secret-provider-class" class="hash-link" aria-label="Direct link to Set up the Key Vault CSI Secret Provider Class" title="Direct link to Set up the Key Vault CSI Secret Provider Class" translate="no">​</a></h2>
<p>Great! Now we have our network, cluster, key vault and secrets ready to go. We can now create our SecretProviderClass, which is the link between our Kubernetes resources and the secret in Azure Key Vault. We'll actually use this SecretProviderClass to mount the certificate into our ingress controller.</p>
<blockquote>
<p><em>Note:</em> The Key Vault CSI driver uses the Kubernetes Container Storage Interface to initiate it's connection to Key Vault. That means, even though we really only care about having the certificate as a Kubernetes secret for use in our ingress definition, we still need to mount the secret as a volume to create the Kubernetes Secret. We'll mount the certificate secret to the ingress controller, but you could mount it to your app alternatively, especially if you plan to use the certificate in your app directly as well.</p>
</blockquote>
<p>When you create a certificate in Azure Key Vault and then use the Key Vault CSI driver to access that certificate, you use the 'secret' object type and the certificate name. The returned secret contains the certificate key and crt file using the names tls.key and tls.crt.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># We'll cat the SecretProviderClass direclty into kubectl</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You could also just cat it out to a file and use that file to deploy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: secrets-store.csi.x-k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: SecretProviderClass</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: crashoverride-tls</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${NAMESPACE}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  provider: azure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  secretObjects:                            # secretObjects defines the desired state of synced K8s secret objects</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - secretName: crashoverride-tls-csi</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      type: kubernetes.io/tls</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      data: </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - objectName: crashoverride</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          key: crashoverride.key</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - objectName: crashoverride</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          key: crashoverride.crt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  parameters:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    usePodIdentity: "false"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    clientID: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    keyvaultName: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${KEY_VAULT_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">                 # the name of the AKV instance</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    objects: |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      array:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectName: crashoverride</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectType: secret</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    tenantId: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_TENANT}</span><span class="token string" style="color:rgb(255, 121, 198)">                    # the tenant ID of the AKV instance</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="deploy-the-ingress-controller">Deploy the Ingress Controller<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#deploy-the-ingress-controller" class="hash-link" aria-label="Direct link to Deploy the Ingress Controller" title="Direct link to Deploy the Ingress Controller" translate="no">​</a></h2>
<p>Now we're ready to create our ingress controller. For our purposes, and for it's simplicity, we're going to use ingress-nginx. The approach will be roughly the same for any ingress controller.</p>
<p>There are a few key points to note in the deployment below.</p>
<ol>
<li class="">We want our ingress controller to be on an internal network with no public IP, since Azure Front Door will provide the public endpoint. To do that we'll need to apply the 'azure-load-balancer-internal' annotation.</li>
<li class="">Azure Front Door can only connect to a private IP address using an Azure Private Link Service. Fortunately, AKS provides the 'azure-pls-create' annotation which will automatically create and manage a private link for you.</li>
<li class="">As mentioned above, since we're using the Key Vault CSI Driver, we need to mount the Secret Provider Class using the secret-store driver.</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm repo </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> ingress-nginx https://kubernetes.github.io/ingress-nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm repo update</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Generate the values file we'll use to deploy ingress-nginx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> nginx-ingress-values.yaml</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">serviceAccount:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  create: false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: nginx-ingress-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">controller:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  replicaCount: 2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  service:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      service.beta.kubernetes.io/azure-load-balancer-internal: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      service.beta.kubernetes.io/azure-pls-create: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  extraVolumes:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: crashoverride-secret-store</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        csi:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          driver: secrets-store.csi.k8s.io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          readOnly: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          volumeAttributes:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            secretProviderClass: "crashoverride-tls"            </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  extraVolumeMounts:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: crashoverride-secret-store</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        mountPath: "/mnt/crashoverride"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        readOnly: true        </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Deploy ingress-nginx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> e2elab-ic ingress-nginx/ingress-nginx </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$NAMESPACE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> nginx-ingress-values.yaml</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="deploy-a-sample-app">Deploy a Sample App<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#deploy-a-sample-app" class="hash-link" aria-label="Direct link to Deploy a Sample App" title="Direct link to Deploy a Sample App" translate="no">​</a></h2>
<p>We'll need a sample app to test our configuration. I personally like the '<a href="https://github.com/cilium/echoserver" target="_blank" rel="noopener noreferrer" class="">echoserver</a>' app from the cilium team. It's nice, as it returns the HTTP headers as the web response, which can be very useful in http request testing.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: aks-helloworld </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  replicas: 1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    matchLabels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      app: aks-helloworld</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  template:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        app: aks-helloworld</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: aks-helloworld</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        image: cilium/echoserver</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - containerPort: 8080</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        env:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - name: PORT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          value: '8080'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">---</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: aks-helloworld</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  type: ClusterIP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  - port: 8080</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    app: aks-helloworld</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>Now we can deploy the ingress defintion. Look out for the following:</p>
<ol>
<li class="">The 'tls' section maps the inbound TLS request to the appropriate certificate secret</li>
<li class="">The 'rules' section maps the target host name to the backend service that should be targetted</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token plain">EOF</span><span class="token operator">|</span><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">apiVersion: networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kind: Ingress</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name: crashoverride-ingress-tls</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    nginx.ingress.kubernetes.io/use-regex: </span><span class="token string" style="color:rgb(255, 121, 198)">"true"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    nginx.ingress.kubernetes.io/rewrite-target: /</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ingressClassName: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  tls:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - hosts:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    - e2elab.crashoverride.nyc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    secretName: crashoverride-tls-csi </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  rules:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - host: e2elab.crashoverride.nyc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    http:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      paths:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      - path: /hello-world</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        pathType: Prefix</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        backend:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          service:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            name: aks-helloworld</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            port:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              number: </span><span class="token number">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">EOF</span><br></span></code></pre></div></div>
<p>Since we haven't set up the Azure Front Door yet, we cant access the app on the public IP yet. We can fake this out, however, with some curl magic. curl lets you call a local endpoint and pretend like you're connecting to a different host name. We'll need this for our ingress certificate to work.</p>
<p>First we port-forward and then we'll curl with some special options.</p>
<blockquote>
<p><em>Note:</em> If you prefer, you can also just edit your local 'hosts' file to fake out the DNS lookup. Just create an entry that maps your local loopback address (127.0.0.1) to your DNS name.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># In terminal 1, port-forward to the ingress nginx service name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl port-forward svc/e2elab-ic-ingress-nginx-controller </span><span class="token number">8443</span><span class="token plain">:443</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># In terminal 2 run a curl like the following, changing out for your host name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-v</span><span class="token plain"> https://e2elab.crashoverride.nyc/hello-world --connect-to e2elab.crashoverride.nyc:443:127.0.0.1:8443</span><br></span></code></pre></div></div>
<p>You should have seen a successful TLS handshake with your certificate and proper hostname.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Example</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">* Server certificate:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">*  subject: </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CN</span><span class="token operator">=</span><span class="token plain">e2elab.crashoverride.nyc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">*  start date: Oct </span><span class="token number">31</span><span class="token plain"> </span><span class="token number">16</span><span class="token plain">:35:44 </span><span class="token number">2024</span><span class="token plain"> GMT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">*  expire date: Jan </span><span class="token number">29</span><span class="token plain"> </span><span class="token number">16</span><span class="token plain">:35:43 </span><span class="token number">2025</span><span class="token plain"> GMT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">*  subjectAltName: </span><span class="token function" style="color:rgb(80, 250, 123)">host</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"e2elab.crashoverride.nyc"</span><span class="token plain"> matched cert</span><span class="token string" style="color:rgb(255, 121, 198)">'s "e2elab.crashoverride.nyc"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">*  issuer: C=US; O=Let'</span><span class="token plain">s Encrypt</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CN</span><span class="token operator">=</span><span class="token plain">R10</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">*  SSL certificate verify ok.</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-azure-front-door">Create the Azure Front Door<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#create-the-azure-front-door" class="hash-link" aria-label="Direct link to Create the Azure Front Door" title="Direct link to Create the Azure Front Door" translate="no">​</a></h2>
<p>Now that the backend is working, lets wire up the Azure Front Door.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Azure Front Door</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az afd profile create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--profile-name e2elab </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Premium_AzureFrontDoor</span><br></span></code></pre></div></div>
<p>We'll do the rest in the Azure Portal, so open a browser to <a href="https://portal.azure.com/" target="_blank" rel="noopener noreferrer" class="">https://portal.azure.com</a>.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="link-the-certificate-to-the-afd">Link the certificate to the AFD.<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#link-the-certificate-to-the-afd" class="hash-link" aria-label="Direct link to Link the certificate to the AFD." title="Direct link to Link the certificate to the AFD." translate="no">​</a></h3>
<p>To use our certificate with Azure Front Door, we need to attach the certificate in Azure Key Vault to an Front Door Secret. We do this in the 'Secrets' pane under 'Security'.</p>
<p><img decoding="async" loading="lazy" alt="link certificate" src="https://azureglobalblackbelts.com/assets/images/linkcert-aefeafab109f97330d25e8bdb2a7f4da.jpg" width="1514" height="820" class="img_ev3q"></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-custom-domain-configuration">Create the Custom Domain Configuration<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#create-the-custom-domain-configuration" class="hash-link" aria-label="Direct link to Create the Custom Domain Configuration" title="Direct link to Create the Custom Domain Configuration" translate="no">​</a></h3>
<p>Now we tell AFD what domain we'd like to use and link that domain name to the associated secret that we just created for our certificate.</p>
<p><img decoding="async" loading="lazy" alt="afd add domain 1" src="https://azureglobalblackbelts.com/assets/images/afd-adddomain1-d2c537a5bdcdeb7f3e901d1bf50d8da2.jpg" width="826" height="499" class="img_ev3q"></p>
<p>Next we select the appropriate secret for our domain.</p>
<p><img decoding="async" loading="lazy" alt="afd add domain 2" src="https://azureglobalblackbelts.com/assets/images/afd-adddomain2-b9ed436d9cc4feddaefa36690b784893.jpg" width="1240" height="826" class="img_ev3q"></p>
<p>Finally, we see the domain entry created and pending association with an endpoint.</p>
<p><img decoding="async" loading="lazy" alt="afd add domain 3" src="https://azureglobalblackbelts.com/assets/images/afd-adddomain3-0a8251c81e3a5d6d33d6dd87d4016bcc.jpg" width="1517" height="324" class="img_ev3q"></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-origin-group">Create the Origin Group<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#create-the-origin-group" class="hash-link" aria-label="Direct link to Create the Origin Group" title="Direct link to Create the Origin Group" translate="no">​</a></h3>
<p>Front Door is acting as the entry point to our backend, which is referred to as the 'Origin'.</p>
<p>Creating the origin group is a two step process. You create the origin group, but as part of that you also add the origin hostname configuration. As part of that origin hostname setup you will check the 'Enable Private Link Service' option, which will allow you to select the private link that was automatically created by AKS for your ingress-nginx deployment. This is why the service annotation was so important when you deployed ingress-nginx.</p>
<p>You'll provide a message that will show up on the private link approval side. This message can be whatever you want.</p>
<p><img decoding="async" loading="lazy" alt="origin setup 1" src="https://azureglobalblackbelts.com/assets/images/origin-setup1-ccba7b8a83371b1b42ea8395b4d40173.jpg" width="1542" height="1054" class="img_ev3q"></p>
<p>Now we complete our origin setup, making sure to set the right path to our ingress health probe. In our case, the URL will forward to '/hello-world', as we know this will return an HTTP 200 response. If you have your own health endpoint, you can set that here.</p>
<p><img decoding="async" loading="lazy" alt="origin setup 2" src="https://azureglobalblackbelts.com/assets/images/origin-setup2-2f7dcaf794d0a289b31aca9b72ee361b.jpg" width="1552" height="1045" class="img_ev3q"></p>
<p>Now we see that our origin is created, but still pending association with an endpoint.</p>
<p><img decoding="async" loading="lazy" alt="origin setup 3" src="https://azureglobalblackbelts.com/assets/images/origin-setup3-b13fef5f35c4a4a367f3b6d2f6d179a0.jpg" width="1561" height="502" class="img_ev3q"></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-afd-endpoint">Create the AFD Endpoint<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#create-the-afd-endpoint" class="hash-link" aria-label="Direct link to Create the AFD Endpoint" title="Direct link to Create the AFD Endpoint" translate="no">​</a></h3>
<p>In 'Front Door manager' select 'Add an endpoint' and give the endpoint a name. Make note of the FQDN is provides. This will be used in our DNS for the CNAME.</p>
<p><img decoding="async" loading="lazy" alt="add an endpoint 1" src="https://azureglobalblackbelts.com/assets/images/addendpoint1-8a7657fa4dee42db284d4b38c7003bfd.jpg" width="1094" height="554" class="img_ev3q"></p>
<p>Now we'll add a route by clicking 'Add a route'.</p>
<p><img decoding="async" loading="lazy" alt="add an endpoint 2" src="https://azureglobalblackbelts.com/assets/images/addendpoint2-99a313ff2cd2b776d3c1dc23157ee62f.jpg" width="1472" height="571" class="img_ev3q"></p>
<p>In the 'add route' screen, we'll select our origin and the associated domain, and set any additional options. At this point, you should also make note of the endpoint FQDN, which we'll need to use as our CNAME in our DNS for our host name.</p>
<p><img decoding="async" loading="lazy" alt="add an endpoint 3" src="https://azureglobalblackbelts.com/assets/images/addendpoint3-c06fd89920842350cdc44dc39ab7ebaf.jpg" width="929" height="1157" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="add an endpoint 4" src="https://azureglobalblackbelts.com/assets/images/addendpoint4-f8ddd53f17f80fc96dea5563f8a8022c.jpg" width="862" height="270" class="img_ev3q"></p>
<p>When finished, your endpoint should look as follows.</p>
<p><img decoding="async" loading="lazy" alt="add an endpoint 5" src="https://azureglobalblackbelts.com/assets/images/addendpoint5-89e54f6811a19af215df9063f4d68702.jpg" width="1142" height="429" class="img_ev3q"></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="update-your-dns">Update your DNS<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#update-your-dns" class="hash-link" aria-label="Direct link to Update your DNS" title="Direct link to Update your DNS" translate="no">​</a></h3>
<p>We need our DNS name to point to the Azure Front Door endpoint, so we'll take that Front Door provided FQDN and create a CNAME record.</p>
<p><img decoding="async" loading="lazy" alt="dns cname entry" src="https://azureglobalblackbelts.com/assets/images/dnscname-8fbedb12cb53f94762424bf996a3d132.jpg" width="1156" height="108" class="img_ev3q"></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="approve-the-private-link-request">Approve the Private Link request<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#approve-the-private-link-request" class="hash-link" aria-label="Direct link to Approve the Private Link request" title="Direct link to Approve the Private Link request" translate="no">​</a></h3>
<p>Ok, so we associated the Azure Front Door origin with our private link, but we never approved the private link association request. To do that, we'll need to go to the AKS managed cluster (MC_) resource group. Lets get that resource group name and then go approve the request.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the managed cluster resource group name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_CLUSTER_MC_RG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> nodeResourceGroup</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<p>Back in the Azure Portal, navigate to the Managed Cluster Resource Group and find the private link.</p>
<p><img decoding="async" loading="lazy" alt="approve private link 1" src="https://azureglobalblackbelts.com/assets/images/approvepl1-87e675028c6844a6ca14ba78885ab29e.jpg" width="1597" height="783" class="img_ev3q"></p>
<p>Click on the 'Private endpoint connections' where you should see a pending request.</p>
<p><img decoding="async" loading="lazy" alt="approve private link 2" src="https://azureglobalblackbelts.com/assets/images/approvepl2-c958b49e159cb530586c4ae8847aaaf7.jpg" width="1500" height="445" class="img_ev3q"></p>
<p>Select the private link and click 'Approve'.</p>
<p><img decoding="async" loading="lazy" alt="approve private link 3" src="https://azureglobalblackbelts.com/assets/images/approvepl3-70628f6d17487ce753fcacaade5dd549.jpg" width="663" height="201" class="img_ev3q"></p>
<p>You'll see a dialog box with the message you sent when creating the origin connection.</p>
<p><img decoding="async" loading="lazy" alt="approve private link 4" src="https://azureglobalblackbelts.com/assets/images/approvepl4-61865f245d88072ea396e0da64fc1d21.jpg" width="773" height="224" class="img_ev3q"></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="test">Test<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#test" class="hash-link" aria-label="Direct link to Test" title="Direct link to Test" translate="no">​</a></h2>
<p>You should now be able to open a browser and navigate to your URL. You can also test with curl.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> https://e2elab.crashoverride.nyc/hello-world</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##########################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##########################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Hostname: aks-helloworld-fbdf59bf-qtdks</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Pod Information:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-no</span><span class="token plain"> pod information available-</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Server values:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">server_version</span><span class="token operator">=</span><span class="token plain">nginx: </span><span class="token number">1.13</span><span class="token plain">.3 - lua: </span><span class="token number">10008</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Request Information:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">client_address</span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">method</span><span class="token operator">=</span><span class="token plain">GET</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	real </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">path</span><span class="token operator">=</span><span class="token plain">/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">query</span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">request_version</span><span class="token operator">=</span><span class="token number">1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">request_scheme</span><span class="token operator">=</span><span class="token plain">http</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">request_uri</span><span class="token operator">=</span><span class="token plain">http://e2elab.crashoverride.nyc:8080/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Request Headers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">accept</span><span class="token operator">=</span><span class="token plain">*/*</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">host</span><span class="token operator">=</span><span class="token plain">e2elab.crashoverride.nyc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	user-agent</span><span class="token operator">=</span><span class="token plain">curl/8.7.1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">via</span><span class="token operator">=</span><span class="token plain">HTTP/2.0 Azure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-azure-clientip</span><span class="token operator">=</span><span class="token number">70.18</span><span class="token plain">.42.220</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-azure-fdid</span><span class="token operator">=</span><span class="token plain">c7e0d3e0-830a-4770-acae-14d27c7726f8</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-azure-ref</span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-azure-requestchainv2</span><span class="token operator">=</span><span class="token plain">hops</span><span class="token operator">=</span><span class="token number">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-azure-socketip</span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-forwarded-for</span><span class="token operator">=</span><span class="token number">10.140</span><span class="token plain">.0.5</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-forwarded-host</span><span class="token operator">=</span><span class="token plain">e2elab.crashoverride.nyc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-forwarded-port</span><span class="token operator">=</span><span class="token number">443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-forwarded-proto</span><span class="token operator">=</span><span class="token plain">https</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-forwarded-scheme</span><span class="token operator">=</span><span class="token plain">https</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-original-forwarded-for</span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-real-ip</span><span class="token operator">=</span><span class="token number">10.140</span><span class="token plain">.0.5</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-request-id</span><span class="token operator">=</span><span class="token plain">8f41e792d8f0f74e90ddca9d14ba896b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	x-scheme</span><span class="token operator">=</span><span class="token plain">https</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Request Body:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	</span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-no</span><span class="token plain"> body </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> request-</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2024/11/05/afd-aks-ingress-tls#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>Congrats! You should now have a working Azure Front Door directing TLS secured traffic to an in cluster ingress controller!</p>
<blockquote>
<p><em>Note:</em> In this walk through we did not add encryption between the ingress controller and the backend deployment. This can be done by sharing the same, or different, certificate to the deployment pods. You then enable backend encryption on the ingress controller. Alternatively, you could use a service mesh between the ingress and the backend deployment.</p>
</blockquote>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Multi-Cluster Layer 4 Load Balancing with Fleet Manager]]></title>
        <id>https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager</id>
        <link href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager"/>
        <updated>2024-09-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to configure a multi-cluster layer 4 load balancer across multiple AKS clusters using Fleet Manager.]]></summary>
        <content type="html"><![CDATA[<p>This guide demonstrates how to set up layer 4 load balancing across multiple AKS clusters using
Azure Fleet Manager. We’ll create two AKS clusters in different regions (East US and West US),
configure Virtual Network (VNet) peering between them, and deploy a demo application using
Fleet Manager. The process covers AKS cluster setup, VNet peering, Fleet Manager configuration,
and application deployment across regions.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="topology">Topology<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#topology" class="hash-link" aria-label="Direct link to Topology" title="Direct link to Topology" translate="no">​</a></h3>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------------------+          +-----------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|    AKS Cluster (East) |          |    AKS Cluster (West) |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|  Region: East US      |          |  Region: West US      |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|                       |          |                       |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">| +-------------------+ |          | +-------------------+ |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">| |   Application     | |          | |   Application     | |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">| +-------------------+ |          | +-------------------+ |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|                       |          |                       |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------------------+          +-----------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          |                                      |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          +--------------------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        VNet Peering</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">             +-----------------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">             |    Fleet Manager (Hub Region)     |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">             +-----------------------------------+</span><br></span></code></pre></div></div>
<ul class="contains-task-list containsTaskList_mC6p">
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->AKS Cluster (East): A Kubernetes cluster deployed in the East US region.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->AKS Cluster (West): A Kubernetes cluster deployed in the West US region.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->VNet Peering: Virtual Network peering between the AKS clusters to enable communication.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <!-- -->Fleet Manager: Azure Fleet Manager deployed in the hub region, managing the application across both AKS clusters.</li>
</ul>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-two-aks-clusters">Create two AKS clusters<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#create-two-aks-clusters" class="hash-link" aria-label="Direct link to Create two AKS clusters" title="Direct link to Create two AKS clusters" translate="no">​</a></h3>
<p>For this demo, we will create two AKS clusters in two regions: East and West.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-cluster-in-east-us">Create the cluster in East US<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#create-the-cluster-in-east-us" class="hash-link" aria-label="Direct link to Create the cluster in East US" title="Direct link to Create the cluster in East US" translate="no">​</a></h4>
<p>The first step is to setup all of the environment variables that we will use</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># ======================</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Environment Variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ======================</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOCATION_EAST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"eastus2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOCATION_WEST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"westus2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_EAST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"rg-aks-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$LOCATION_EAST</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_WEST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"rg-aks-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$LOCATION_WEST</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_EAST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"aks-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$LOCATION_EAST</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_WEST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"aks-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$LOCATION_WEST</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FLEET_RESOURCE_GROUP_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"rg-fleet"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FLEET</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"gbb-fleet"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FLEET_LOCATION</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"westus"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># VNET</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_EAST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"aks-vnet-east"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_WEST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"aks-vnet-west"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_EAST_PREFIX</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"10.1.0.0/16"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_WEST_PREFIX</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"10.2.0.0/16"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Non-overlapping CIDR ranges</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CIDR_EAST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"10.1.0.0/24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CIDR_WEST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"10.2.0.0/24"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Subnet names</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_EAST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"aks-subnet-east"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_WEST</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"aks-subnet-west"</span><br></span></code></pre></div></div>
<p>We can now proceed with the creation of the first cluster</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a resource group for the cluster in East US</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${LOCATION_EAST}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a vNet for the West US cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --address-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_EAST_PREFIX}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --subnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${SUBNET_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --subnet-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CIDR_EAST}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Retrieve the subnet id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_ID_EAST</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet subnet show </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  --vnet-name $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create an AKS cluster with Azure CNI</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --network-plugin azure </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --vnet-subnet-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${SUBNET_ID_EAST}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># get the cluster credentials (East US)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><br></span></code></pre></div></div>
<p>Now repeat the same process for the cluster in West US:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a resource group for the cluster in West US</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${LOCATION_WEST}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a vNet for the West US cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --address-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_WEST_PREFIX}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --subnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${SUBNET_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --subnet-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CIDR_WEST}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Retrieve the subnet id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_ID_WEST</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet subnet show </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  --vnet-name $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">  </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create an AKS cluster with Azure CNI</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --network-plugin azure </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --vnet-subnet-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${SUBNET_ID_WEST}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># get the cluster credentials (West US)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_WEST}</span><br></span></code></pre></div></div>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-vnets-and-peer-them">Create the VNets and peer them<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#create-the-vnets-and-peer-them" class="hash-link" aria-label="Direct link to Create the VNets and peer them" title="Direct link to Create the VNets and peer them" translate="no">​</a></h4>
<p>Peer the VNets between East and West US:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Peer VNets between East and West</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_ID_EAST</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet show --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_ID_WEST</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet show --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create VNet peering from east to west</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet peering create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> EastToWestPeering </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --vnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --remote-vnet </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_ID_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --allow-vnet-access</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create VNet peering from west to east</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet peering create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> WestToEastPeering </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --vnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --remote-vnet </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VNET_ID_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --allow-vnet-access</span><br></span></code></pre></div></div>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-a-fleet-manager-and-add-members-to-it">Create a Fleet Manager and add members to it<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#create-a-fleet-manager-and-add-members-to-it" class="hash-link" aria-label="Direct link to Create a Fleet Manager and add members to it" title="Direct link to Create a Fleet Manager and add members to it" translate="no">​</a></h4>
<p>Add the fleet extension to Azure CLI</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">az extension </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> fleet</span><br></span></code></pre></div></div>
<p>Create the Fleet Manager resource</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_LOCATION}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># create fleet resource</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az fleet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_LOCATION}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --enable-hub</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Fleet Manager credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az fleet get-credentials </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FLEET_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az fleet show --resource-group </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">$FLEET_RESOURCE_GROUP_NAME</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">$FLEET</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable operator" style="color:rgb(189, 147, 249);font-style:italic">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az ad signed-in-user show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--output</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ROLE</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Azure Kubernetes Fleet Manager RBAC Cluster Admin"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$ROLE</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$IDENTITY</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_ID}</span><br></span></code></pre></div></div>
<p>Retrieve the Cluster IDs for East and West clusters:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Retrieve Cluster IDs (East and West)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_EAST_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_EAST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_WEST_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_WEST</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"AKS EAST cluster id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_EAST_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"AKS WEST cluster id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_WEST_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span></code></pre></div></div>
<p>Now join both clusters to the Fleet:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># join the East US cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az fleet member create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --fleet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --member-cluster-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_EAST_ID}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># join the West US cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az fleet member create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --fleet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_WEST}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --member-cluster-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_WEST_ID}</span><br></span></code></pre></div></div>
<p>Check if everything was setup correctly</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token plain">gbb-fleet kubectl get memberclusters</span><br></span></code></pre></div></div>
<p>You should see an output similar to this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">NAME          JOINED   AGE     MEMBER-AGENT-LAST-SEEN   NODE-COUNT   AVAILABLE-CPU   AVAILABLE-MEMORY</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">aks-eastus2   True     11m     5s                       </span><span class="token number">3</span><span class="token plain">            4196m           17827580Ki</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">aks-westus2   True     9m24s   11s                      </span><span class="token number">3</span><span class="token plain">            4196m           17827580Ki</span><br></span></code></pre></div></div>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="deploy-the-aks-store-application">Deploy the AKS store application<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#deploy-the-aks-store-application" class="hash-link" aria-label="Direct link to Deploy the AKS store application" title="Direct link to Deploy the AKS store application" translate="no">​</a></h4>
<p>For this next step, we will deploy the AKS Store demo application to both clusters,
East and West, using Fleet. Fleet Manager will work as a centralized hub, sending the
configuration and deployment files to its member clusters.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># create the namespace for the application</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> kubectl create ns aks-store-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># deploy the application on both clusters thru Fleet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-store-demo </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain">  https://raw.githubusercontent.com/Azure-Samples/aks-store-demo/main/aks-store-ingress-quickstart.yaml</span><br></span></code></pre></div></div>
<p>Let's pause for a moment and see what we have done. At this stage, we have done the following:</p>
<ul>
<li class="">Two AKS cluster, one in East US and another in West US.</li>
<li class="">We have connected the vNets of these two clusters using vNet Peering.</li>
<li class="">A hub AKS Fleet Manager was deployed and the two clusters were added as its members.</li>
<li class="">The AKS Store Demo application was deployed on both clusters (East US and West US) through Fleet.</li>
</ul>
<p>Our next step now is to leverage three components from AKS Fleet Manager: Service Export, Multi Cluster Service and Cluster Resource Placement.</p>
<table><thead><tr><th>Feature</th><th>Purpose</th><th>Use Case</th><th>How It Works</th></tr></thead><tbody><tr><td><strong>ServiceExport</strong></td><td>Exports a service from a member cluster to other clusters as a Fleet resource. This can then be used for cross-cluster service load balancing.</td><td>Exposing a backend service from Cluster A to Cluster B within the AKS Fleet.</td><td>A Kubernetes service is marked as "exported" so it can be discovered and imported by other clusters. e.g.: exporting the <code>store-front</code> service from the <code>aks-store-demo</code> namespace</td></tr><tr><td><strong>ClusterResourcePlacement</strong></td><td>Allows the deployment of Kubernetes resources across fleet members.</td><td>Automatically deploying an application, config maps, or secrets to all clusters in a region.</td><td>Selects target member clusters based on labels and ensures the specified resources are synchronized across them. e.g.: match on <code>fleet.azure.com/location</code> being <code>eastus2</code> or <code>westus2</code></td></tr><tr><td><strong>MultiClusterService</strong></td><td>A resource that allows the user to setup a Layer 4 multi-cluster load balancing solution across the fleet.</td><td>Load balancing requests to a frontend service running in multiple AKS clusters.</td><td>Automatically detects exported services and provides a unified endpoint that distributes traffic across clusters. e.g.: expose the <code>store-front</code> service</td></tr></tbody></table>
<p>Create the Service Export:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> aks-store-serviceexport.yaml</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: networking.fleet.azure.com/v1alpha1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ServiceExport</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: store-front</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: aks-store-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-store-demo </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> aks-store-serviceexport.yaml</span><br></span></code></pre></div></div>
<p>Verify that the service export was deployed:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> kubectl </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-store-demo get serviceexport</span><br></span></code></pre></div></div>
<p>You should see an output similar to this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">NAME          IS-VALID   IS-CONFLICTED   AGE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">store-front                              2m4s</span><br></span></code></pre></div></div>
<p>Create the ClusterResourcePlacement (CRP):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> cluster-resource-placement.yaml</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: placement.kubernetes-fleet.io/v1beta1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ClusterResourcePlacement</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: aks-store-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  resourceSelectors:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - group: ""</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      version: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      kind: Namespace</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      name: aks-store-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  policy:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    affinity:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      clusterAffinity:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        requiredDuringSchedulingIgnoredDuringExecution:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          clusterSelectorTerms:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            - labelSelector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                matchExpressions:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                  - key: fleet.azure.com/location</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                    operator: In</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                    values:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                      - </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${LOCATION_EAST}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                      - </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${LOCATION_WEST}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> cluster-resource-placement.yaml</span><br></span></code></pre></div></div>
<p>Verify that the CRP was created:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET}</span><span class="token plain"> kubectl get ClusterResourcePlacement</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">NAME             GEN   SCHEDULED   SCHEDULED-GEN   AVAILABLE   AVAILABLE-GEN   AGE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">aks-store-demo   </span><span class="token number">2</span><span class="token plain">     True        </span><span class="token number">2</span><span class="token plain">               True        </span><span class="token number">2</span><span class="token plain">               110s</span><br></span></code></pre></div></div>
<p>Create and deploy MultiClusterService (MCS):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> aks-store-mcs.yaml</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: networking.fleet.azure.com/v1alpha1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: MultiClusterService</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: store-front</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: aks-store-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  serviceImport:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    name: store-front</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Deploy the MultiClusterService resource to the East US cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> aks-store-mcs.yaml</span><br></span></code></pre></div></div>
<p>Verify that the MCS was deployed and that the <code>IS_VALID</code> field is showing <code>True</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> kubectl </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-store-demo get mcs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">NAME          SERVICE-IMPORT   EXTERNAL-IP    IS-VALID   AGE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">store-front   store-front      </span><span class="token number">20.7</span><span class="token plain">.120.195   True       55s</span><br></span></code></pre></div></div>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="testing-the-application">Testing the Application<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#testing-the-application" class="hash-link" aria-label="Direct link to Testing the Application" title="Direct link to Testing the Application" translate="no">​</a></h4>
<p>Once the MultiClusterService (MCS) has been successfully deployed across the AKS clusters, you can test the application to ensure it's working properly. Follow these steps to verify the setup:</p>
<p><strong>Get the external IP address of the service</strong>:</p>
<p>After deploying the MultiClusterService, you need to retrieve the external IP address to access the service. Run the following command to get the external IP for the East-US cluster:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> kubectl get services </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> fleet-system</span><br></span></code></pre></div></div>
<p>Look for the external IP under the EXTERNAL-IP column for the store-front service.</p>
<p><strong>Access the application</strong>:</p>
<p>Once you have the external IP addresses from both clusters, open a browser or use curl to access the application using the IP addresses:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> http://</span><span class="token operator">&lt;</span><span class="token plain">EXTERNAL_IP</span><span class="token operator">&gt;</span><br></span></code></pre></div></div>
<p>Replace <code>&lt;EXTERNAL_IP&gt;</code> with the actual external IP you retrieved from the previous step. The application should be accessible through either of the IPs.</p>
<p>Validate cross-region load balancing:</p>
<p>Since the <code>MultiClusterService</code> has been deployed across multiple regions, traffic can be balanced between the AKS clusters. You can simulate
traffic from different regions using tools like curl, Postman, or load-testing utilities to confirm that the service is responding from both regions.</p>
<p><strong>Verify service status</strong>:</p>
<p>You can check the status of the deployed services and pods on both clusters to ensure everything is running correctly:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_EAST}</span><span class="token plain"> kubectl get pods </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-store-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KUBECONFIG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_WEST}</span><span class="token plain"> kubectl get pods </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-store-demo</span><br></span></code></pre></div></div>
<p>Ensure that all services and pods show a Running status, indicating that the application is running across both clusters.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="remove-the-setup">Remove the setup<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#remove-the-setup" class="hash-link" aria-label="Direct link to Remove the setup" title="Direct link to Remove the setup" translate="no">​</a></h4>
<p>To remove this setup, you can run the following set of commands:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># East cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group delete </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_EAST}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--yes</span><span class="token plain"> --no-wait</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># West cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group delete </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_WEST}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--yes</span><span class="token plain"> --no-wait</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Fleet Hub</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group delete </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${FLEET_RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--yes</span><span class="token plain"> --no-wait</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2024/09/06/multi-cluster-layer-4-load-balancing-with-fleet-manager#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h3>
<p>In this guide, we successfully set up a multi-cluster layer 4 load balancer across
AKS clusters using Azure Fleet Manager. By configuring AKS clusters in different regions,
establishing VNet peering, and utilizing Fleet Manager, we enabled centralized management
and deployment of services across clusters. This approach ensures improved availability and
scalability for applications deployed across multiple regions.</p>
<p>For the full deployment script used in this tutorial, you can access
the App Innovation GBB GitHub repository: <a href="https://github.com/appdevgbb/pattern-fleet-manager/tree/main" target="_blank" rel="noopener noreferrer" class="">Pattern - Multi-Cluster Layer 4 Load Balancer with Azure Fleet Manager</a>.</p>]]></content>
        <author>
            <name>Diego Casati</name>
            <uri>https://github.com/dcasati</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Stream Analytics to Filter AKS Control Plane Logs]]></title>
        <id>https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering</id>
        <link href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering"/>
        <updated>2024-08-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Using Azure Stream Analytics to filter Kubernetes control plane log data from AKS diagnostics in order to isolate critical data and reduce log retention cost.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="introduction">Introduction<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<p>While AKS does NOT provide access to the cluster's managed control plane, it does provide access to the control plane component logs via <a href="https://learn.microsoft.com/en-us/azure/aks/monitor-aks#aks-control-planeresource-logs" target="_blank" rel="noopener noreferrer" class="">diagnostic settings</a>. The easiest option to persist and search this data is to send it directly to Azure Log Analytics, however there is a LOT of data in those logs, which makes it cost prohibitive in Log Analytics. Alternatively, you can send all the data to an Azure Storage Account, but then searching and alerting can be challenging.</p>
<p>To address the above challenge, one option is to stream the data to Azure Event Hub, which then gives you the option to use Azure Stream Analytics to filter out events that you deem important and then just store the rest in cheaper storage (ex. Azure Storage) for potential future diagnostic needs.</p>
<p>In this walkthrough we'll create an AKS cluster, enable diagnostic logging to Azure Stream Analytics and then demonstrate how to filter out some key records.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster--stream-analytics-setup">Cluster &amp; Stream Analytics Setup<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#cluster--stream-analytics-setup" class="hash-link" aria-label="Direct link to Cluster &amp; Stream Analytics Setup" title="Direct link to Cluster &amp; Stream Analytics Setup" translate="no">​</a></h2>
<p>In this setup, the cluster will be a very basic single node AKS cluster that will simply have diagnostic settings enabled. We'll also create the Event Hub instance that will be used in the diagnostic settings.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Set some environment variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">LogFilteringLab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">logfilterlab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">NAMESPACE_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"akscontrolplane</span><span class="token string environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">EVENT_HUB_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"logfilterhub</span><span class="token string environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DIAGNOSTIC_SETTINGS_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"demologfilter"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the AKS Cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-c</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create an Event Hub Namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az eventhubs namespace create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$NAMESPACE_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create an event hub</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az eventhubs eventhub create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$EVENT_HUB_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> --namespace-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$NAMESPACE_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_CLUSTER_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">EVENT_HUB_NAMESPACE_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az eventhubs namespace show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $NAMESPACE_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Apply the diagnostic settings to the AKS cluster to enable Kubernetes audit log shipping</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># to our Event Hub</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az monitor diagnostic-settings create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--resource</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AKS_CLUSTER_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$DIAGNOSTIC_SETTINGS_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--event-hub </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$EVENT_HUB_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--event-hub-rule </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${EVENT_HUB_NAMESPACE_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">/authorizationrules/RootManageSharedAccessKey"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--logs</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'[ { "category": "kube-audit", "enabled": true, "retentionPolicy": { "enabled": false, "days": 0 } } ]'</span><span class="token plain"> </span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="stream-analytics">Stream Analytics<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#stream-analytics" class="hash-link" aria-label="Direct link to Stream Analytics" title="Direct link to Stream Analytics" translate="no">​</a></h2>
<p>As we'll use Stream Analytics to filter through the log messages for what we want to capture, we'll need to create a Stream Analytics Job. This job will take the Event Hub as it's input source, will run a query and will send the query results to an output target. This output target can be a number of options, but for the purposes of our test we'll write the filtered records out to a Service Bus Queue, which we can watch in real time.</p>
<p>We have the Event Hub already, now lets create the Azure Service Bus Queue and then the Stream Analytics Job to tie it all together.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-service-bus-queue">Create the Service Bus Queue<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#create-the-service-bus-queue" class="hash-link" aria-label="Direct link to Create the Service Bus Queue" title="Direct link to Create the Service Bus Queue" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SERVICE_BUS_NAMESPACE_NAME</span><span class="token operator">=</span><span class="token plain">kubecontrolplanelogs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SERVICE_BUS_QUEUE_NAME</span><span class="token operator">=</span><span class="token plain">kubeaudit</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the service bus namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az servicebus namespace create --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVICE_BUS_NAMESPACE_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the service bus queue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az servicebus queue create --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> --namespace-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVICE_BUS_NAMESPACE_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVICE_BUS_QUEUE_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="stream-analytics-job">Stream Analytics Job<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#stream-analytics-job" class="hash-link" aria-label="Direct link to Stream Analytics Job" title="Direct link to Stream Analytics Job" translate="no">​</a></h3>
<p>For the Stream Analytics Job we'll switch over to the portal, so go ahead and open <a href="https://portal.azure.com/" target="_blank" rel="noopener noreferrer" class="">https://portal.azure.com</a> and navigate to your resource group.</p>
<ol>
<li class="">
<p>Click on the 'Create' button at the top of your resource group:</p>
<p><img decoding="async" loading="lazy" alt="Create" src="https://azureglobalblackbelts.com/assets/images/rg-create-99803d7b32b0e097c0deb252707b0205.jpg" width="782" height="336" class="img_ev3q"></p>
</li>
<li class="">
<p>Search for 'Stream Analytics Job'</p>
<p><img decoding="async" loading="lazy" alt="Search" src="https://azureglobalblackbelts.com/assets/images/sa-job-search-0e9811af2fb29f0c191495a426ca018c.jpg" width="815" height="287" class="img_ev3q"></p>
</li>
<li class="">
<p>Click 'Create' on the Stream Analytics Job search result</p>
<p><img decoding="async" loading="lazy" alt="Search Result" src="https://azureglobalblackbelts.com/assets/images/sa-job-search-result-ae62aa50a6a18c5e7884f32d560498c2.jpg" width="556" height="732" class="img_ev3q"></p>
</li>
<li class="">
<p>Leave all defaults, but provide a name under the 'Instance Details' section and then click 'Review + Create'</p>
<p><img decoding="async" loading="lazy" alt="Create Instance" src="https://azureglobalblackbelts.com/assets/images/sa-job-create-instance-63f770088d59ec19c065713eb792dc7a.jpg" width="769" height="968" class="img_ev3q"></p>
</li>
<li class="">
<p>After the validation is complete, just click 'Create'. This typically completes very quickly.</p>
</li>
<li class="">
<p>Click on 'Go to Resource' or navigate back to your resource group and click on the Stream Analytics Job you just created.</p>
</li>
<li class="">
<p>In the stream analytics job, expand 'Job topology' and then click on 'Inputs' so we can add our Event Hub input</p>
<p><img decoding="async" loading="lazy" alt="Stream Analytics Job - Add Input" src="https://azureglobalblackbelts.com/assets/images/sa-job-inputs-8cde4e621406ae680a459f2a8831687a.jpg" width="733" height="494" class="img_ev3q"></p>
</li>
<li class="">
<p>Click on 'Add Input' and select 'Event Hub'</p>
<p><img decoding="async" loading="lazy" alt="Create Input" src="https://azureglobalblackbelts.com/assets/images/sa-job-create-input-f54413dfdecd3bf2e930bd55e5e521ad.jpg" width="614" height="315" class="img_ev3q"></p>
</li>
<li class="">
<p>The Event Hub's new input creation pane should auto-populate with your Event Hub details as well as default to creation of a new access policy, but verify that all of the details are correct and then click 'Save'.</p>
<p><img decoding="async" loading="lazy" alt="Event Hub Config Details" src="https://azureglobalblackbelts.com/assets/images/sa-event-hub-config-ebc016ee9a33439bfa889b1c55b13b51.jpg" width="303" height="980" class="img_ev3q"></p>
</li>
<li class="">
<p>Now we need to attach the Service Bus we created as the output target, so under 'Job topology' click on 'Outputs'.</p>
</li>
<li class="">
<p>In the 'Outputs' window, click on 'Add output' and select 'Service Bus queue'</p>
<p><img decoding="async" loading="lazy" alt="Add Output" src="https://azureglobalblackbelts.com/assets/images/sa-add-output-2a60e9127196c7669392867820b9d34d.jpg" width="597" height="539" class="img_ev3q"></p>
</li>
<li class="">
<p>Again, it should bring up a window with the queue configuration details already pre-populated, but verify all the details and update as needed and then click 'Save'.</p>
<p><img decoding="async" loading="lazy" alt="Service Bus Config" src="https://azureglobalblackbelts.com/assets/images/sa-servicebus-config-9182e36515ff344d683c7fc34846dcd1.jpg" width="351" height="1006" class="img_ev3q"></p>
</li>
<li class="">
<p>To process the records from AKS we'll need to parse some JSON, so we need to add a function to the Stream Analytics Job to parse JSON. Under 'Job topology' click on 'Functions'.</p>
</li>
<li class="">
<p>In the functions window, click on 'Add Function' and then select 'Javascript UDF' for Javascript User Defined Function</p>
<p><img decoding="async" loading="lazy" alt="Create Function" src="https://azureglobalblackbelts.com/assets/images/sa-create-function-c327143655504ecfeb0cbf5fbf19be87.jpg" width="616" height="540" class="img_ev3q"></p>
</li>
<li class="">
<p>In the 'Function alias' name the function 'jsonparse' and in the editor window add the following:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">main</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter">x</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">var</span><span class="token plain"> json </span><span class="token operator">=</span><span class="token plain"> </span><span class="token known-class-name class-name">JSON</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">parse</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> json</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" alt="Function" src="https://azureglobalblackbelts.com/assets/images/sa-javascript-udf-928667029ff39c9443d25a1fea93076f.jpg" width="832" height="298" class="img_ev3q"></p>
</li>
<li class="">
<p>Click on 'Save' to save the function</p>
</li>
<li class="">
<p>Now, under 'Job topology' in the stream analytics job, click on 'Query' to start adding a query. When loaded, the inputs, outputs and functions should pre-populate for you.</p>
</li>
<li class="">
<p>We'll first create a basic query to select all records and ship them to the output target. In the query window paste the following, updating the input and output values to match the names of your input and output. The function name should be the same unless you changed it.</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WITH</span><span class="token plain"> DynamicCTE </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> UDF</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">jsonparse</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">individualRecords</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ArrayValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> log</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">logfilterhub28026</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CROSS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">APPLY</span><span class="token plain"> GetArrayElements</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">records</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> individualRecords</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">INTO</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">kubeauditlogs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> DynamicCTE</span><br></span></code></pre></div></div>
</li>
<li class="">
<p>Click 'Save Query' at the top of the query window</p>
<p><img decoding="async" loading="lazy" alt="Save Query" src="https://azureglobalblackbelts.com/assets/images/sa-save-query-720e75066a0399cde63b0d3154192468.jpg" width="1249" height="427" class="img_ev3q"></p>
</li>
<li class="">
<p>In the top left of the query window, click on 'Start Job' to kick off the stream analytics job.</p>
</li>
<li class="">
<p>In the 'Start job' window, leave the start time set to 'Now' and click 'Start'</p>
<p><img decoding="async" loading="lazy" alt="Start Job" src="https://azureglobalblackbelts.com/assets/images/sa-start-job-f60feaff9f6ddb6263722ddaf7f2b97c.jpg" width="1752" height="485" class="img_ev3q"></p>
</li>
<li class="">
<p>Click on the 'Overview' tab in the stream analytics job, and refresh every once in a while until the job 'Status' says 'Running'</p>
<p><img decoding="async" loading="lazy" alt="Job Running" src="https://azureglobalblackbelts.com/assets/images/sa-job-status-running-0b03c0ac435fed6ab0a0d05f1a1546a9.jpg" width="972" height="320" class="img_ev3q"></p>
</li>
<li class="">
<p>Navigate back to your Resource Group and then click on your service bus namespace.</p>
</li>
<li class="">
<p>Assuming everything worked as expected you should now be seeing a lot of messages coming through the Service Bus Queue</p>
<p><img decoding="async" loading="lazy" alt="Service Bus Namespace with Data" src="https://azureglobalblackbelts.com/assets/images/sb-namespace-live-19fd1b1681abc1e02cbbb1543e021929.jpg" width="1580" height="919" class="img_ev3q"></p>
</li>
<li class="">
<p>Click on the queue at the bottom of the screen to open the Queue level view</p>
</li>
<li class="">
<p>At the queue level, click on 'Service Bus Explorer' to view the live records</p>
</li>
<li class="">
<p>To view the records already created' click on 'Peek from start' and then choose a record to view</p>
<p><img decoding="async" loading="lazy" alt="Live Audit Record" src="https://azureglobalblackbelts.com/assets/images/sb-audit-record-d16aab23dd67edf6db6222284941d72d.jpg" width="1569" height="766" class="img_ev3q"></p>
</li>
<li class="">
<p>Navigate back to the stream analytics job and click on 'Stop job' to stop sending records through to the service bus.</p>
</li>
</ol>
<p>Great! You should now have a very basic stream analytics job that takes the control plane 'kube-audit' log from an AKS cluster through Event Hub, queries that data and then pushes it to a Service Bus Queue. While this is great, the goal is to filter out some records, so lets move on to that!</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup-a-test-workload-to-trigger-audit-log-entries">Setup a test workload to trigger audit log entries<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#setup-a-test-workload-to-trigger-audit-log-entries" class="hash-link" aria-label="Direct link to Setup a test workload to trigger audit log entries" title="Direct link to Setup a test workload to trigger audit log entries" translate="no">​</a></h2>
<p>To test out our stream analytics query, we need some test data we can filter on. Let's create some requests to the API server that will be denied. To do that we'll create a service account with no rights and then create a test pod using that service account. We'll then use the service account token to try to reach the Kubernetes API server.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a new namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl create ns demo-ns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service account in the namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl create sa demo-user </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> demo-ns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a test secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl create secret generic demo-secret </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> demo-ns --from-literal </span><span class="token string" style="color:rgb(255, 121, 198)">'message=hey-there'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check that you can read the secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get secret demo-secret </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> demo-ns </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">jsonpath</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{.data.message}'</span><span class="token operator">|</span><span class="token plain">base64 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--decode</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a test pod to try to query the API server</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl run curlpod </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--rm</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-it</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token operator">=</span><span class="token plain">curlimages/curl </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> demo-ns </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--overrides</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{ "spec": { "serviceAccount": "demo-user" }  }'</span><span class="token plain"> -- </span><span class="token function" style="color:rgb(80, 250, 123)">sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#############################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># From within the pod run the following</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#############################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Point to the internal API server hostname</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">APISERVER</span><span class="token operator">=</span><span class="token plain">https://kubernetes.default.svc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Path to ServiceAccount token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SERVICEACCOUNT</span><span class="token operator">=</span><span class="token plain">/var/run/secrets/kubernetes.io/serviceaccount</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Read this Pod's namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">NAMESPACE</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">cat</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">SERVICEACCOUNT</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">/namespace</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Read the ServiceAccount bearer token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">TOKEN</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">cat</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">SERVICEACCOUNT</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">/token</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Reference the internal certificate authority (CA)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CACERT</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${SERVICEACCOUNT}</span><span class="token plain">/ca.crt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Explore the API with TOKEN </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This call will pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--cacert</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CACERT}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Authorization: Bearer </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${TOKEN}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-X</span><span class="token plain"> GET </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${APISERVER}</span><span class="token plain">/api</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This call to get secrets will fail</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--cacert</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CACERT}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--header</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Authorization: Bearer </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${TOKEN}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-X</span><span class="token plain"> GET </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${APISERVER}</span><span class="token plain">/api/v1/namespaces/</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$NAMESPACE</span><span class="token plain">/secrets/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now run it under a watch to trigger continuous deny errors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">watch</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'curl --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/api/v1/namespaces/$NAMESPACE/secrets/'</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="update-stream-analytics-to-look-for-forbidden-requests">Update Stream Analytics to Look for Forbidden Requests<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#update-stream-analytics-to-look-for-forbidden-requests" class="hash-link" aria-label="Direct link to Update Stream Analytics to Look for Forbidden Requests" title="Direct link to Update Stream Analytics to Look for Forbidden Requests" translate="no">​</a></h2>
<p>So, we have a user trying to execute requests against our cluster for which they are not authorized. We can easily update our stream analytics query to filter out forbidden requests against our namespace.</p>
<ol>
<li class="">
<p>Navigate back to your 'Stream Analytics' instances in the Azure Portal</p>
</li>
<li class="">
<p>If the job is still running, make sure you click 'Stop job' as you cannot edit queries while the job is running</p>
</li>
<li class="">
<p>Click on the 'Query' tab</p>
</li>
<li class="">
<p>Update the query as follows, to filter out audit messages about our 'demo-ns' namespace that also have a status code of 403 (Forbidden)</p>
<blockquote>
<p><strong>Note:</strong> Be sure that your 'FROM' still points to your Event Hub input target and that your 'INTO' still points to your Service Bus output target.</p>
</blockquote>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WITH</span><span class="token plain"> DynamicCTE </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> UDF</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">jsonparse</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">individualRecords</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">ArrayValue</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> log</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">logfilterhub28026</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CROSS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">APPLY</span><span class="token plain"> GetArrayElements</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">records</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> individualRecords</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">INTO</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">kubeaudit</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> DynamicCTE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WHERE</span><span class="token plain"> log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">objectRef</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">namespace </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'demo-ns'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token operator">AND</span><span class="token plain"> log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">responseStatus</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">code </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">403</span><br></span></code></pre></div></div>
<p><img decoding="async" loading="lazy" alt="Updated Query Window" src="https://azureglobalblackbelts.com/assets/images/sa-403-query-7b6159d3e86712bd830c5eaa1fbbe6f4.jpg" width="1298" height="513" class="img_ev3q"></p>
</li>
<li class="">
<p>Click 'Save query'</p>
</li>
<li class="">
<p>Once the save completes click 'Start Job'</p>
</li>
</ol>
<p>Once your job is started, you should be able to navigate back to your Service Bus Queue and watch the messages flowing through.</p>
<p><img decoding="async" loading="lazy" alt="Filtered Messages" src="https://azureglobalblackbelts.com/assets/images/sb-filtered-messages-c6013da3b7b2ffb21ae0905c19b494df.jpg" width="1773" height="708" class="img_ev3q"></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2024/08/15/aks-control-plane-log-filtering#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>Congratulations! You now have an end-to-end fully working Stream Analytics instance that can filter AKS control plane logs to extract specific messages. You can manipulate the diagnostic settings to add additional logs to the input and modify the query to extract the exact messages critical to your cluster's health and security. This is an extremely versatile solution that is also capable of handling log records of multiple clusters across your enterprise.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Project KAITO in AKS]]></title>
        <id>https://azureglobalblackbelts.com/2024/04/16/aks-kaito</id>
        <link href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito"/>
        <updated>2024-04-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Setting up an AKS cluster with the Kubernetes AI Toolchain Operator (KAITO) managed add-on and then deploying an inference model from your own private Azure Containter Registry.]]></summary>
        <content type="html"><![CDATA[<p>The Kubernetes AI Toolchain Operator, also known as Project KAITO, is an open-source solution to simplify the deployment of inference models in a Kubernetes cluster. In particular, the focus is on simplifying the operation of the most popular models available (ex. Falcon, Mistral and Llama2).</p>
<p>KAITO provides operators to manage validation of the requested model against the requested nodepool hardware, deployment of the nodepool and the deployment of the model itself along with a REST endpoint to reach the model.</p>
<p>In this walkthrough we'll deploy an AKS cluster with the KAITO managed add-on. Next, we'll deploy and test an inference  model, which we'll pull from our own private container registry. We'll be following the setup guide from the AKS product docs <a href="https://learn.microsoft.com/en-us/azure/aks/ai-toolchain-operator" target="_blank" rel="noopener noreferrer" class="">here</a> with some of my own customizations and extensions to simplify tasks.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h2>
<p>In this setup we'll be creating a very basic AKS cluster via the <a href="https://learn.microsoft.com/en-us/cli/azure/" target="_blank" rel="noopener noreferrer" class="">Azure CLI</a>, but this managed add-on will work in any AKS cluster, assuming you meet the <a href="https://learn.microsoft.com/en-us/azure/aks/ai-toolchain-operator#prerequisites" target="_blank" rel="noopener noreferrer" class="">pre-reqs</a>.</p>
<p>We'll also be creating an Azure Container Registry to demonstrate replicating a KAITO model to your own private registry and using it in the model deployment, which would be a security best practice.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Set Variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">KaitoLab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">westus3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token plain">kaitolab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">kaito</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Azure Container Registry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Standard</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the AKS Cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-ai-toolchain-operator</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the Cluster Credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup-the-kaito-identity">Setup the KAITO Identity<a href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito#setup-the-kaito-identity" class="hash-link" aria-label="Direct link to Setup the KAITO Identity" title="Direct link to Setup the KAITO Identity" translate="no">​</a></h2>
<p>KAITO uses the node auto-provisioner to add nodepools to the AKS cluster. To do this it needs rights on the cluster resource group. At this time the rights are broad, but as KAITO reaches general availabiliy we should see those roles refined.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the Cluster Resource Group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az group show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the managed cluster Resource Group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MC_RESOURCE_GROUP</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> nodeResourceGroup </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Set a variable for the KAITO IDentity name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KAITO_IDENTITY_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"ai-toolchain-operator-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the principal ID for the KAITO managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">PRINCIPAL_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">${KAITO_IDENTITY_NAME}</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> --resource-group </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">${MC_RESOURCE_GROUP}</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'principalId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant contributor on the cluster resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Contributor"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${PRINCIPAL_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show --resource-group </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">${RG}</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable string variable" style="color:rgb(189, 147, 249);font-style:italic">${CLUSTER_NAME}</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the federation between the KAITO service account and the KAITO Azure Managed Identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"kaito-federated-identity"</span><span class="token plain"> --identity-name </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${KAITO_IDENTITY_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MC_RESOURCE_GROUP}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:</span><span class="token string" style="color:rgb(255, 121, 198)">"kube-system:kaito-gpu-provisioner"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--audience</span><span class="token plain"> api://AzureADTokenExchange</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># If you check the kaito-gpu-provisioner pod, you'll see it's in CrashLoopBackOff</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># due to the identity not yet having been configured with proper rights.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get pods </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">app</span><span class="token operator">=</span><span class="token plain">ai-toolchain-operator </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> kube-system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Restart the GPU provisioner to reload authorization</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl rollout restart deployment/kaito-gpu-provisioner </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> kube-system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check the pod again to confirm it's now running</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get pods </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">app</span><span class="token operator">=</span><span class="token plain">ai-toolchain-operator </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> kube-system</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-up-the-azure-container-registry">Set up the Azure Container Registry<a href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito#set-up-the-azure-container-registry" class="hash-link" aria-label="Direct link to Set up the Azure Container Registry" title="Direct link to Set up the Azure Container Registry" translate="no">​</a></h2>
<p>The KAITO team builds and hosts the most popular inference models for you. These models are available in the Microsoft Container Registry (MCR) and if you run a KAITO workspace for one of those models it will pull that image for you automatically. However, as noted above, security best practice is to only pull images from your own trusted repository. Fortunately, KAITO gives you this option.</p>
<p>Let's pull the image from the MCR into our Azure Container Registry, and link that registry to our AKS cluster. The image for the model in the MCR follows a standard format, as seen below. We just need the model name and version and we can import it into our private registry. We'll use Mistral-7B.</p>
<blockquote>
<p><strong>NOTE:</strong> If you aren't already aware, Large Language Models are LARGE. This import will take some time. Assume 10-20 minutes for many models.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MODELNAME</span><span class="token operator">=</span><span class="token plain">mistral-7b-instruct</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">TAG</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"0.0.2"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Copy over the mistral image to our ACR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--source</span><span class="token plain">  mcr.microsoft.com/aks/kaito/kaito-</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MODELNAME</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TAG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MODELNAME</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TAG</span><br></span></code></pre></div></div>
<p>While the import is running, we can go ahead and start another terminal window to attach the Azure Container Registry to our AKS cluster.</p>
<p>We don't need to attach the ACR, if we prefer to use admin credentials and an image pull secret, but using the attach feature is more secure as it authenticates to ACR with the kubelet managed identity.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># If we're in a new terminal window we'll need to set our environment variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">KaitoLab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">kaitocluster</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token plain">kaitolab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Attach the ACR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks update </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> --attach-acr </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="deploy-a-model">Deploy a model!<a href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito#deploy-a-model" class="hash-link" aria-label="Direct link to Deploy a model!" title="Direct link to Deploy a model!" translate="no">​</a></h2>
<p>Now that our cluster and registry are all set, we're ready to deploy our first model. We'll generate our 'Workspace' manifest ourselves, but you can also pull from the <a href="https://github.com/Azure/kaito/blob/main/presets/README.md" target="_blank" rel="noopener noreferrer" class="">examples</a> in the KAITO repo and update as needed. The model below is actually directly from the examples; however I added the 'presetOptions' section to set the source of the model image.</p>
<blockquote>
<p><strong>NOTE:</strong> Make sure you validate you have quota on the target subscription for the machine type you select below.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Set the target machine size</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MACHINE_SIZE</span><span class="token operator">=</span><span class="token plain">Standard_NC64as_T4_v3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Generate the model manifest</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation variable" style="color:rgb(189, 147, 249);font-style:italic">${MODELNAME}</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token string bash punctuation variable" style="color:rgb(189, 147, 249);font-style:italic">${TAG}</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)">.yaml</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: kaito.sh/v1alpha1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Workspace</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: workspace-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MODELNAME}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">resource:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  instanceType: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MACHINE_SIZE}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labelSelector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    matchLabels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      apps: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MODELNAME}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">inference:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  preset:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    name: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MODELNAME}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    presetOptions:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      image: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${ACR_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">.azurecr.io/</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MODELNAME}</span><span class="token string" style="color:rgb(255, 121, 198)">:</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${TAG}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># OPTIONAL: In another terminal, if you wish, watch the gpu and workspace provisioner logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">app</span><span class="token operator">=</span><span class="token plain">ai-toolchain-operator </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> kube-system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Deploy Mistral</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${MODELNAME}</span><span class="token plain">-</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${TAG}</span><span class="token plain">.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Watch the deployment </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This will take some time as the node provisions and the model is pulled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">watch</span><span class="token plain"> kubectl get workspace,nodes,svc,pods</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="test-your-inference-endpoint">Test your inference endpoint<a href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito#test-your-inference-endpoint" class="hash-link" aria-label="Direct link to Test your inference endpoint" title="Direct link to Test your inference endpoint" translate="no">​</a></h2>
<p>Now that our model is running, we can send it a request. By default, the model is only accessible via a ClusterIP inside the Kubernetes cluster, so you'll need to access the endpoint from a test pod. We'll use a public 'curl' image, but you can use whatever you prefer.</p>
<p>You do have the option to expose the model via a Kubernetes Service of type 'LoadBalancer' via the workspace configuration, but that generally isn't recommended. Typically, you'd be calling the model from another service inside the cluster, or placing the endpoint behind an ingress controller.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the model cluster IP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTERIP</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">kubectl get svc workspace-$</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">MODELNAME</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">jsonpath</span><span class="token variable operator" style="color:rgb(189, 147, 249);font-style:italic">=</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'{.spec.clusterIP}'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Curl the model service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl run </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-it</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--rm</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--restart</span><span class="token operator">=</span><span class="token plain">Never </span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token operator">=</span><span class="token plain">curlimages/curl -- </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-X</span><span class="token plain"> POST http://</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTERIP</span><span class="token plain">/chat </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-H</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"accept: application/json"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-H</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Content-Type: application/json"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"{</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">prompt</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">:</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">Who is Inigo Montoya and from what movie?</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">,</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">generate_kwargs</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">:{</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">max_length</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">:200}}"</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclustion">Conclustion<a href="https://azureglobalblackbelts.com/2024/04/16/aks-kaito#conclustion" class="hash-link" aria-label="Direct link to Conclustion" title="Direct link to Conclustion" translate="no">​</a></h2>
<p>Congratulations! You should now have a working AKS cluster with the Kubernetes AI Toolchain Operator up and running. As you explore KAITO please feel free to reach out to the KAITO team via the <a href="https://github.com/Azure/kaito/issues" target="_blank" rel="noopener noreferrer" class="">open-source project</a> for any questions or feature requests.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using the Azure Key Vault CSI Driver with Workload Identity]]></title>
        <id>https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi</id>
        <link href="https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi"/>
        <updated>2024-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Setting up an AKS cluster with Workload Identity and the Key Vault CSI driver and using them from a SecretProviderClass and Pod to load secrets.]]></summary>
        <content type="html"><![CDATA[<p>When working with secrets in an application running in Kubernetes, you can use native Kubernetes secrets, however there are limitations in the security of those secrets. A better practice is to use a secure vault, like Azure Key Vault.</p>
<p>Azure Key Vault can be accessed via a direct SDK call, as demonstrated in our previous <a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example.html" target="_blank" rel="noopener noreferrer" class="">Workload Identity</a> post. However, in some cases you may not have the option to use the SDK, like in cases where you dont have access to source code. In those cases you may prefer to load secrets directly into an environment variable or a file. In these cases, the Azure Key Vault CSI driver is here to save the day.</p>
<p>The following walkthrough shows how you can using <a href="https://azure.github.io/azure-workload-identity/docs/" target="_blank" rel="noopener noreferrer" class="">Azure Workload Identity</a> with the <a href="https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview" target="_blank" rel="noopener noreferrer" class="">AKS Workload Identity</a> add-on along with the Key Vault CSI Driver to mount secrets and volumes in your pods.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h3>
<p>First, lets create the AKS cluster with the OIDC Issuer, Workload Identity and the Key Vault CSI Driver add-ons enabled.</p>
<blockquote>
<p><em>NOTE:</em> Both the OIDC Issuer and Workload Identity add-ons are needed if you want to use workload identities, however the Key Vault CSI driver can also work with service principals or even the managed identity assigned to the cluster itself. Using Workload Identity, however, is the most versatile and secure approach.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">WorkloadIdentityKVCSIRG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">wikvcsilab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">UNIQUE_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KEY_VAULT_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the cluster with the OIDC Issuer and Workload Identity enabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-count </span><span class="token number">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-addons azure-keyvault-secrets-provider </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--generate-ssh-keys</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-up-the-identity">Set up the identity<a href="https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi#set-up-the-identity" class="hash-link" aria-label="Direct link to Set up the identity" title="Direct link to Set up the identity" translate="no">​</a></h3>
<p>In order to federate a managed identity with a Kubernetes Service Account we need to get the AKS OIDC Issure URL, create the Managed Identity and Service Account and then create the federation.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the Tenant ID for later</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_TENANT</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az account show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tenantId</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> kvcsi-demo-identity --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get identity client ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> kvcsi-demo-identity </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service account to federate with the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ServiceAccount</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/client-id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: kvcsi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> kvcsi-demo-federated-id </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name kvcsi-demo-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:default:kvcsi-demo-sa</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-key-vault-and-secret">Create the Key Vault and Secret<a href="https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi#create-the-key-vault-and-secret" class="hash-link" aria-label="Direct link to Create the Key Vault and Secret" title="Direct link to Create the Key Vault and Secret" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a key vault</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"> --enable-rbac-authorization </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault secret </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"TestSecret"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--value</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Hello from Key Vault"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant access to the secret for the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault set-policy </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> --secret-permissions get </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--spn</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#####################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># OPTIONAL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># We'll get the version ID for the secret but this is not mandatory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#####################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the version ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault secret show --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"TestSecret"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> tsv </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">https://wi-demo-keyvault.vault.azure.net/secrets/Secret/ded8e5e3b3e040e9bfa5c47d0e28848a</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># The version ID is the last part of the resource id above</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># We'll use this later</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VERSION_ID</span><span class="token operator">=</span><span class="token plain">ded8e5e3b3e040e9bfa5c47d0e28848a</span><br></span></code></pre></div></div>
<p>The <a href="https://secrets-store-csi-driver.sigs.k8s.io/getting-started/usage" target="_blank" rel="noopener noreferrer" class="">SecretProviderClass</a> is what is used to create the binding between the Kubernetes cluster and the Azure Key Vault. It allows you to define the identity accessing the Key Vault, the target Key Vault name and the details about the keys and secrets being accessed. It will also let you link Key Vault Secrets to Kubernetes Secrets, but we'll see more on that later.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a secret provider instance attached to the vault and secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: secrets-store.csi.x-k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: SecretProviderClass</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: azure-kvcsi-wi # needs to be unique per namespace</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  provider: azure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  parameters:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    usePodIdentity: "false"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    clientID: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">" # Setting this to use workload identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    keyvaultName: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${KEY_VAULT_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">       # Set to the name of your key vault</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    objects:  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      array:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectName: TestSecret             # Set to the name of your secret</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectType: secret              # object types: secret, key, or cert</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectVersion: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${VERSION_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"               # [OPTIONAL] object versions, default to latest if empty</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    tenantId: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_TENANT}</span><span class="token string" style="color:rgb(255, 121, 198)">"        # The tenant ID of the key vault</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>Now deploy a pod that gets the value using the service account identity.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a pod to mount the secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Pod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: secrets-store-inline-wi</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  serviceAccountName: "kvcsi-demo-sa"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - name: ubuntu</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      image: ubuntu:20.04</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      command: [ "/bin/bash", "-c", "--" ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      args: [ "while true; do sleep 30; done;" ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      volumeMounts:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: secrets-store01-inline</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        mountPath: "/mnt/secrets-store"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        readOnly: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  volumes:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - name: secrets-store01-inline</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      csi:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        driver: secrets-store.csi.k8s.io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        readOnly: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        volumeAttributes:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          secretProviderClass: "azure-kvcsi-wi"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check the secret loaded</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">exec</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-it</span><span class="token plain"> secrets-store-inline-wi -- </span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> /mnt/secrets-store/TestSecret</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="sync-the-same-secret-to-a-kubernetes-secret">Sync the same secret to a Kubernetes Secret<a href="https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi#sync-the-same-secret-to-a-kubernetes-secret" class="hash-link" aria-label="Direct link to Sync the same secret to a Kubernetes Secret" title="Direct link to Sync the same secret to a Kubernetes Secret" translate="no">​</a></h3>
<p>As mentioned above, you do have the option to synchronize Azure Key Vault secrets to Kubernetes secrets, which can be very useful. Just keep in mind that this driver uses the Container Storage Interface (CSI) so you still need to ensure a pod mounts a volume associated to the SecretProviderClass to initiate the Kubernetes secret creation.</p>
<p>Lets add a new SecretProviderClass that includes the secret synchronization configuration.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a secret provider instance attached to the vault and secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: secrets-store.csi.x-k8s.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: SecretProviderClass</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: azure-kvcsi-wi-sync # needs to be unique per namespace</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  provider: azure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  parameters:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    usePodIdentity: "false"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    clientID: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">" # Setting this to use workload identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    keyvaultName: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${KEY_VAULT_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">       # Set to the name of your key vault</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    objects:  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      array:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectName: TestSecret             # Set to the name of your secret</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectType: secret              # object types: secret, key, or cert</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          objectVersion: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${VERSION_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"               # [OPTIONAL] object versions, default to latest if empty</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    tenantId: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_TENANT}</span><span class="token string" style="color:rgb(255, 121, 198)">"        # The tenant ID of the key vault</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  - data:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - key: secretvalue                           # data field to populate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      objectName: TestSecret                        # name of the mounted content to sync; this could be the object name or the object alias</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    secretName: foosecret                     # name of the Kubernetes secret object</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    type: Opaque     </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>Now, create a pod that loads the secret both as a volume and an environment variable from our synchronized Kubernetes secret.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a pod to mount the secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Pod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: secrets-store-inline-wi-sync</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  serviceAccountName: "kvcsi-demo-sa"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - name: ubuntu</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      image: ubuntu:20.04</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      command: [ "/bin/bash", "-c", "--" ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      args: [ "while true; do sleep 30; done;" ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      volumeMounts:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: secrets-store01-inline</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        mountPath: "/mnt/secrets-store"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        readOnly: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      env:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: SECRET_DATA</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        valueFrom:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          secretKeyRef:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            name: foosecret</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            key: secretvalue        </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  volumes:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - name: secrets-store01-inline</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      csi:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        driver: secrets-store.csi.k8s.io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        readOnly: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        volumeAttributes:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">          secretProviderClass: "azure-kvcsi-wi-sync"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>Finally, test to make sure the secret is properly loaded to the volume and environment variable.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Check that the secret was properly mounted as a volume</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">exec</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-it</span><span class="token plain"> secrets-store-inline-wi-sync -- </span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> /mnt/secrets-store/TestSecret</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check that the Kubernetes Secret was created</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get secret foosecret </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">jsonpath</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{.data.secretvalue}'</span><span class="token operator">|</span><span class="token plain">base64 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--decode</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check that the secret was properly mounted from the kubernetes secret as an enviornment variable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">exec</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-it</span><span class="token plain"> secrets-store-inline-wi-sync -- /bin/bash </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-c</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'echo $SECRET_DATA'</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2024/03/05/workload-identity-kv-csi#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h3>
<p>Congrats! You should now have a working pod that mounts a key vault secret via the CSI driver and another pod that mounts the secret as an environment variable from a sync'd Kubernetes Secret.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Securing your AKS cluster with a Linux Firewall VM]]></title>
        <id>https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm</id>
        <link href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm"/>
        <updated>2024-02-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to configure the firewall VM, the virtual network, and the network security group to route traffic to your AKS endpoints.]]></summary>
        <content type="html"><![CDATA[<p>A network virtual appliance (NVA) is a virtual machine that performs network functions such as firewalling. In this post, I will walk you through how to use a Linux VM as an NVA in Azure and route traffic to an endpoint running on Azure Kubernetes Service (AKS). I will cover two scenarios: one where the traffic goes through an internal load balancer, and another where the traffic goes directly to a pod.</p>
<p>This assumes you already have a Linux VM and an AKS Cluster created - both in their own VNET. The cluster and the Linux VM need to be VNET peered already. <a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-manage-peering?tabs=peering-cli" target="_blank" rel="noopener noreferrer" class="">Here is a quick start on VNET peering if you need a refresher</a>.</p>
<p>For this example we will be using Ubuntu 22.04. Since we have a few excellent tutorials on how to create a Linux VM on Azure I will not be describing that process here. If you need an example, <a href="https://learn.microsoft.com/en-us/azure/virtual-machines/linux/tutorial-manage-vm" target="_blank" rel="noopener noreferrer" class="">here's a good one that describe the creation process using the Azure CLI</a>.</p>
<p>After your VM is created, <code>ssh</code> into it and allow IP forwarding:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sysctl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-w</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">net.ipv4.ip_forward</span><span class="token operator">=</span><span class="token number">1</span><br></span></code></pre></div></div>
<p>For that change to be persistent, make sure you add it to <code>/etc/sysctl.conf</code>. Moving on, let's look into our first scenario.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="scenario-1-nva-routing-to-a-pod-through-an-internal-load-balancer">Scenario 1: NVA routing to a pod through an internal load balancer<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#scenario-1-nva-routing-to-a-pod-through-an-internal-load-balancer" class="hash-link" aria-label="Direct link to Scenario 1: NVA routing to a pod through an internal load balancer" title="Direct link to Scenario 1: NVA routing to a pod through an internal load balancer" translate="no">​</a></h3>
<p><img decoding="async" loading="lazy" alt="scenario 1" src="https://azureglobalblackbelts.com/assets/images/scenario1-7224d454ad73fad28428d20fd9748538.jpg" width="1021" height="564" class="img_ev3q"></p>
<p>In this scenario, we will route traffic from the Linux VM to a pod in the AKS cluster through an internal load balancer. The internal load balancer will balance the traffic among the pods that match a certain label selector. The diagram below shows the network topology for this scenario:</p>
<p>To implement this scenario, we will need to do the following steps:</p>
<ul>
<li class="">Create a sample workload on the AKS cluster</li>
<li class="">Create an internal load balancer on the AKS cluster</li>
<li class="">Set up the firewall rules on the Linux VM</li>
</ul>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-a-sample-workload">Create a sample workload<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#create-a-sample-workload" class="hash-link" aria-label="Direct link to Create a sample workload" title="Direct link to Create a sample workload" translate="no">​</a></h4>
<p>First, we will create a sample workload on the AKS cluster to test our traffic routing. We will use a simple Python web server that listens on port 80 and returns a hello message. We will deploy a pod that runs this web server and label it with <code>run: tmp-shell</code>. To do this, run the following commands:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Connect to the AKS cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials --resource-group </span><span class="token operator">&lt;</span><span class="token plain">your-resource-group</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">your-aks-cluster</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Deploy a pod for testing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl run tmp-shell </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token plain"> nicolaka/netshoot </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--labels</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">run</span><span class="token operator">=</span><span class="token plain">tmp-shell</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Run a simple Python web server on port 80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">exec</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-it</span><span class="token plain"> tmp-shell -- python3 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-m</span><span class="token plain"> http.server </span><span class="token number">80</span><br></span></code></pre></div></div>
<p>You should see something like this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Serving HTTP on </span><span class="token number">0.0</span><span class="token plain">.0.0 port </span><span class="token number">80</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://0.0.0.0:80/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">.</span><br></span></code></pre></div></div>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-an-internal-load-balancer">Create an internal load balancer<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#create-an-internal-load-balancer" class="hash-link" aria-label="Direct link to Create an internal load balancer" title="Direct link to Create an internal load balancer" translate="no">​</a></h4>
<p>Next, we will create an internal load balancer on the AKS cluster that will expose the pod on port <code>49180</code>. The internal load balancer will use the label selector <code>run: tmp-shell</code> to find the pod and balance the traffic among the pods that match this selector. To do this, run the following commands:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service of type LoadBalancer with an annotation to make it internal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: tmp-shell</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    service.beta.kubernetes.io/azure-load-balancer-internal: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  type: LoadBalancer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  - port: 49180</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    run: tmp-shell</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>This will create a service named tmp-shell of type LoadBalancer with an annotation to make it internal. The service will expose port 49180 and forward the traffic to port 80 of the pod that matches the label selector <code>run: tmp-shell</code>.</p>
<p>To verify that the service is created and has an internal IP address, run the following command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get </span><span class="token function" style="color:rgb(80, 250, 123)">service</span><span class="token plain"> tmp-shell</span><br></span></code></pre></div></div>
<p>You should see something like this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">NAME         TYPE           CLUSTER-IP     EXTERNAL-IP    PORT</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">S</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">           AGE</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubernetes   ClusterIP      </span><span class="token number">10.0</span><span class="token plain">.0.1       </span><span class="token operator">&lt;</span><span class="token plain">none</span><span class="token operator">&gt;</span><span class="token plain">         </span><span class="token number">443</span><span class="token plain">/TCP           2d1h</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">tmp-shell    LoadBalancer   </span><span class="token number">10.0</span><span class="token plain">.166.113   </span><span class="token number">10.224</span><span class="token plain">.0.222   </span><span class="token number">49180</span><span class="token plain">:30265/TCP   47h</span><br></span></code></pre></div></div>
<p>This means that the service has an internal IP address of <code>10.224.0.222</code> and is listening on port 49180.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup-the-firewall">Setup the firewall<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#setup-the-firewall" class="hash-link" aria-label="Direct link to Setup the firewall" title="Direct link to Setup the firewall" translate="no">​</a></h4>
<p>Finally, we will set up the firewall rules on the Linux VM to route the traffic from the VM to the internal load balancer. We will use iptables to configure the firewall rules. To do this, run the following commands on the Linux VM:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> FORWARD </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> tcp </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--syn</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--dport</span><span class="token plain"> </span><span class="token number">49181</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-m</span><span class="token plain"> conntrack </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--ctstate</span><span class="token plain"> NEW </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> ACCEPT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> FORWARD </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-m</span><span class="token plain"> conntrack </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--ctstate</span><span class="token plain"> ESTABLISHED,RELATED </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> ACCEPT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-P</span><span class="token plain"> FORWARD DROP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> nat </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> PREROUTING </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-i</span><span class="token plain"> eth0 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> tcp </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--dport</span><span class="token plain"> </span><span class="token number">49181</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> DNAT --to-destination </span><span class="token number">10.224</span><span class="token plain">.0.222</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> nat </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> POSTROUTING </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> eth0 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> tcp </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--dport</span><span class="token plain"> </span><span class="token number">49181</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> </span><span class="token number">10.224</span><span class="token plain">.0.222 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> SNAT --to-source </span><span class="token number">10.3</span><span class="token plain">.0.4</span><br></span></code></pre></div></div>
<p>Explanation:</p>
<table><thead><tr><th>Rule</th><th>Notes</th></tr></thead><tbody><tr><td>iptables -A PREROUTING -i eth0 -p tcp -m tcp --dport 49181 -j DNAT --to-destination 10.224.0.222</td><td>Packet arrived on eth0 (coming from the public IP of the VM) and get's DNAT'ed to the Internal Load Balancer private IP and to the service in AKS that will send traffic to the pod on port 80.</td></tr><tr><td>iptables -A FORWARD -p tcp -m tcp --dport 49181 -m conntrack --ctstate NEW -j ACCEPT</td><td>Allow forwarding on port 49181.</td></tr><tr><td>iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT</td><td>Match any packet that is related to an existing connection, using the conntrack module. This is necessary to allow the established and related connections to the internal service.</td></tr><tr><td>iptables -P FORWARD DROP</td><td>Set the policy to drop packets in the FORWARD chain. This means, unless specified (see line above) we will drop traffic.</td></tr><tr><td>iptables -A POSTROUTING -d 10.224.0.222/32 -o eth0 -p tcp -m tcp --dport 49181 -j SNAT --to-source 10.3.0.4</td><td>Send traffic to the Internal Load Balancer on port 49181. SNAT the source IP with the private IP of the firewall (10.3.0.4).</td></tr></tbody></table>
<p>At this point in time, our rules are in place but they will not persist a reboot. To make sure the Firewall loads these rules on boot time we need to install the <code>iptables-persistent</code> package:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> iptables-persistent</span><br></span></code></pre></div></div>
<p>Once that's installed, save your current configuration so iptables-persistent can load them during boot time:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> iptables-save </span><span class="token operator">&gt;</span><span class="token plain"> /etc/iptables/rules.v4</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="scenario-2-nva-routing-directly-to-a-pod">Scenario 2: NVA routing directly to a pod<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#scenario-2-nva-routing-directly-to-a-pod" class="hash-link" aria-label="Direct link to Scenario 2: NVA routing directly to a pod" title="Direct link to Scenario 2: NVA routing directly to a pod" translate="no">​</a></h3>
<p>In this second scenario, we will route traffic from the Linux VM directly to a pod in the AKS cluster without going through an internal load balancer. The diagram below shows the network topology for this scenario:</p>
<p><img decoding="async" loading="lazy" alt="scenario 2" src="https://azureglobalblackbelts.com/assets/images/scenario2-1a85bc5a64a9b225b36d9e842d090703.jpg" width="965" height="533" class="img_ev3q"></p>
<p>To implement this scenario, we will need to do the following steps:</p>
<ul>
<li class="">Create a sample workload on the AKS cluster. Follow the steps described earlier to the deploy the POD using <code>netshoot</code> as your base image. You do not need to deploy the Internal Load Balancer as we will not be using it for this scenario.</li>
<li class="">Set up the firewall rules on the Linux VM</li>
</ul>
<p>The new firewall rules are:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> FORWARD </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> tcp </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--syn</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--dport</span><span class="token plain"> </span><span class="token number">80</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-m</span><span class="token plain"> conntrack </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--ctstate</span><span class="token plain"> NEW </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> ACCEPT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> FORWARD </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-m</span><span class="token plain"> conntrack </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--ctstate</span><span class="token plain"> ESTABLISHED,RELATED </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> ACCEPT</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-P</span><span class="token plain"> FORWARD DROP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> nat </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> PREROUTING </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-i</span><span class="token plain"> eth0 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> tcp </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--dport</span><span class="token plain"> </span><span class="token number">49181</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> DNAT --to-destination </span><span class="token number">10.224</span><span class="token plain">.0.118:80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">iptables </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> nat </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"> POSTROUTING </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> eth0 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> tcp </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--dport</span><span class="token plain"> </span><span class="token number">80</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> </span><span class="token number">10.224</span><span class="token plain">.0.118 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-j</span><span class="token plain"> SNAT --to-source </span><span class="token number">10.3</span><span class="token plain">.0.4</span><br></span></code></pre></div></div>
<p>Explanation:</p>
<table><thead><tr><th>Rule</th><th>Notes</th></tr></thead><tbody><tr><td>iptables -A PREROUTING -i eth0 -p tcp -m tcp --dport 49181 -j DNAT --to-destination 10.224.0.118:80</td><td>Packet arrived on eth0 (coming from the public IP of the VM) and get's DNAT'ed to the POD private IP on port 80.</td></tr><tr><td>iptables -A FORWARD -p tcp -m tcp --dport 80 -m conntrack --ctstate NEW -j ACCEPT</td><td>At this point, the original packets are now going to be send to port 80. This rule allows that flow.</td></tr><tr><td>iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT</td><td>Match any packet that is related to an existing connection, using the conntrack module. This is necessary to allow the established and related connections to the internal service.</td></tr><tr><td>iptables -P FORWARD DROP</td><td>Set the policy to drop packets in the FORWARD chain. This means, unless specified (see line above) we will drop traffic.</td></tr><tr><td>iptables -A POSTROUTING -d 10.224.0.118/32 -o eth0 -p tcp -m tcp --dport 80 -j SNAT --to-source 10.3.0.4</td><td>The last rule before the packet leaves the kernel, we run a Source NAT (SNAT) and add the Firewall private IP so the pod knows where to return this packet to. Once that packet hits the firewall, we can return it to the sender on the Internet.</td></tr></tbody></table>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="testing-and-validating">Testing and validating<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#testing-and-validating" class="hash-link" aria-label="Direct link to Testing and validating" title="Direct link to Testing and validating" translate="no">​</a></h4>
<p>To test and verify that the port forwarding rules are working - for both scenarios - you can use a tool like telnet or curl to connect to the external port 49181 from another host. You should see the response from the internal service on port 80. For example, the following command will send a HTTP request to the external port 49181 and display the response:</p>
<table><thead><tr><th>Test case</th><th>Target</th><th>Note</th></tr></thead><tbody><tr><td>From the firewall to the pod</td><td><code>curl http://${POD_IP_ADDRESS}</code></td><td>Pod listens on port 80</td></tr><tr><td>From the Internet to the public IP of the firewall</td><td><code>curl http://${PUBLIC_IP}:49181</code></td><td>This connection will be DNATed to proper endpoint (pod or ILB)</td></tr></tbody></table>
<p>You should see something like this:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">tmp-shell:~</span><span class="token comment" style="color:rgb(98, 114, 164)"># python3 -m http.server 80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Serving HTTP on </span><span class="token number">0.0</span><span class="token plain">.0.0 port </span><span class="token number">80</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">http://0.0.0.0:80/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10.3</span><span class="token plain">.0.4 - - </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">02/Feb/2024 </span><span class="token number">20</span><span class="token plain">:50:32</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GET / HTTP/1.1"</span><span class="token plain"> </span><span class="token number">200</span><span class="token plain"> -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10.3</span><span class="token plain">.0.4 - - </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">02/Feb/2024 </span><span class="token number">20</span><span class="token plain">:50:33</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GET / HTTP/1.1"</span><span class="token plain"> </span><span class="token number">200</span><span class="token plain"> -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10.3</span><span class="token plain">.0.4 - - </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">02/Feb/2024 </span><span class="token number">20</span><span class="token plain">:50:34</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GET / HTTP/1.1"</span><span class="token plain"> </span><span class="token number">200</span><span class="token plain"> -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10.3</span><span class="token plain">.0.4 - - </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">02/Feb/2024 </span><span class="token number">20</span><span class="token plain">:50:35</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GET / HTTP/1.1"</span><span class="token plain"> </span><span class="token number">200</span><span class="token plain"> -</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2024/02/02/securing-your-aks-cluster-with-a-linux-firewall-vm#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h3>
<p>In this article we've explored how create your own - basic - network virtual appliance and route traffic to an AKS cluster. from here, you can take this as a base for more complex and custom examples. Good luck !</p>]]></content>
        <author>
            <name>Diego Casati</name>
            <uri>https://github.com/dcasati</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Workload Idenity to Access Azure Blob Storage]]></title>
        <id>https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example</id>
        <link href="https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example"/>
        <updated>2023-12-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this post we'll show the steps needed to create an AKS cluster, enabled with Azure Workload Identity and then we'll build a sample dotnet app that writes files to Azure Blob Storage]]></summary>
        <content type="html"><![CDATA[<p>The following walkthrough shows how you can using <a href="https://azure.github.io/azure-workload-identity/docs/" target="_blank" rel="noopener noreferrer" class="">Azure Workload Identity</a> with the <a href="https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview" target="_blank" rel="noopener noreferrer" class="">AKS Workload Identity</a> add-on along with <a href="https://learn.microsoft.com/en-us/azure/active-directory/develop/reference-v2-libraries" target="_blank" rel="noopener noreferrer" class="">MSAL</a> to access an Azure Blob Storage Account.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h3>
<p>Now lets create the AKS cluster with the OIDC Issuer and Workload Identity add-on enabled.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">WorkloadIdentityRG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">wilab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">UNIQUE_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">STORAGE_ACCT_NAME</span><span class="token operator">=</span><span class="token plain">griffdemo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the cluster with the OIDC Issuer and Workload Identity enabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-count </span><span class="token number">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--generate-ssh-keys</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-up-the-identity">Set up the identity<a href="https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example#set-up-the-identity" class="hash-link" aria-label="Direct link to Set up the identity" title="Direct link to Set up the identity" translate="no">​</a></h3>
<p>In order to federate a managed identity with a Kubernetes Service Account we need to get the AKS OIDC Issure URL, create the Managed Identity and Service Account and then create the federation.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> wi-demo-identity --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get identity client ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> wi-demo-identity </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service account to federate with the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ServiceAccount</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/client-id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: wi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> wi-demo-federated-id </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name wi-demo-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:default:wi-demo-sa</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-blob-storage-account">Create the Blob Storage Account<a href="https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example#create-the-blob-storage-account" class="hash-link" aria-label="Direct link to Create the Blob Storage Account" title="Direct link to Create the Blob Storage Account" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a blob storage account</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az storage account create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$STORAGE_ACCT_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Standard_LRS </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--encryption-services blob</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the resource ID of the storage account</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">STORAGE_ACCT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az storage account show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $STORAGE_ACCT_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the current signed in user ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CURRENT_USER</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az ad signed-in-user show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant the current user contributor rights for testing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Storage Blob Data Contributor"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CURRENT_USER</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${STORAGE_ACCT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant the managed identity contributor rights</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Storage Blob Data Contributor"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$USER_ASSIGNED_CLIENT_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${STORAGE_ACCT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a storage account container with login auth mode enabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az storage container create --account-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$STORAGE_ACCT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> data --auth-mode login</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-sample-app">Create the sample app<a href="https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example#create-the-sample-app" class="hash-link" aria-label="Direct link to Create the sample app" title="Direct link to Create the sample app" translate="no">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create and test a new console app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet new console </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> blob-console-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> blob-console-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet run</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Add the Key Vault and Azure Identity Packages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> package Azure.Storage.Blobs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> package Azure.Identity</span><br></span></code></pre></div></div>
<p>Edit the app as follows:</p>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Azure.Storage.Blobs;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Azure.Storage.Blobs.Models;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using System;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using System.IO;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Azure.Identity;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">class Program</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        static void Main(string[] args)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Get Storage Account Name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          string? storageAcctName = Environment.GetEnvironmentVariable("STORAGE_ACCT_NAME");;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Get the Storage Container Name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          string? containerName = Environment.GetEnvironmentVariable("CONTAINER_NAME");;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Check values for null or empty</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          if (string.IsNullOrEmpty(storageAcctName)||string.IsNullOrEmpty(containerName))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            Console.WriteLine("Storage Account or Container Name are null or empty");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            Environment.Exit(0);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          while (true)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            MainAsync(storageAcctName,containerName).Wait();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            System.Threading.Thread.Sleep(5000);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        static async Task MainAsync(string storageAcctName, string containerName)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          var blobServiceClient = new BlobServiceClient(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  new Uri(String.Format("https://{0}.blob.core.windows.net",storageAcctName)),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  new DefaultAzureCredential());</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          BlobContainerClient containerClient = blobServiceClient.GetBlobContainerClient(containerName);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Create a local file in the ./data/ directory for uploading and downloading</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          string localPath = "data";</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          Directory.CreateDirectory(localPath);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          string fileName = Guid.NewGuid().ToString() + ".txt";</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          string localFilePath = Path.Combine(localPath, fileName);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Write text to the file</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          await File.WriteAllTextAsync(localFilePath, "Hello, World!");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Get a reference to a blob</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          BlobClient blobClient = containerClient.GetBlobClient(fileName);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          Console.WriteLine("Uploading to Blob storage as blob:\n\t {0}\n", blobClient.Uri);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          // Upload data from the local file</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          await blobClient.UploadAsync(localFilePath, true);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre></div></div>
<p>Create a new Dockerfile with the following:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build-env</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WORKDIR /App</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Copy everything</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">COPY </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"> ./</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Restore as distinct layers</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN dotnet restore</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build and publish a release</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN dotnet publish </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-c</span><span class="token plain"> Release </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> out</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build runtime image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM mcr.microsoft.com/dotnet/aspnet:7.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WORKDIR /App</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">COPY </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--from</span><span class="token operator">=</span><span class="token plain">build-env /App/out </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ENTRYPOINT </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"dotnet"</span><span class="token plain">, </span><span class="token string" style="color:rgb(255, 121, 198)">"blob-console-app.dll"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<p>Build the image. I'll create an Azure Container Registry and build there, and then link that ACR to my AKS cluster.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the ACR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Standard</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr build </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> wi-blob-test </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Link the ACR to the AKS cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks update </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> --attach-acr </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><br></span></code></pre></div></div>
<p>Now deploy a pod that runs our blob storage app using the service account identity.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Pod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: wi-blob-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  serviceAccountName: wi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - image: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${ACR_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">.azurecr.io/wi-blob-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      name: wi-blob-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      env:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: STORAGE_ACCT_NAME</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${STORAGE_ACCT_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: CONTAINER_NAME</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: data      </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  nodeSelector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    kubernetes.io/os: linux</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check the pod logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> wi-blob-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Uploading to Blob storage as blob:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	 https://griffdemo.blob.core.windows.net/data/quickstart3efa9a81-9672-4617-a6ff-f11fb93d7c84.txt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Uploading to Blob storage as blob:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	 https://griffdemo.blob.core.windows.net/data/quickstart23968d6b-80c5-4c82-8bcf-860fa00edbd3.txt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Uploading to Blob storage as blob:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	 https://griffdemo.blob.core.windows.net/data/quickstart0e20e7ef-c3ba-4fd3-a3d5-c27579d2ba96.txt</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/12/19/workload-identity-blob-example#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h3>
<p>Congrats! You should now have a working pod that uses MSAL along with a Kubernetes Service Account federated to an Azure Managed Identity to access Azure Blob Storage.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using External DNS in AKS with Azure Workload Identity]]></title>
        <id>https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity</id>
        <link href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity"/>
        <updated>2023-12-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The External DNS project supports auto record creation in both Azure public and Private DNS Zones. In this walk through we'll show how to configure an install External DNS in an AKS cluster using Workload Identity to update A records in an Azure Private DNS Zone]]></summary>
        <content type="html"><![CDATA[<p>The following walk-through shows how to use the <a href="https://github.com/kubernetes-sigs/external-dns" target="_blank" rel="noopener noreferrer" class="">External DNS</a> project to monitor for services with DNS annotation to automatically create DNS records in an Azure Private Zone. The system user authorized to update the private zone will be an Azure Managed Identity, using AKS Workload Identity support.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-environment-variables">Set Environment Variables<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#set-environment-variables" class="hash-link" aria-label="Direct link to Set Environment Variables" title="Direct link to Set Environment Variables" translate="no">​</a></h3>
<p>Update the following with your own prefered values.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">EphExternalDNSDemo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AZURE_DNS_ZONE</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"griffdemo123.com"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># DNS zone name like example.com or sub.example.com</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">externaldns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">TENANT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az account show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tenantId </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUB_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az account show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-resource-group-and-vnet">Create the Resource Group and Vnet<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#create-the-resource-group-and-vnet" class="hash-link" aria-label="Direct link to Create the Resource Group and Vnet" title="Direct link to Create the Resource Group and Vnet" translate="no">​</a></h3>
<p>Now to create the resource group and Vnet which we will use for both the private zone and the AKS cluster. You can obviously substitute your own existing Vnet, but don't miss the next step where the private zone get's linked to the vnet.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Resource Group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Vnet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> testvnet </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefix </span><span class="token number">10.2</span><span class="token plain">.0.0/16 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--subnet-name aks </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--subnet-prefixes </span><span class="token number">10.2</span><span class="token plain">.0.0/24</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the subnet id for later use</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBNET_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet subnet show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG --vnet-name testvnet </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> aks </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-private-dns-zone">Create the Private DNS Zone<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#create-the-private-dns-zone" class="hash-link" aria-label="Direct link to Create the Private DNS Zone" title="Direct link to Create the Private DNS Zone" translate="no">​</a></h3>
<p>Now to create the private zone and link it to the vnet.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the DNS Zone</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network private-dns zone create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AZURE_DNS_ZONE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Link the private zone to the vnet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network private-dns </span><span class="token function" style="color:rgb(80, 250, 123)">link</span><span class="token plain"> vnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> zonelink </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-z</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AZURE_DNS_ZONE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-v</span><span class="token plain"> testvnet </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--registration-enabled </span><span class="token boolean">false</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-aks-cluster">Create the AKS Cluster<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#create-the-aks-cluster" class="hash-link" aria-label="Direct link to Create the AKS Cluster" title="Direct link to Create the AKS Cluster" translate="no">​</a></h3>
<p>We'll create the AKS cluster in the above created subnet, and enable the flags for Workload Identity Support (i.e. OIDC Issuer and Workload Identity).</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the AKS Cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--vnet-subnet-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SUBNET_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-managed-identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup-with-workload-identity">Setup with Workload Identity<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#setup-with-workload-identity" class="hash-link" aria-label="Direct link to Setup with Workload Identity" title="Direct link to Setup with Workload Identity" translate="no">​</a></h3>
<p>Azure Workload Identity for Kubernetes enables the finest grained control of the user that will be managing the DNS records, because we can isolate the rights specific to those needed to control the private zone. In the following steps, we'll get the OIDC issuer URL, create the managed identity, and create the Azure AD Federation for the service account used by external DNS.</p>
<blockquote>
<p><strong>NOTE:</strong> In our setup we will assume external DNS resides in the 'default' namespace. If you move external DNS to it's own namespace, you'll need to make sure the 'az identity federated-credential create' command below references the right namespace in the fully qualified service account name in the '--subject' field.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> external-dns-identity --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get identity client ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> external-dns-identity </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the resource group ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az group show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the DNS Zone ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DNS_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network private-dns zone show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $AZURE_DNS_ZONE </span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">\</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"id"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--output</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Give the kubelet identity DNS Contributor rights</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$USER_ASSIGNED_CLIENT_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Private DNS Zone Contributor"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$DNS_ID</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Reader"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$USER_ASSIGNED_CLIENT_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> external-dns-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name external-dns-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:default:external-dns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="install-external-dns">Install External DNS<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#install-external-dns" class="hash-link" aria-label="Direct link to Install External DNS" title="Direct link to Install External DNS" translate="no">​</a></h3>
<p>We'll install External DNS using it's helm chart, setting the values to ensure we're using the Azure Private DNS provider and pass in the managed identity details.</p>
<p>First, lets create the values file.</p>
<blockquote>
<p><strong>NOTE:</strong> We default to the 'debug' log level for testing, but you can remove that line to minimize logging once you're up and running. The default value for logLevel is 'info'.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> values.yaml</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">fullnameOverride: external-dns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">serviceAccount:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/client-id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">podLabels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">provider: azure-private-dns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">azure:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  resourceGroup: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${RG}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  tenantId: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${TENANT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  subscriptionId: "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${SUB_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  useWorkloadIdentityExtension: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">logLevel: debug</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>Run the helm install.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Add the helm repo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm repo </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> bitnami https://charts.bitnami.com/bitnami</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Update the helm repo in case you already have it</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm repo update bitnami</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Install external dns</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> external-dns bitnami/external-dns </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> values.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="test-external-dns">Test External DNS<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#test-external-dns" class="hash-link" aria-label="Direct link to Test External DNS" title="Direct link to Test External DNS" translate="no">​</a></h3>
<p>Finally, lets make sure everything is working. We'll create a deployment and a service with both a private load balancer annotation and the annotation used by External DNS to trigger record creation.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Test ExternalDNS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    matchLabels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      app: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  template:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        external-dns.alpha.kubernetes.io/hostname: pod.griffdemo123.com</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        app: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      hostNetwork: true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - image: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        name: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - containerPort: 80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">---</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: nginx-svc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    service.beta.kubernetes.io/azure-load-balancer-internal: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    external-dns.alpha.kubernetes.io/hostname: hello.griffdemo123.com</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    external-dns.alpha.kubernetes.io/internal-hostname: hello-clusterip.griffdemo123.com</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  - port: 80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    protocol: TCP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    targetPort: 80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    app: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  type: LoadBalancer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>You can check the logs for external DNS as follows:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># To dump the current pod logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> app.kubernetes.io/instance</span><span class="token operator">=</span><span class="token plain">external-dns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># To follow the pod logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> app.kubernetes.io/instance</span><span class="token operator">=</span><span class="token plain">external-dns</span><br></span></code></pre></div></div>
<p>Show the records created.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network private-dns record-set a list </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-z</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AZURE_DNS_ZONE</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># SAMPLE OUTPUT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- aRecords:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - ipv4Address: </span><span class="token number">10.2</span><span class="token plain">.0.7</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  etag: 1f85f096-4036-408f-aa54-2d58d0523a96</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  fqdn: hello.griffdemo123.com.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  id: /subscriptions/XXXXXX-XXXX/resourceGroups/ephexternaldnsdemo/providers/Microsoft.Network/privateDnsZones/griffdemo123.com/A/hello</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  isAutoRegistered: </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name: hello</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resourceGroup: ephexternaldnsdemo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ttl: </span><span class="token number">300</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type: Microsoft.Network/privateDnsZones/A</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- aRecords:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - ipv4Address: </span><span class="token number">10.0</span><span class="token plain">.11.167</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  etag: bf268fab-6678-4ae4-ae50-0cf49b314a0c</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  fqdn: hello-clusterip.griffdemo123.com.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  id: /subscriptions/XXXXXX-XXXX/resourceGroups/ephexternaldnsdemo/providers/Microsoft.Network/privateDnsZones/griffdemo123.com/A/hello-clusterip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  isAutoRegistered: </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  name: hello-clusterip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  resourceGroup: ephexternaldnsdemo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ttl: </span><span class="token number">300</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  type: Microsoft.Network/privateDnsZones/A</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-a-record-for-a-pod-ip">Create a Record for a Pod IP<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#create-a-record-for-a-pod-ip" class="hash-link" aria-label="Direct link to Create a Record for a Pod IP" title="Direct link to Create a Record for a Pod IP" translate="no">​</a></h3>
<p>If you need to create a DNS record for a pod IP, you can do this by creating a headless service that is annotated for external-dns. External DNS will see the service and then go and retrieve the pod IP, as documented in this PR:
<a href="https://github.com/kubernetes-sigs/external-dns/pull/498" target="_blank" rel="noopener noreferrer" class="">for headless services use podip instead of hostip #498</a></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Test ExternalDNS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    matchLabels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      app: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  template:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        app: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - image: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        name: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        - containerPort: 80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">---</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: nginx-svc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    external-dns.alpha.kubernetes.io/hostname: pod.griffdemo123.com</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  ports:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  - port: 80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    protocol: TCP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    targetPort: 80</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  selector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    app: nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  clusterIP: None</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span></code></pre></div></div>
<p>Check the record was created via CLI, or you can use the portal</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the pod IP from kubernetes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get pod </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">app</span><span class="token operator">=</span><span class="token plain">nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">jsonpath</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{.items[0].status.podIP}'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10.244</span><span class="token plain">.2.14</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the IP from the Azure Private Zone</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network private-dns record-set a list </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-z</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AZURE_DNS_ZONE</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> yaml </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[?fqdn == 'pod.</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$AZURE_DNS_ZONE</span><span class="token string" style="color:rgb(255, 121, 198)">.'].aRecords"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- - ipv4Address: </span><span class="token number">10.244</span><span class="token plain">.2.14</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/12/18/external-dns-workload-identity#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>In the above example we set up and AKS cluster, enabled with Azure Workload Identity and installed external-dns to automatically managed private DNS records in and Azure Private Zone. We demonstrated this for both Services and Pods. There are other options for managing the rights of the external-dns user, but I believe that Workload Identity gives you the best overall granularity of control.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Linux Capabilities in AKS]]></title>
        <id>https://azureglobalblackbelts.com/2023/11/27/capabilities-in-aks</id>
        <link href="https://azureglobalblackbelts.com/2023/11/27/capabilities-in-aks"/>
        <updated>2023-11-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[An exploration on how to use Linux capabilities(7) in AKS.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="introduction">Introduction<a href="https://azureglobalblackbelts.com/2023/11/27/capabilities-in-aks#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<p>Right after Kubernetes 1.21, the way <a href="https://man7.org/linux/man-pages/man7/capabilities.7.html" target="_blank" rel="noopener noreferrer" class="">Capabilities(7)</a> worked in Kubernetes changed. At that version, a change in the upstream code enforced that Capabilities will only work when <code>runAsUser</code> is set to <code>0</code> - meaning <code>root</code>. This is somewhat counterintuitive to what most of us would expect but code goes into the reasoning and how to work with Capabilities after 1.21.</p>
<p>The <a href="https://github.com/containerd/containerd/blob/main/pkg/cri/server/container_create_linux.go#L260-L267" target="_blank" rel="noopener noreferrer" class="">code</a> that prevents any user other than <code>root</code> to have capabilities. This was added by the commit referenced <a href="https://github.com/containerd/containerd/commit/50c73e6dc550c2cdb579e303ac26394497f9f331" target="_blank" rel="noopener noreferrer" class="">here</a>:</p>
<div class="language-golang codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-golang codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">	// Clear all ambient capabilities. The implication of non-root + caps</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	// is not clearly defined in Kubernetes.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	// See https://github.com/kubernetes/kubernetes/issues/56374</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	// Keep docker's behavior for now.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	specOpts = append(specOpts,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">		customopts.WithoutAmbientCaps,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">		customopts.WithSelinuxLabels(processLabel, mountLabel),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">	)</span><br></span></code></pre></div></div>
<p>On the previous note, we can add/remove capabilities to <code>root</code> - which essentially removes a lot of the superpowers that <code>root</code> have on by default (e.g.: cap_net_admin).</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="approaches">Approaches<a href="https://azureglobalblackbelts.com/2023/11/27/capabilities-in-aks#approaches" class="hash-link" aria-label="Direct link to Approaches" title="Direct link to Approaches" translate="no">​</a></h2>
<ol>
<li class="">
<p>Using <code>RunAsUser: 0</code> but restricting the capabilities in the account</p>
<p>In the example below we will be granting <code>cap_ipc_lock</code> to the running user (root) and nothing else.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> gbbapp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> gbbapp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">namespace</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ns</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">gbb</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">replicas</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">selector</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">matchLabels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> gbbapp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">template</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> gbbapp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">containers</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> gbbapp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> gbbapp/k8s</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">cfa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"/bin/bash"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">args</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"-c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"sleep 3600"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">securityContext</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">runAsUser</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">capabilities</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">drop</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"ALL"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"IPC_LOCK"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<ol start="2">
<li class="">Adding capabilities to binaries during the build process</li>
</ol>
<p>It is possible to add capabilities during the build process with docker/podman. With this approach you can remove the <code>RunAsUser</code> parameter altogether. The capabilities added there will persist when the image runs as a container. The following example adds <code>cap_ipc_lock</code> to python3.8</p>
<ol>
<li class="">
<p>Create a Dockerfile</p>
<div class="language-Dockerfile language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM ubuntu</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN apt-get update &amp;&amp; apt-get install -y libcap2-bin &amp;&amp; \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    setcap cap_ipc_lock+eip /usr/bin/python3.8</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">CMD ["/bin/bash"]</span><br></span></code></pre></div></div>
</li>
<li class="">
<p>Create an ACR instance</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RESOURCE_GROUP_NAME</span><span class="token operator">=</span><span class="token plain">rg-setcomp</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOCATION</span><span class="token operator">=</span><span class="token plain">westus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token plain">myacrname</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RESOURCE_GROUP_NAME}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${LOCATION}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${ACR_NAME}</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${LOCATION}</span><br></span></code></pre></div></div>
</li>
<li class="">
<p>Add the container to ACR</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr build </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${MY_ACR}</span><span class="token plain">/setcomp:</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">.Run.ID</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><br></span></code></pre></div></div>
</li>
<li class="">
<p>Exec into the container and verify that the capability was added by running the <code>getcap</code> command against a binary, which in this case is <code>python3.8</code>:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ getcap /usr/bin/python3.8</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">/usr/bin/python3.8 </span><span class="token operator">=</span><span class="token plain"> cap_ipc_lock+eip</span><br></span></code></pre></div></div>
</li>
</ol>
</li>
</ol>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/11/27/capabilities-in-aks#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>In this article we've explored how to enable Capabilities for a container and how to limit it's scope. You now have the pieces and bits needed to enable the minimum amount of capabilities for any given container.</p>]]></content>
        <author>
            <name>Diego Casati</name>
            <uri>https://github.com/dcasati</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image Verification Part 1 - Notation CLI]]></title>
        <id>https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage</id>
        <link href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage"/>
        <updated>2023-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to use the Notary project's 'notation' cli tool to sign and verify container images]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="introduction">Introduction<a href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<p>This is part one of a two part post on container image signing and runtime verification. In this post, we'll walk through the <a href="https://github.com/notaryproject/notation" target="_blank" rel="noopener noreferrer" class="">notation</a> project and its ability to sign container images, using the <a href="https://github.com/notaryproject/specifications" target="_blank" rel="noopener noreferrer" class="">Notary</a> project specification. In the next post, we'll walk through setting up <a href="https://open-policy-agent.github.io/gatekeeper/website/" target="_blank" rel="noopener noreferrer" class="">gatekeeper</a> and <a href="https://github.com/deislabs/ratify/blob/main/README.md" target="_blank" rel="noopener noreferrer" class="">ratify</a> to perform policy based runtime verification of images.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="installation">Installation<a href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage#installation" class="hash-link" aria-label="Direct link to Installation" title="Direct link to Installation" translate="no">​</a></h2>
<p>For this walk through you'll need to have Docker running locally, and have the notation cli installed. You can find the install steps for each in the list below:</p>
<ul>
<li class=""><a href="https://www.docker.com/get-started/" target="_blank" rel="noopener noreferrer" class="">Docker</a></li>
<li class=""><a href="https://notaryproject.dev/docs/user-guides/installation/cli/" target="_blank" rel="noopener noreferrer" class="">Notation CLI</a></li>
</ul>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="azure-container-registry">Azure Container Registry<a href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage#azure-container-registry" class="hash-link" aria-label="Direct link to Azure Container Registry" title="Direct link to Azure Container Registry" translate="no">​</a></h2>
<p>You can really use any OCI compatible registry, but since we'll later be using AKS for verification, we'll create an Azure Container Registery for use in the following steps.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Setup Environment Variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">EphNotationTesting</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token plain">mynotationlab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Azure Container Registry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Standard</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Login to the ACR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr login </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><br></span></code></pre></div></div>
<p>We could build our own container image from scratch, but the image signing process doesnt really change, so let's just import an existing image to use. This is a good demonstration of the best practice of never directly pulling public images. Instead of direclty pulling public images into your cluster, you should import and verify any public images you wish to use. We'll take it a step further by also signing the imported image.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># For later testing, lets also import an unsigned image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--source</span><span class="token plain"> docker.io/library/nginx:1.25.3 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token plain"> nginx:1.25.3</span><br></span></code></pre></div></div>
<p>Now we can play around with notation. Notation does require you use the image SHA instead of tags, so we'll get that first.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the nginx image SHA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IMAGE_SHA</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az acr repository show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $ACR_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"nginx:1.25.3"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> digest</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<p>Now we'll use the notation cli to check the image for existing signatures and then create and apply a new signature. The notation project does provide the ability to generate a test certificate locally to get you up and running quickly. We'll try that first and then move on to using Azure Key Vault for the certificate.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># List the signatures on the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should see the image has no signatures</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation </span><span class="token function" style="color:rgb(80, 250, 123)">ls</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Generate a test RSA key and self-signed certificat</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation cert generate-test </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--default</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"brooklyn.io"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># List certs to confirm the cert exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation cert </span><span class="token function" style="color:rgb(80, 250, 123)">ls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sign the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation sign </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now check the image signatures</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should now see that the image is signed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation </span><span class="token function" style="color:rgb(80, 250, 123)">ls</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><br></span></code></pre></div></div>
<p>You should now have a successfully signed image. Next, we can use notation to verify the image has been signed. For that we'll need to create a local trust policy for notation.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a trust policy for notation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> ./trustpolicy.json</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "version": "1.0",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "trustPolicies": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "name": "brooklyn-images",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "registryScopes": [ "*" ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "signatureVerification": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                "level" : "strict"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "trustStores": [ "ca:brooklyn.io" ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "trustedIdentities": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                "*"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Import the policy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation policy </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> ./trustpolicy.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Show the policy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation policy show</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Verify the image meets the policy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should get a message that the signature was verified</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation verify </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="cleanup">Cleanup<a href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage#cleanup" class="hash-link" aria-label="Direct link to Cleanup" title="Direct link to Cleanup" translate="no">​</a></h2>
<p>Before moving on, we should delete and re-import the image, since we dont want the local test certificate on the image any more. You can also remove the signature with <a href="https://notaryproject.dev/docs/user-guides/how-to/manage-signatures/#delete-a-signature-on-an-artifact" target="_blank" rel="noopener noreferrer" class="">oras</a>, but we'll keep it simple for now.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Delete and re-import the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr repository delete </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--repository</span><span class="token plain"> nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--source</span><span class="token plain"> docker.io/library/nginx:1.25.3 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token plain"> nginx:1.25.3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IMAGE_SHA</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az acr repository show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $ACR_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"nginx:1.25.3"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> digest</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="sign-images-with-a-cert-from-azure-key-vault">Sign Images with a Cert from Azure Key Vault<a href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage#sign-images-with-a-cert-from-azure-key-vault" class="hash-link" aria-label="Direct link to Sign Images with a Cert from Azure Key Vault" title="Direct link to Sign Images with a Cert from Azure Key Vault" translate="no">​</a></h2>
<p>Using the notation locally generated test certificate does give you some level of comfort about the source of the image, but you really want to use a certificate from a trusted store. It's also important to have an accessible store that can be used by remote processes, like your devops pipeline. Fortunately, notation provides a plugin for Azure Key Vault which can be used to sign images with certifiates source from Azure Key Vault.</p>
<p>First you need to install the Azure Key Vault plug-in for notation. You can find instructions for your OS <a href="https://github.com/Azure/notation-azure-kv#installation-the-akv-plugin" target="_blank" rel="noopener noreferrer" class="">here</a>.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Confirm you successfuly installed the plugin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation plugin list</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">NAME       DESCRIPTION                       VERSION   CAPABILITIES                ERROR</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">azure-kv   Notation Azure Key Vault plugin   </span><span class="token number">1.0</span><span class="token plain">.1     </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">SIGNATURE_GENERATOR.RAW</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">   </span><span class="token operator">&lt;</span><span class="token plain">nil</span><span class="token operator">&gt;</span><br></span></code></pre></div></div>
<p>Now we'll create an Azure Key Vault instance for our test and configure the signature. It's important that the secret properties specify that the content type  is 'application/x-pem-file' as ratify, which we'll use later, cannot read the default PFX format.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKV_NAME</span><span class="token operator">=</span><span class="token plain">mynotationtest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the key vault</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AKV_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> --enable-rbac-authorization </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Set some variables for the cert creation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Name of the certificate created in AKV</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CERT_NAME</span><span class="token operator">=</span><span class="token plain">brooklyn-io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CERT_SUBJECT</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"CN=brooklyn.io,O=Notation,L=Brooklyn,ST=NY,C=US"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CERT_PATH</span><span class="token operator">=</span><span class="token plain">./</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CERT_NAME}</span><span class="token plain">.pem</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Set the access policy for yourself to create and get certs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az ad signed-in-user show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault set-policy </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AKV_NAME</span><span class="token plain"> --certificate-permissions create get --key-permissions sign --object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$USER_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Key Vault certificate policy file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> ./brooklyn_io_policy.json</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "issuerParameters": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "certificateTransparency": null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "name": "Self"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "keyProperties": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      "exportable": false,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      "keySize": 2048,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      "keyType": "RSA",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      "reuseKey": true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "secretProperties": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "contentType": "application/x-pem-file"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "x509CertificateProperties": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "ekus": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "1.3.6.1.5.5.7.3.3"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "keyUsage": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "digitalSignature"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "subject": "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${CERT_SUBJECT}</span><span class="token string" style="color:rgb(255, 121, 198)">",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "validityInMonths": 12</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the signing certificate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault certificate create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CERT_NAME</span><span class="token plain"> --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AKV_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> @brooklyn_io_policy.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the Key ID of the signing key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KEY_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az keyvault certificate show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $CERT_NAME --vault-name $AKV_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'kid'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now sign the previosly imported nginx image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should get a confirmation that the image was successfully signed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation sign --signature-format cose </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--id</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--plugin</span><span class="token plain"> azure-kv --plugin-config </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">self_signed</span><span class="token operator">=</span><span class="token plain">true </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Confirm the signature</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation </span><span class="token function" style="color:rgb(80, 250, 123)">ls</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><br></span></code></pre></div></div>
<p>Finally, now that we have the image signed with our certifcate from Azure Key Vault, lets set up our local environment trust policy to allow us to verify the image signature is valid locally. We'll need to download the certificate and add a local trust store.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Download the cert from Azure Key Vault so we can verify the image locally with the AKV cert</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault certificate download </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CERT_NAME</span><span class="token plain"> --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$AKV_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--file</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CERT_PATH</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">STORE_TYPE</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"ca"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">STORE_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"brooklyn.io"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation cert </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--type</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$STORE_TYPE</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--store</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$STORE_NAME</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CERT_PATH</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> ./trustpolicy.json</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "version": "1.0",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "trustPolicies": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "name": "brooklyn-images",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "registryScopes": [ "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token string" style="color:rgb(255, 121, 198)">.azurecr.io/nginx" ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "signatureVerification": {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                "level" : "strict" </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "trustStores": [ "</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$STORE_TYPE</span><span class="token string" style="color:rgb(255, 121, 198)">:</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$STORE_NAME</span><span class="token string" style="color:rgb(255, 121, 198)">" ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "trustedIdentities": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">                "x509.subject: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$CERT_SUBJECT</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Import the policy and show it</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation policy </span><span class="token function" style="color:rgb(80, 250, 123)">import</span><span class="token plain"> ./trustpolicy.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation policy show</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Test image verification</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">notation verify </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample success message!!!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Successfully verified signature </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> mynotationlab.azurecr.io/nginx@sha256:86e53c4c16a6a276b204b0fd3a8143d86547c967dc8258b3d47c3a21bb68d3c6</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>You should now have some familiarity with the notation cli tool and how to use it to sign container images in a container registry with both self-signed certificates and certificates from Azure Key Vault. The next step would be to enable verification in kubernetes.</p>
<p><strong>Next:</strong> <a class="" href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification.html">Part 2 - Image Verification in AKS</a></p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image Verification Part 2 - Image Verification with Gatekeeper and Ratify]]></title>
        <id>https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification</id>
        <link href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification"/>
        <updated>2023-11-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to manually setup Gatekeeper and Ratify on an AKS cluster to enable runtime image signature verification.]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="introduction">Introduction<a href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<blockquote>
<p><strong>NOTE:</strong> The manifest files used in this post can be found <a href="https://github.com/swgriffith/azure-guides/tree/master/image-signing" target="_blank" rel="noopener noreferrer" class="">here</a></p>
</blockquote>
<p>In the prior post, we ran through using the notation cli tool to sign images in Azure Container Registry. If you havent gone through that post, I recommend you start there at <a class="" href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage.html">Part 1 - Image Signing with Notation</a></p>
<p>In this post, we'll walk through the steps to manually configure AKS with Gatekeeper and the Ratify project to enforce an image signature verification policy.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation-and-setup">Cluster Creation and Setup<a href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification#cluster-creation-and-setup" class="hash-link" aria-label="Direct link to Cluster Creation and Setup" title="Direct link to Cluster Creation and Setup" translate="no">​</a></h2>
<p>For Ratify to work with Gatekeeper, we'll need a cluster with both the OIDC Issuer and Workload Idenitty add-ons enabled. In the last step below, we'll grab the OIDC Issuer URL for the cluster, which is used when you want to federate a Kubernetes Service Account with an Azure Active Directory Identity.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Set environment variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">EphNotationTesting</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token plain">mynotationlab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">imagesigninglab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the AKS Cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--attach-acr </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token string variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token string variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token string variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token string variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="managed-identity-setup">Managed Identity Setup<a href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification#managed-identity-setup" class="hash-link" aria-label="Direct link to Managed Identity Setup" title="Direct link to Managed Identity Setup" translate="no">​</a></h2>
<p>Ratify will need to be able to read from the Key Vault, so we'll need to create a managed identity and grant it the proper rights on Azure Container Registry. The only right needed is 'acrpull', as ratify will pull the image to check it's signature.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBSCRIPTION</span><span class="token operator">=</span><span class="token plain">xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">TENANT_ID</span><span class="token operator">=</span><span class="token plain">xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_NAME</span><span class="token operator">=</span><span class="token plain">ratify-identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RATIFY_NAMESPACE</span><span class="token operator">=</span><span class="token plain">gatekeeper-system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the ratify identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> --resource-group </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${RG}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${LOC}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subscription</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${SUBSCRIPTION}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the identity IDs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_OBJECT_ID</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable string variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_NAME}</span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> --resource-group </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable string variable" style="color:rgb(189, 147, 249);font-style:italic">${RG}</span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">'principalId'</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_NAME</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant the ratify identity acr pull rights</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--assignee-object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_OBJECT_ID}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> acrpull </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> subscriptions/</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${SUBSCRIPTION}</span><span class="token plain">/resourceGroups/</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RG}</span><span class="token plain">/providers/Microsoft.ContainerRegistry/registries/</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${ACR_NAME}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the managed identity to the service account used by ratify</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> ratify-federated-credential </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${RG}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${RATIFY_NAMESPACE}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token string" style="color:rgb(255, 121, 198)">"ratify-admin"</span><br></span></code></pre></div></div>
<p>Since Ratify will be checking the signature, it also needs the ability to get the secret from Azure Key Vault.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Grant the ratify identity rights</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault set-policy </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKV_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--secret-permissions get </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_OBJECT_ID}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="install-gatekeeper-and-ratify">Install Gatekeeper and Ratify<a href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification#install-gatekeeper-and-ratify" class="hash-link" aria-label="Direct link to Install Gatekeeper and Ratify" title="Direct link to Install Gatekeeper and Ratify" translate="no">​</a></h2>
<p>While AKS does, now in preview, have a <a href="https://learn.microsoft.com/en-us/azure/aks/image-integrity?tabs=azure-cli" target="_blank" rel="noopener noreferrer" class="">managed add-on for gatekeeper and ratify</a>, it's still in preview. For this post, we'll manually install both Gatekeeper and Ratify so that we can see all the moving parts and more easily debug any issues.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Install Gatekeeper</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm repo </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> gatekeeper https://open-policy-agent.github.io/gatekeeper/charts</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> gatekeeper/gatekeeper  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    --name-template</span><span class="token operator">=</span><span class="token plain">gatekeeper </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RATIFY_NAMESPACE}</span><span class="token plain"> --create-namespace </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">enableExternalData</span><span class="token operator">=</span><span class="token plain">true </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">validatingWebhookTimeoutSeconds</span><span class="token operator">=</span><span class="token number">5</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">mutatingWebhookTimeoutSeconds</span><span class="token operator">=</span><span class="token number">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the key vault URI which ratify will need</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VAULT_URI</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az keyvault show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">AKV_NAME</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> --resource-group $</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">{</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token variable punctuation" style="color:rgb(248, 248, 242);font-style:italic">}</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"properties.vaultUri"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Install Ratify</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm repo </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> ratify https://ratify-project.github.io/ratify</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> ratify </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ratify/ratify </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--atomic</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${RATIFY_NAMESPACE}</span><span class="token plain"> --create-namespace </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">featureFlags.RATIFY_CERT_ROTATION</span><span class="token operator">=</span><span class="token plain">true </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">akvCertConfig.enabled</span><span class="token operator">=</span><span class="token plain">true </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">akvCertConfig.vaultURI</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${VAULT_URI}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">akvCertConfig.cert1Name</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${CERT_NAME}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">akvCertConfig.tenantId</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${TENANT_ID}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">oras.authProviders.azureWorkloadIdentityEnabled</span><span class="token operator">=</span><span class="token plain">true </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">azureWorkloadIdentity.clientId</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${IDENTITY_CLIENT_ID}</span><br></span></code></pre></div></div>
<p>Now that gatekeeper and ratify are running, lets apply a new constraint and policy template for the image verification policy. You should inspect the two files in the commands below for your own knowledge of how they work.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the gatekeeper policy template</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> https://raw.githubusercontent.com/swgriffith/azure-guides/master/image-signing/ratify-policy-template.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Apply the policy with a gatekeeper constraint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> https://raw.githubusercontent.com/swgriffith/azure-guides/master/image-signing/ratify-policy-constraint.yaml</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="test-the-policy">Test the policy!<a href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification#test-the-policy" class="hash-link" aria-label="Direct link to Test the policy!" title="Direct link to Test the policy!" translate="no">​</a></h2>
<p>Our setup is complete. We can now try to create a pod using an unsigned and signed container image.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># First try to use the docker hub nginx image, which is unsigned</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This should fail</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl run demo </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> default </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token operator">=</span><span class="token plain">nginx:latest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Error Message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Error from server </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Forbidden</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: admission webhook </span><span class="token string" style="color:rgb(255, 121, 198)">"validation.gatekeeper.sh"</span><span class="token plain"> denied the request: </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">ratify-constraint</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> Subject failed verification: docker.io/library/nginx@sha256:86e53c4c16a6a276b204b0fd3a8143d86547c967dc8258b3d47c3a21bb68d3c6</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now try using our container image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This pod should be successfully created!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl run demo </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> default </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain">.azurecr.io/nginx@</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IMAGE_SHA</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/11/09/part2-aks-image-verification#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>Between this post and <a class="" href="https://azureglobalblackbelts.com/2023/11/09/part1-notation-usage.html">Part 1</a>, we learned about the notation cli tool, which can be used to sign container images via the notary specification. We signed images with both a local test certificate, as well as a certificate managed by Azure Key Vault. Finally, we enabled Gatekeeper and Ratify on an AKS cluster to provide an image signature verification policy.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AKS Custom Policy]]></title>
        <id>https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy</id>
        <link href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy"/>
        <updated>2023-10-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Creating an AKS custom Gatekeeper policy to restrict ingress host names]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="introduction">Introduction<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction" translate="no">​</a></h2>
<p>In this walkthrough we'll use the <a href="https://open-policy-agent.github.io/gatekeeper/website/" target="_blank" rel="noopener noreferrer" class="">Gatekeeper</a> project and <a href="https://learn.microsoft.com/en-us/azure/governance/policy/concepts/policy-for-kubernetes" target="_blank" rel="noopener noreferrer" class="">AKS Policy</a> to create a policy that resticts the host name on a Kubernetes Ingress. The host names used for validation will be provided via parameters on the Azure Policy assignment.</p>
<p>The YAML manifest files for this walk through are located <a href="https://github.com/swgriffith/azure-guides/tree/master/aks-custom-policy" target="_blank" rel="noopener noreferrer" class="">here</a></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-setup">Cluster Setup<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#cluster-setup" class="hash-link" aria-label="Direct link to Cluster Setup" title="Direct link to Cluster Setup" translate="no">​</a></h2>
<p>First we'll create an AKS cluster with Azure Policy for AKS enabled.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Define variables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">PolicyTestRG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">policytest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the AKS cluster with Azure Policy enabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> --enable-addons azure-policy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="constraint-template-creation">Constraint Template Creation<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#constraint-template-creation" class="hash-link" aria-label="Direct link to Constraint Template Creation" title="Direct link to Constraint Template Creation" translate="no">​</a></h2>
<p>While the cluster creates we can work on the contraint template. You can read more about constraint templates here, but they are the CRD that provides Gatekeeper the policy details, including the evaluation which is written in <a href="https://www.openpolicyagent.org/docs/latest/policy-language/" target="_blank" rel="noopener noreferrer" class="">rego</a>.</p>
<p>In our example, we'll keep it simple and just restrict the ingress host name to one of the values in an 'allowedhosts' array parameter. The allowedhosts parameter will be set via the constraint definition, or via the policy definition when we create the Azure Policy.</p>
<p>Create a new file named IngressHostnameConstraintTemplate.yaml with the following contents. Or use the doc in <a class="" href="https://azureglobalblackbelts.com/2023/10/26/manifests/IngressHostnameConstraintTemplate.yaml">manifests/IngressHostnameConstraintTemplate.yaml</a></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">apiVersion</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> templates.gatekeeper.sh/v1beta1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> ConstraintTemplate</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">metadata</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> k8srestrictingresshostname</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">annotations</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">description</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Restricts hostname for ingress</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">crd</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">spec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">names</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">kind</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> K8sRestrictIngressHostname </span><span class="token comment" style="color:rgb(98, 114, 164)"># this must be the same name as the name on metadata.name (line 4)            </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">validation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)"># Schema for the `parameters` field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token key atrule">openAPIV3Schema</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token key atrule">properties</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token key atrule">allowedhosts</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> array</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token key atrule">items</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token key atrule">type</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> string        </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">targets</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">target</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> admission.k8s.gatekeeper.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token key atrule">rego</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token scalar string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token scalar string" style="color:rgb(255, 121, 198)">        package k8srestrictingresshostname</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        violation</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token key atrule">"msg"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> msg</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          host </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">= input.review.object.spec.rules</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">.host</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          not input_allowed_hosts(host)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          msg </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">= sprintf("invalid ingress host %q"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">host</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        input_allowed_hosts(field) </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          endswith(field</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> input.parameters.allowedhosts</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">_</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="azure-policy-creation">Azure Policy Creation<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#azure-policy-creation" class="hash-link" aria-label="Direct link to Azure Policy Creation" title="Direct link to Azure Policy Creation" translate="no">​</a></h2>
<p>To create a policy in Azure that uses the above constraint template, we need to base64 encode the above file and pass that into a new policy definition.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> ./manifests/IngressHostnameConstraintTemplate.yaml</span><span class="token operator">|</span><span class="token plain">base64</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQpraW5kOiBDb25zdHJhaW50VGVtcGxhdGUKbWV0YWRhdGE6CiAgbmFtZTogazhzcmVzdHJpY3RpbmdyZXNzaG9zdG5hbWUKICBhbm5vdGF0aW9uczoKICAgIGRlc2NyaXB0aW9uOiBSZXN0cmljdHMgaG9zdG5hbWUgZm9yIGluZ3Jlc3MKc3BlYzoKICBjcmQ6CiAgICBzcGVjOgogICAgICBuYW1lczoKICAgICAgICBraW5kOiBLOHNSZXN0cmljdEluZ3Jlc3NIb3N0bmFtZSAjIHRoaXMgbXVzdCBiZSB0aGUgc2FtZSBuYW1lIGFzIHRoZSBuYW1lIG9uIG1ldGFkYXRhLm5hbWUgKGxpbmUgNCkgICAgICAgICAgICAKICAgICAgdmFsaWRhdGlvbjoKICAgICAgICAjIFNjaGVtYSBmb3IgdGhlIGBwYXJhbWV0ZXJzYCBmaWVsZAogICAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgIGFsbG93ZWRob3N0czoKICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nICAgICAgICAKICB0YXJnZXRzOgogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaAogICAgICByZWdvOiB8CiAgICAgICAgcGFja2FnZSBrOHNyZXN0cmljdGluZ3Jlc3Nob3N0bmFtZQoKICAgICAgICB2aW9sYXRpb25beyJtc2ciOiBtc2d9XSB7CiAgICAgICAgICBob3N0IDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5ydWxlc1tfXS5ob3N0CiAgICAgICAgICBub3QgaW5wdXRfYWxsb3dlZF9ob3N0cyhob3N0KQogICAgICAgICAgbXNnIDo9IHNwcmludGYoImludmFsaWQgaW5ncmVzcyBob3N0ICVxIiwgW2hvc3RdKQogICAgICAgIH0KCiAgICAgICAgaW5wdXRfYWxsb3dlZF9ob3N0cyhmaWVsZCkgewogICAgICAgICAgZW5kc3dpdGgoZmllbGQsIGlucHV0LnBhcmFtZXRlcnMuYWxsb3dlZGhvc3RzW19dKQogICAgICAgIH0</span><span class="token operator">=</span><br></span></code></pre></div></div>
<p>Create a new file called 'policy-definition.json', and paste the following contenxt, updating the base64 encoded value with your output from above.</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token property">"properties"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"displayName"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Restrict Ingress Hostname"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"policyType"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Custom"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"mode"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Microsoft.Kubernetes.Data"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"description"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Restrict the host names used in ingress objects"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"metadata"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"version"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"1.0.0"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"category"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Kubernetes"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"parameters"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"effect"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"type"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"String"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"metadata"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"displayName"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Effect"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"description"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Enable or disable the execution of the policy"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"allowedValues"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"audit"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"deny"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"disabled"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"defaultValue"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"audit"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"excludedNamespaces"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"type"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Array"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"metadata"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"displayName"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Namespace exclusions"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"description"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"List of Kubernetes namespaces to exclude from policy evaluation. Providing a value for this parameter is optional."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"defaultValue"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"kube-system"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"gatekeeper-system"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"azure-arc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"allowedhosts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"type"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Array"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"metadata"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token property">"displayName"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Allowed Ingress Host Names"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                  </span><span class="token property">"description"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"List of allowed host names that can be used on Ingress objects."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"defaultValue"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"policyRule"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"if"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"field"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"type"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"in"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"AKS Engine"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"Microsoft.Kubernetes/connectedClusters"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token string" style="color:rgb(255, 121, 198)">"Microsoft.ContainerService/managedClusters"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token property">"then"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"effect"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[parameters('effect')]"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token property">"details"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"templateInfo"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><span class="token property">"sourceType"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Base64Encoded"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><span class="token property">"content"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQpraW5kOiBDb25zdHJhaW50VGVtcGxhdGUKbWV0YWRhdGE6CiAgbmFtZTogazhzcmVzdHJpY3RpbmdyZXNzaG9zdG5hbWUKICBhbm5vdGF0aW9uczoKICAgIGRlc2NyaXB0aW9uOiBSZXN0cmljdHMgaG9zdG5hbWUgZm9yIGluZ3Jlc3MKc3BlYzoKICBjcmQ6CiAgICBzcGVjOgogICAgICBuYW1lczoKICAgICAgICBraW5kOiBLOHNSZXN0cmljdEluZ3Jlc3NIb3N0bmFtZSAjIHRoaXMgbXVzdCBiZSB0aGUgc2FtZSBuYW1lIGFzIHRoZSBuYW1lIG9uIG1ldGFkYXRhLm5hbWUgKGxpbmUgNCkgICAgICAgICAgICAKICAgICAgdmFsaWRhdGlvbjoKICAgICAgICAjIFNjaGVtYSBmb3IgdGhlIGBwYXJhbWV0ZXJzYCBmaWVsZAogICAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgIGFsbG93ZWRob3N0czoKICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nICAgICAgICAKICB0YXJnZXRzOgogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaAogICAgICByZWdvOiB8CiAgICAgICAgcGFja2FnZSBrOHNyZXN0cmljdGluZ3Jlc3Nob3N0bmFtZQoKICAgICAgICB2aW9sYXRpb25beyJtc2ciOiBtc2d9XSB7CiAgICAgICAgICBob3N0IDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5ydWxlc1tfXS5ob3N0CiAgICAgICAgICBub3QgaW5wdXRfYWxsb3dlZF9ob3N0cyhob3N0KQogICAgICAgICAgbXNnIDo9IHNwcmludGYoImludmFsaWQgaW5ncmVzcyBob3N0ICVxIiwgW2hvc3RdKQogICAgICAgIH0KCiAgICAgICAgaW5wdXRfYWxsb3dlZF9ob3N0cyhmaWVsZCkgewogICAgICAgICAgZW5kc3dpdGgoZmllbGQsIGlucHV0LnBhcmFtZXRlcnMuYWxsb3dlZGhvc3RzW19dKQogICAgICAgIH0="</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"excludedNamespaces"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[parameters('excludedNamespaces')]"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"values"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><span class="token property">"allowedhosts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[parameters('allowedhosts')]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"apiGroups"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><span class="token string" style="color:rgb(255, 121, 198)">"extensions"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><span class="token string" style="color:rgb(255, 121, 198)">"networking.k8s.io"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token property">"kinds"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><span class="token string" style="color:rgb(255, 121, 198)">"Ingress"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre></div></div>
<p>Now in the Azure portal, go to Azure Policy and create a new policy using the tempalate json from above.</p>
<ol>
<li class="">In Azure Policy, open 'Definitions' and click '+ Policy Definition'</li>
</ol>
<p><img decoding="async" loading="lazy" alt="create policy 1" src="https://azureglobalblackbelts.com/assets/images/create_policy1-512a5c3c163990ef36f1dd8fb0fc04d6.jpg" width="1093" height="451" class="img_ev3q"></p>
<ol start="2">
<li class="">Fill in the details and paste in the contents from your policy-definition.json and click 'Save'</li>
</ol>
<p><img decoding="async" loading="lazy" alt="create policy 2" src="https://azureglobalblackbelts.com/assets/images/create-policy2-d20e679b75dbdee1f7ab9f80d6eb72b8.jpg" width="909" height="1430" class="img_ev3q"></p>
<ol start="3">
<li class="">Once the policy is created you will be navigated to the policy where you can select 'Assign'</li>
</ol>
<p><img decoding="async" loading="lazy" alt="assign policy 1" src="https://azureglobalblackbelts.com/assets/images/create-policy3-078b439f59f4ffa3d3ad72ccca804843.jpg" width="759" height="287" class="img_ev3q"></p>
<ol start="4">
<li class="">Fill in the details in all the tabs, including the scope and optionally adjust the 'Effect' option to drive if the policy will audit or block</li>
</ol>
<p><img decoding="async" loading="lazy" alt="assign policy 2" src="https://azureglobalblackbelts.com/assets/images/create-policy4-e90f4aa21e255a00be57ffb0df7e9a6f.jpg" width="874" height="446" class="img_ev3q"></p>
<ol start="5">
<li class="">After you've reviewed the policy, click 'Create'</li>
</ol>
<p><img decoding="async" loading="lazy" alt="assign policy 3" src="https://azureglobalblackbelts.com/assets/images/create-policy5-c68826fd6f31945206700163810a2636.jpg" width="879" height="941" class="img_ev3q"></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="test-the-policy">Test the policy<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#test-the-policy" class="hash-link" aria-label="Direct link to Test the policy" title="Direct link to Test the policy" translate="no">​</a></h2>
<p>It can take 30 minutes or more for the policy to apply to the selected resource. You can accelerate the process with the following. The following assumes you set the policy scope to the resource group of the cluster we created above.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">az policy state trigger-scan --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><br></span></code></pre></div></div>
<p>While the above command runs, you can watch the cluster for constraint templates and constraints to be automatically created by Azure Policy.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get constrainttemplates</span><span class="token operator">|</span><span class="token function" style="color:rgb(80, 250, 123)">grep</span><span class="token plain"> k8srestrictingresshostname</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">k8srestrictingresshostname         49m</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check the Constraint </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This assume you have the jq command, but you can remove it</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get constraint </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token operator">=</span><span class="token plain">jsonpath</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{.items[?(@.kind=="K8sRestrictIngressHostname")]}'</span><span class="token operator">|</span><span class="token plain">jq</span><br></span></code></pre></div></div>
<p>If you apply this on a cluster that already has ingress instances that are not compliant, you will see them eventually in the portal, but can also look a the constraint itself.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get constraint </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token operator">=</span><span class="token plain">jsonpath</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{.items[?(@.kind=="K8sRestrictIngressHostname")].status.violations}'</span><span class="token operator">|</span><span class="token plain">jq</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"enforcementAction"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"dryrun"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"group"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"networking.k8s.io"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"kind"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Ingress"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"message"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"invalid ingress host </span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">myapp.com</span><span class="token string entity" style="color:rgb(255, 121, 198)">\"</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"ingress-policy-fail"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"namespace"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"default"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"version"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"v1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="test-the-policy-1">Test the policy<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#test-the-policy-1" class="hash-link" aria-label="Direct link to Test the policy" title="Direct link to Test the policy" translate="no">​</a></h2>
<p>Now lets try to create a new ingress that does not match the policy.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> manifests/sample-ingress.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ingress.networking.k8s.io/ingress-policy-pass created</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Error from server </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Forbidden</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: error when creating </span><span class="token string" style="color:rgb(255, 121, 198)">"manifests/sample-ingress.yaml"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> admission webhook </span><span class="token string" style="color:rgb(255, 121, 198)">"validation.gatekeeper.sh"</span><span class="token plain"> denied the request: </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">azurepolicy-k8srestrictingresshostname-ada01c8bf99df9ddb0a8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> invalid ingress </span><span class="token function" style="color:rgb(80, 250, 123)">host</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"myapp.com"</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/10/26/aks-custom-policy#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>You should now understand the process for creating a basic custom ConstraintTemplate and Azure Policy using that template.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AKS User Minimum Roles]]></title>
        <id>https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles</id>
        <link href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles"/>
        <updated>2023-10-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to use Azure AD RBAC in Azure Kubernetes Service]]></summary>
        <content type="html"><![CDATA[<p>The following provides guidance on the minimum roles needed by an AKS user to get their credentials and interact with a namespace we'll create called 'sample-app'.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup">Setup<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#setup" class="hash-link" aria-label="Direct link to Setup" title="Direct link to Setup" translate="no">​</a></h2>
<p>First we'll create an AKS cluster with Azure AD integrated authentication and Azure AD RBAC enabled. We will leave 'local accounts' enabled for simplicity, but that option would typically be disabled and you would provide AKS an admin user Group ID for cluster admin access.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SUBSCRIPTION_ID</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">EphAADDemo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">aad-demo</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-aad </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-azure-rbac</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the admin credential so we can create the namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--admin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl create ns sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Deploy an app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl create deployment nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token operator">=</span><span class="token plain">nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Expose the deployment as a Kubernetes service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl expose deployment nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--port</span><span class="token plain"> </span><span class="token number">8080</span><span class="token plain"> --target-port </span><span class="token number">80</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl create secret generic sample-secret --from-literal</span><span class="token operator">=</span><span class="token plain">message</span><span class="token operator">=</span><span class="token plain">Hello </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check out the created resources</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get all </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-test-service-principal">Create the test service principal<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#create-the-test-service-principal" class="hash-link" aria-label="Direct link to Create the test service principal" title="Direct link to Create the test service principal" translate="no">​</a></h3>
<p>We'll create a service principal with no rights to use as our user account.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the sample app user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az ad sp create-for-rbac --skip-assignment </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> json </span><span class="token operator">&gt;</span><span class="token plain"> sample-app-team-user.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the App ID and Password into some variables we can use</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">APP_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">cat</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> sample-app-team-user.json</span><span class="token variable operator" style="color:rgb(189, 147, 249);font-style:italic">|</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">jq </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> .appId</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">APP_SECRET</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">cat</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> sample-app-team-user.json</span><span class="token variable operator" style="color:rgb(189, 147, 249);font-style:italic">|</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">jq </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> .password</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">TENANT</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">cat</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> sample-app-team-user.json</span><span class="token variable operator" style="color:rgb(189, 147, 249);font-style:italic">|</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">jq </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> .tenant</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="allow-user-to-call-az-aks-get-credentials">Allow user to call 'az aks get-credentials'<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#allow-user-to-call-az-aks-get-credentials" class="hash-link" aria-label="Direct link to Allow user to call 'az aks get-credentials'" title="Direct link to Allow user to call 'az aks get-credentials'" translate="no">​</a></h3>
<p>We need to be able to get the cluster access details, which will live in the 'kubeconfig' file and include the cluster FQDN and API access certificates. We got the admin credentials above, but we dont want to use those. We'll use the admin credential again later, so dont delete it just yet.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># First we need the resource ID for the cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_RESOURCE_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Take a look at the role definition we'll apply</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># In particular, look at the enabled actions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role definition list </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Azure Kubernetes Service Cluster User Role"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Give our user the role</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_RESOURCE_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Azure Kubernetes Service Cluster User Role"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Login as the assigned user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az login --service-principal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_SECRET</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--tenant</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TENANT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check your basic access</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should be able to list AKS clusters only</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks list</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should not be able to see any resource groups, vms, etc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group list</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az vm list</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now try to get AKS cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<p>This is where things get a little weird in our scenario. We're signing in as a service account. In the next step we'll try to use the kubernetes cli (kubectl), and for normal human users you would get a device login prompt, which will take you to your normal Azure AD multi-factor auth flow. However, we're using a service principal so we need to take a few extra steps and use the <a href="https://azure.github.io/kubelogin/quick-start.html" target="_blank" rel="noopener noreferrer" class="">kubelogin</a> project to sign in.</p>
<p>You'll likely need to install kubelogin. You can find the installation steps here: <a href="https://azure.github.io/kubelogin/install.html" target="_blank" rel="noopener noreferrer" class="">Installation</a></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Convert the kube config file with kubelogin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubelogin convert-kubeconfig </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> azurecli</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="try-to-access-kubernetes-objects">Try to access kubernetes objects<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#try-to-access-kubernetes-objects" class="hash-link" aria-label="Direct link to Try to access kubernetes objects" title="Direct link to Try to access kubernetes objects" translate="no">​</a></h3>
<p>When you try to access any kubernetes resources you'll find your service account has no access. We'll just check for namespace list access, but you'll see the same across any resource as we have not done anything yet with Kubernetes level RBAC.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get ns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Error Message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Error from server </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Forbidden</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: namespaces is forbidden: User </span><span class="token string" style="color:rgb(255, 121, 198)">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx"</span><span class="token plain"> cannot list resource </span><span class="token string" style="color:rgb(255, 121, 198)">"namespaces"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> API group </span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token plain"> at the cluster scope: User does not have access to the resource </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> Azure. Update role assignment to allow access.</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="enable-sample-app-namespace-access-with-azure-ad-rbac">Enable sample-app namespace access with Azure AD RBAC<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#enable-sample-app-namespace-access-with-azure-ad-rbac" class="hash-link" aria-label="Direct link to Enable sample-app namespace access with Azure AD RBAC" title="Direct link to Enable sample-app namespace access with Azure AD RBAC" translate="no">​</a></h3>
<p>We'll need to jump out of our service principal login back to our normal user account, so we can create some new role assignments.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Login to Azure</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az login</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># If needed, set your subscription</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az account </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-s</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">SUBSCRIPTION ID</span><span class="token operator">&gt;</span><br></span></code></pre></div></div>
<p>Lets assign read-only access to the 'sample-app' namespace alone for our service principal.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Azure Kubernetes Service RBAC Reader"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_RESOURCE_ID</span><span class="token plain">/namespaces/sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Log back in as the service principal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az login --service-principal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_SECRET</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--tenant</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TENANT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Try to access resources in the cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This command will be forbidden</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get ns</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Try a few other commands, and you'll see them fail.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now try to read resources from the permitted namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This command will succeed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get all </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># We can also view the pod logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">app</span><span class="token operator">=</span><span class="token plain">nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Secrets and roles have special treatment, so they are not visible. Try to look at secrets and roles</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># These will fail</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get secrets </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get roles</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># We only granted read-only, so lets try to create something</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This will fail</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl run nginx-fail </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--image</span><span class="token operator">=</span><span class="token plain">nginx </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<p>Now lets increase the scope beyond our namespace and give the service principal read access across the whole cluster. You'll have to log back in with your normal user account to grant the role.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Again, log back into your other account</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az login</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Delete the previous role assignment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment delete </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Azure Kubernetes Service RBAC Reader"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_RESOURCE_ID</span><span class="token plain">/namespaces/sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the new role assignment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Azure Kubernetes Service RBAC Reader"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_RESOURCE_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Log back in as your service principal account</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az login --service-principal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_SECRET</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--tenant</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TENANT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now run some commands to see if you can read the whole cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get all </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get pods </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Now try to delete something, like our sample-app namespace</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># This command will be forbidden</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl delete ns sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Again, as mentioned with the namespace scope, secrets and roles are special. Try to view secrets and roles</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># These will fail</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get secrets </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get roles</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="explore-the-out-of-the-box-roles">Explore the Out of the Box Roles<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#explore-the-out-of-the-box-roles" class="hash-link" aria-label="Direct link to Explore the Out of the Box Roles" title="Direct link to Explore the Out of the Box Roles" translate="no">​</a></h3>
<p>AKS provides 4 out of the box roles for Azure RBAC in Kubernetes. You can read more <a href="https://learn.microsoft.com/en-us/azure/aks/manage-azure-rbac#create-role-assignments-for-users-to-access-the-cluster" target="_blank" rel="noopener noreferrer" class="">here</a></p>
<p><img decoding="async" loading="lazy" alt="OOB Roles" src="https://azureglobalblackbelts.com/assets/images/oob-roles-95f2bb6ba7c40a0bb939397e236ae0be.jpg" width="866" height="392" class="img_ev3q"></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-a-custom-role-definition">Create a custom role definition<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#create-a-custom-role-definition" class="hash-link" aria-label="Direct link to Create a custom role definition" title="Direct link to Create a custom role definition" translate="no">​</a></h2>
<p>If we want to expand the role to include secrets reader access then we'll need a custom role.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Make sure you're logged in as your normal user account</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the role definition file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">&gt;</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> secrets-aad-role.json</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "Name": "AKS Sample App Secrets Reader",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "Description": "Lets you view all Secrets in the sample-app namespace.",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "Actions": [],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "NotActions": [],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "DataActions": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "Microsoft.ContainerService/managedClusters/secrets/read"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "NotDataActions": [],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "assignableScopes": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        "subscriptions/</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$SUBSCRIPTION_ID</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the role definition in Azure</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role definition create --role-definition @secrets-aad-role.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#####################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># NOTE!!! Role propegation may take a couple minutes, so if this fails</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># wait a minute and try again.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#####################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Assign the role</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"AKS Sample App Secrets Reader"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--assignee</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_RESOURCE_ID</span><span class="token plain">/namespaces/sample-app</span><br></span></code></pre></div></div>
<p>Now that the custom role has been created and applied, we can log back in as our service principal and test it's ability to view secrets.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Log in as the service principal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az login --service-principal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-u</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-p</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$APP_SECRET</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--tenant</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TENANT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Look at the secret created previously</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get secrets </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the value out of the secret...keeping mind that secrets are base64 encoded</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get secret sample-secret </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sample-app </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">jsonpath</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'{.data.message}'</span><span class="token operator">|</span><span class="token plain">base64 </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--decode</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/10/12/aks-user-min-roles#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>This walk-through demonstrated setting up an AKS cluster with Azure AD authenitication and Azure AD RBAC enabled, and then how to use Azure built in roles, as well as custom roles, to interact with your cluster.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using App Gateway for Containers with Egress Lockdown]]></title>
        <id>https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown</id>
        <link href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown"/>
        <updated>2023-09-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Demonstrat how to setup the new Azure App Gateway for Containers (AGC) managed ingress controllers with egress lockdown]]></summary>
        <content type="html"><![CDATA[<p>This walkthrough demonstates the setup of the new Azure App Gateway for Containers (hereafter AGC) managed ingress controller on a cluster configured with egress traffic forced to an Azure Firewall and with the cluster configured with outboundType Route Table.</p>
<p>The YAML files for this walk through are located <a href="https://github.com/swgriffith/azure-guides/tree/master/agc-egresslockdown" target="_blank" rel="noopener noreferrer" class="">here</a></p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup">Setup<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#setup" class="hash-link" aria-label="Direct link to Setup" title="Direct link to Setup" translate="no">​</a></h2>
<p>For this setup we'll need to create the following:</p>
<ul>
<li class="">Resource Group</li>
<li class="">Vnet with subnets for the Firewall, AGC and AKS Cluster</li>
<li class="">Azure Firewall</li>
<li class="">Firewall Rules needed for AKS to function</li>
<li class="">Route Table with Default Route (0.0.0.0/0) to the firewall</li>
<li class="">AKS Cluster</li>
<li class="">AGC</li>
<li class="">Test app deployed to the cluster</li>
<li class="">Gateway Instance</li>
<li class="">HTTP Route</li>
</ul>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="resource-group-and-vnet">Resource Group and Vnet<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#resource-group-and-vnet" class="hash-link" aria-label="Direct link to Resource Group and Vnet" title="Direct link to Resource Group and Vnet" translate="no">​</a></h3>
<p>First create the Resource Group and virtual network we'll use for the deployment. We'll also create the subnet that the Azure Firewall will use, since we'll be deploying that next.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Resource Group Creation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">EphAGCEgressLock2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the resource group id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az group show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Set an environment variable for the VNet name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_NAME</span><span class="token operator">=</span><span class="token plain">reddog-vnet</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Vnet along with the initial subet for AKS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefix </span><span class="token number">10.140</span><span class="token plain">.0.0/16 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--subnet-name aks </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--subnet-prefix </span><span class="token number">10.140</span><span class="token plain">.0.0/24</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get a subnet resource ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VNET_SUBNET_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet subnet show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG --vnet-name $VNET_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> aks </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Adding a subnet for the Azure Firewall</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet subnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--vnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> AzureFirewallSubnet </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefix </span><span class="token number">10.140</span><span class="token plain">.1.0/24</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="firewall">Firewall<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#firewall" class="hash-link" aria-label="Direct link to Firewall" title="Direct link to Firewall" translate="no">​</a></h3>
<p>Now to create the Azure Firewall.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create Azure Firewall Public IP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network public-ip create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> azfirewall-ip </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Standard"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create Azure Firewall</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az extension </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> azure-firewall</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FIREWALLNAME</span><span class="token operator">=</span><span class="token plain">reddog-egress</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> --enable-dns-proxy </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Configure Firewall IP Config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall ip-config create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks-firewallconfig --public-ip-address azfirewall-ip --vnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="firewall-rules">Firewall Rules<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#firewall-rules" class="hash-link" aria-label="Direct link to Firewall Rules" title="Direct link to Firewall Rules" translate="no">​</a></h3>
<p>With the firewall created, we'll add the rules needed to ensure AKS can operate. You can add additional rules here as needed.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall network-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--collection-name </span><span class="token string" style="color:rgb(255, 121, 198)">'aksfwnr'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'aksapiudp'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--protocols</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'UDP'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--source-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">'*'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--destination-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">"AzureCloud.</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--destination-ports </span><span class="token number">1194</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--action</span><span class="token plain"> allow </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--priority</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall network-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--collection-name </span><span class="token string" style="color:rgb(255, 121, 198)">'aksfwnr'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'aksapitcp'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--protocols</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'TCP'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--source-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">'*'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--destination-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">"AzureCloud.</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--destination-ports </span><span class="token number">9000</span><span class="token plain"> </span><span class="token number">443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall network-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--collection-name </span><span class="token string" style="color:rgb(255, 121, 198)">'aksfwnr'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'time'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--protocols</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'UDP'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--source-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">'*'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--destination-fqdns </span><span class="token string" style="color:rgb(255, 121, 198)">'ntp.ubuntu.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--destination-ports </span><span class="token number">123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Add FW Application Rules</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall application-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--collection-name </span><span class="token string" style="color:rgb(255, 121, 198)">'aksfwar'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'fqdn'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--source-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">'*'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--protocols</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'http=80'</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https=443'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--fqdn-tags </span><span class="token string" style="color:rgb(255, 121, 198)">"AzureKubernetesService"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--action</span><span class="token plain"> allow </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--priority</span><span class="token plain"> </span><span class="token number">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">TARGET_FQDNS</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'mcr.microsoft.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'*.data.mcr.microsoft.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'management.azure.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'login.microsoftonline.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'packages.microsoft.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'acs-mirror.azureedge.net'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network firewall application-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FIREWALLNAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--collection-name </span><span class="token string" style="color:rgb(255, 121, 198)">'aksfwar2'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'fqdn'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--source-addresses </span><span class="token string" style="color:rgb(255, 121, 198)">'*'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--protocols</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'http=80'</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https=443'</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--target-fqdns </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$TARGET_FQDNS</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">@</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--action</span><span class="token plain"> allow </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--priority</span><span class="token plain"> </span><span class="token number">101</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="route-table">Route Table<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#route-table" class="hash-link" aria-label="Direct link to Route Table" title="Direct link to Route Table" translate="no">​</a></h3>
<p>With the firewall created, we'll set up the route table to ensure that egress traffic is sent to the firewall and then we'll attach this route table to the AKS cluster subnet.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># First get the public and private IP of the firewall for the routing rules</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FWPUBLIC_IP</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network public-ip show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> azfirewall-ip </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"ipAddress"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FWPRIVATE_IP</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network firewall show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $FIREWALLNAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"ipConfigurations[0].privateIPAddress"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create Route Table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network route-table create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aksdefaultroutes</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create Route</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network route-table route create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--route-table-name aksdefaultroutes </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> firewall-route </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefix </span><span class="token number">0.0</span><span class="token plain">.0.0/0 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--next-hop-type VirtualAppliance </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--next-hop-ip-address </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FWPRIVATE_IP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network route-table route create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--route-table-name aksdefaultroutes </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> internet-route </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefix </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FWPUBLIC_IP</span><span class="token plain">/32 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--next-hop-type Internet</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Associate Route Table to AKS Subnet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet subnet update </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--vnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> aks </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--route-table aksdefaultroutes</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h3>
<p>Next we'll create the AKS Cluster. We'll set this up with a single node, for testing purposes and will enable outboundType for userDefinedRouting. We'll also enable the OIDC Issuer and workload identity, as they're used by AGC later.</p>
<blockquote>
<p><strong>NOTE:</strong> At this time, AGC only supports Azure CNI in standard mode, not in 'Overlay' mode. If you try another option here it will not work.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># NOTE: Make sure you give your cluster a unique name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">acglab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Cluster Creation Command</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--nodepool-name systempool </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-vm-size Standard_D2_v4 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-count </span><span class="token number">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--network-plugin azure </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--network-policy calico </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--vnet-subnet-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_SUBNET_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--outbound-type userDefinedRouting </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-managed-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grab the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup-app-gateway-for-containers">Setup App Gateway for Containers<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#setup-app-gateway-for-containers" class="hash-link" aria-label="Direct link to Setup App Gateway for Containers" title="Direct link to Setup App Gateway for Containers" translate="no">​</a></h3>
<p>Now that our cluster is working we can add a new subnet for the AGC and run through all the steps for setting up the application controler, based on the setup guide <a href="https://learn.microsoft.com/en-us/azure/application-gateway/for-containers/quickstart-deploy-application-gateway-for-containers-alb-controller?tabs=install-helm-windows" target="_blank" rel="noopener noreferrer" class="">here</a>. That involved getting the subnet ID and Managed Cluster ID, creating a managed Identity, federating that managed identity with a Kubernetes Service Account, granting the identity the rights documented in the product setup and then finally installing the Application Load Balancer controller via Helm.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the AGC subnet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az network vnet subnet create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--vnet-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$VNET_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> subnet-alb </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--address-prefixes </span><span class="token number">10.140</span><span class="token plain">.2.0/24 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--delegations</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Microsoft.ServiceNetworking/trafficControllers'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the AGC Subnet ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ALB_SUBNET_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az network vnet subnet show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> subnet-alb --resource-group $RG --vnet-name $VNET_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'[id]'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--output</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the Managed Cluster Resource Group and ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MC_RG</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">"nodeResourceGroup"</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MC_RG_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az group show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $MC_RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a new managed identity and get its principal ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">IDENTITY_RESOURCE_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'azure-alb-identity'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$IDENTITY_RESOURCE_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">PRINCIPAL_ID</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $IDENTITY_RESOURCE_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> principalId </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Assign the managed identity reader rights on the managed cluster resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create --assignee-object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$PRINCIPAL_ID</span><span class="token plain"> --assignee-principal-type ServicePrincipal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MC_RG_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"acdd72a7-3385-48ef-bd42-f606fba81ae7"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># Reader role</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer Name and federate a service account, which will be created later, with the managed identity we created above</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable string variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable string variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"azure-alb-identity"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$IDENTITY_RESOURCE_NAME</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$AKS_OIDC_ISSUER</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"system:serviceaccount:azure-alb-system:alb-controller-sa"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Install the Application Load Balancer for AGC via Helm</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">helm </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> alb-controller oci://mcr.microsoft.com/application-lb/charts/alb-controller </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--version</span><span class="token plain"> </span><span class="token number">0.4</span><span class="token plain">.023971 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--set</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">albController.podIdentity.clientID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> azure-alb-identity </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> clientId </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Verify that the pods start and check that the gateway setup completed successfully</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">watch</span><span class="token plain"> kubectl get pods </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> azure-alb-system</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get gatewayclass azure-alb-external </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> yaml</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="deploy-the-application-loadbalancer-instance">Deploy the Application LoadBalancer Instance<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#deploy-the-application-loadbalancer-instance" class="hash-link" aria-label="Direct link to Deploy the Application LoadBalancer Instance" title="Direct link to Deploy the Application LoadBalancer Instance" translate="no">​</a></h3>
<p>With the Application Load Balancer Controller running, we now want to create an instance of the ALB in Kubernetes. We'll need to give the managed identity some additional rights.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Delegate AppGw for Containers Configuration Manager role to AKS Managed Cluster RG</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create --assignee-object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$PRINCIPAL_ID</span><span class="token plain"> --assignee-principal-type ServicePrincipal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MC_RG_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"fbc52c3f-28ad-4303-a892-8a056630b8f1"</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Delegate Network Contributor permission for join to association subnet</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az role assignment create --assignee-object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$PRINCIPAL_ID</span><span class="token plain"> --assignee-principal-type ServicePrincipal </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--scope</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ALB_SUBNET_ID</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--role</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"4d97b98b-1d4f-4787-a291-c67834d212e7"</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the instance of the Application Load Balancer in the cluster.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> - </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: alb.networking.azure.io/v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ApplicationLoadBalancer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: alb-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  associations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  - </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$ALB_SUBNET_ID</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Monitor the state of the ALB Setup until it's ready</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl get applicationloadbalancer alb-test </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> yaml </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-w</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="deploy-the-test-app">Deploy the test app<a href="https://azureglobalblackbelts.com/2023/09/21/agc-egress-lockdown#deploy-the-test-app" class="hash-link" aria-label="Direct link to Deploy the test app" title="Direct link to Deploy the test app" translate="no">​</a></h3>
<p>Now that we have the environment all set up we can deploy a simple test app, gateway and http-route. For this, we'll test TLS offload, so we'll upload a self signed certificate as a secret and used that for the application ingress over https.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Deploy the test application</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> testapp.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the TLS Secret and Gateway config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> gateway.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the http route</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl apply </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> http-route.yaml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the FQDN for the gateway</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">FQDN</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">kubectl get gateway gateway-01 </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">jsonpath</span><span class="token variable operator" style="color:rgb(189, 147, 249);font-style:italic">=</span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'{.status.addresses[0].value}'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Run a test curl to ensure you get a response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--insecure</span><span class="token plain"> https://</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$FQDN</span><span class="token plain">/</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Kubelogin with AKS via Terraform]]></title>
        <id>https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform</id>
        <link href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform"/>
        <updated>2023-09-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to use the Terraform AKS provider to create an AKS cluster for Azure Active Directory authentication and RBAC and disable local accounts]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="special-thanks">Special Thanks!<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#special-thanks" class="hash-link" aria-label="Direct link to Special Thanks!" title="Direct link to Special Thanks!" translate="no">​</a></h3>
<p>Thanks to <a href="https://www.danielstechblog.io/about-me/" target="_blank" rel="noopener noreferrer" class="">Daniel Neumann</a> for the original article we used to get this started, which you can find <a href="https://www.danielstechblog.io/azure-kubernetes-service-using-kubernetes-credential-plugin-kubelogin-with-terraform/" target="_blank" rel="noopener noreferrer" class="">here</a>.</p>
<p>Thanks to <a href="https://github.com/raykao" target="_blank" rel="noopener noreferrer" class="">Ray Kao</a> for working out a bunch of bugs we hit and dropping some sweet PRs.</p>
<p>All of the Terraform files can be found <a href="https://github.com/swgriffith/azure-guides/tree/master/aks-tf-examples/kubelogin" target="_blank" rel="noopener noreferrer" class="">here</a>.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="overview">Overview<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview" translate="no">​</a></h2>
<p>In this walkthrough we'll use the Terraform AKS provider to create an AKS cluster that has Azure AD enabled, Azure AD RBAC enabled and has disabled local accounts. That means that this cluster will require Azure Active Directory authentication and RBAC and will explicitly not allow local accounts.</p>
<p>We'll then use the Terraform Kubernetes provider to create a deployment in the cluster using a valid service principal.</p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="real-talk">Real Talk<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#real-talk" class="hash-link" aria-label="Direct link to Real Talk" title="Direct link to Real Talk" translate="no">​</a></h3>
<p>After testing this out, in my opinion...as well as some of my peers, creating the cluster and deploying workloads in the same Terraform script adds some unecessary complexity and brittleness. You'll likely have a better exerience having a Terraform script for the infrastructure provisioning and a separate approach (ex. Flux, Argo, Other CD Pipeline) to deploy your workloads to the cluster.</p>
<p>That said...lets give this a go.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="requirements">Requirements<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#requirements" class="hash-link" aria-label="Direct link to Requirements" title="Direct link to Requirements" translate="no">​</a></h2>
<p>Here are the items we'll assume you've already set up before running this deployment.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="1-an-azure-ad-group-for-your-cluster-administrators">1. An Azure AD Group for your cluster Administrators<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#1-an-azure-ad-group-for-your-cluster-administrators" class="hash-link" aria-label="Direct link to 1. An Azure AD Group for your cluster Administrators" title="Direct link to 1. An Azure AD Group for your cluster Administrators" translate="no">​</a></h4>
<p>When you enable Azure AD on AKS and disable local accounts, you are required to provide at least one group ID for the 'Administrators' of the cluster.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="2-a-service-principal-that-is-a-member-of-the-administrators-group">2. A service principal that is a member of the Administrators group<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#2-a-service-principal-that-is-a-member-of-the-administrators-group" class="hash-link" aria-label="Direct link to 2. A service principal that is a member of the Administrators group" title="Direct link to 2. A service principal that is a member of the Administrators group" translate="no">​</a></h4>
<p>We'll be running a deployment against the cluster, and to do that we'll need a valid user. For this example we're using a service principal. You could adjust this to use a managed identity as well if you prefer, but you'll need to modify the template. You will need both the 'client id' and a 'client secret' for this service principal, creation of which is outside the scope of this guide...for now.</p>
<h4 class="anchor anchorTargetStickyNavbar_Vzrq" id="3-kubelogin-must-be-installed-on-the-machine-running-the-terraform-deployment">3. Kubelogin must be installed on the machine running the terraform deployment<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#3-kubelogin-must-be-installed-on-the-machine-running-the-terraform-deployment" class="hash-link" aria-label="Direct link to 3. Kubelogin must be installed on the machine running the terraform deployment" title="Direct link to 3. Kubelogin must be installed on the machine running the terraform deployment" translate="no">​</a></h4>
<p>Accessing Azure Active Directory enabled clusters with a non-interactive login flow (ex. via automated deployment pipeline) requires that you use the <a href="https://azure.github.io/kubelogin/index.html" target="_blank" rel="noopener noreferrer" class="">kubelogin</a> project. Kubelogin will handle the OAuth flows needed to get the cluster access token.</p>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="running-the-deployment">Running the deployment<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#running-the-deployment" class="hash-link" aria-label="Direct link to Running the deployment" title="Direct link to Running the deployment" translate="no">​</a></h2>
<p>First you need to create a new 'terraform.tfvars' file at the same level as the main.tf file. That file should look like the following, but with your own values applied for the AAD tenant ID, Admins AAD Group ID, client id and client secret.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">admin_group_object_ids </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">tenant_id </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">client_id </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">client_secret </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"</span><br></span></code></pre></div></div>
<p>Next we'll run the deployment commands.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Initialize Terraform</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform init</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Run Terraform Plan</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform plan</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Deplouy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform apply --auto-approve</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="how-this-works">How this works<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#how-this-works" class="hash-link" aria-label="Direct link to How this works" title="Direct link to How this works" translate="no">​</a></h2>
<p>While the deployment is running, lets cover how this works. As noted above our cluster is locked down to only Azure AD users and no local kubernetes accounts, like the default admin account. Additionally, since the cluster is AAD enabled for authentication, you typically would get a device code flow prompt when trying to run deployments via kubectl. Since the deployment will be done by the Terraform Kubernetes provider, we'll need to use kubelogin, which we can do via the provider's 'exec' option.</p>
<p>Here are the steps:</p>
<ol>
<li class="">Resource Group and Cluster are created</li>
<li class="">The Kubernetes provider runs 'kubelogin get-token' passing in some of the details from the cluster creation (ex. API Server FQDN) as well as the service principal credentials. It also needs the application ID of the AKS cluster login server, which we get via the 'azuread_service_principal' block.</li>
<li class="">The 'kubernetes_deployment' block runs using the kubernetes provider, which now has it's access token, to run the nginx deployment</li>
</ol>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/09/21/kubelogin-terraform#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h2>
<p>Once the above deployment completes, you should be able to connect to your cluster (Azure Portal or kubectl) and see the nginx deployment is running.</p>
<p>To clean up your deployment, there is a bit of a state management issue with this deployment, since both the cluster and deployment were in one run. I'll probably split that out later. For now, we'll just delete the nginx deployment from state before deleting the cluster.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Remove the nginx deployment from state</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform state </span><span class="token function" style="color:rgb(80, 250, 123)">rm</span><span class="token plain"> kubernetes_deployment.nginx</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Destroy the deployment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">terraform destroy --auto-approve</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Workload Identity]]></title>
        <id>https://azureglobalblackbelts.com/2023/09/21/workload-identity-example</id>
        <link href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example"/>
        <updated>2023-09-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to use Azure Workload Identity with the AKS Workload Identity add-on along with MSAL]]></summary>
        <content type="html"><![CDATA[<p>The following walkthrough shows how you can using <a href="https://azure.github.io/azure-workload-identity/docs/" target="_blank" rel="noopener noreferrer" class="">Azure Workload Identity</a> with the <a href="https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview" target="_blank" rel="noopener noreferrer" class="">AKS Workload Identity</a> add-on along with <a href="https://learn.microsoft.com/en-us/azure/active-directory/develop/reference-v2-libraries" target="_blank" rel="noopener noreferrer" class="">MSAL</a></p>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="register-for-the-preview">Register for the preview<a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example#register-for-the-preview" class="hash-link" aria-label="Direct link to Register for the preview" title="Direct link to Register for the preview" translate="no">​</a></h3>
<p>The managed add-on for Azure Workload Identity is still in preview, so we must first register for the preview.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Add or update the Azure CLI aks preview extention</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az extension </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> aks-preview</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az extension update </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> aks-preview</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Register for the preview feature</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az feature register </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Microsoft.ContainerService"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"EnableWorkloadIdentityPreview"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check registration status</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az feature list </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> table </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[?contains(name, 'Microsoft.ContainerService/EnableWorkloadIdentityPreview')].{Name:name,State:properties.state}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Refresh the provider</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az provider register </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--namespace</span><span class="token plain"> Microsoft.ContainerService</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h3>
<p>Now lets create the AKS cluster with the OIDC Issure and Workload Identity add-on enabled.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">WorkloadIdentityRG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">wilab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">UNIQUE_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">KEY_VAULT_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the cluster with the OIDC Issuer and Workload Identity enabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-count </span><span class="token number">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--generate-ssh-keys</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-up-the-identity">Set up the identity<a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example#set-up-the-identity" class="hash-link" aria-label="Direct link to Set up the identity" title="Direct link to Set up the identity" translate="no">​</a></h3>
<p>In order to federate a managed identity with a Kubernetes Service Account we need to get the AKS OIDC Issure URL, create the Managed Identity and Service Account and then create the federation.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> wi-demo-identity --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get identity client ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> wi-demo-identity </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service account to federate with the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ServiceAccount</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/client-id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: wi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> wi-demo-federated-id </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name wi-demo-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:default:wi-demo-sa</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-key-vault-and-secret">Create the Key Vault and Secret<a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example#create-the-key-vault-and-secret" class="hash-link" aria-label="Direct link to Create the Key Vault and Secret" title="Direct link to Create the Key Vault and Secret" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a key vault</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"> --enable-rbac-authorization </span><span class="token boolean">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a secret</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault secret </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">set</span><span class="token plain"> --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Secret"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--value</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Hello"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Grant access to the secret for the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault set-policy </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> --secret-permissions get </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--spn</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the version ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az keyvault secret show --vault-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$KEY_VAULT_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Secret"</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> tsv </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">https://wi-demo-keyvault.vault.azure.net/secrets/Secret/ded8e5e3b3e040e9bfa5c47d0e28848a</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># The version ID is the last part of the resource id above</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># We'll use this later</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">VERSION_ID</span><span class="token operator">=</span><span class="token plain">ded8e5e3b3e040e9bfa5c47d0e28848a</span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-sample-app">Create the sample app<a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example#create-the-sample-app" class="hash-link" aria-label="Direct link to Create the sample app" title="Direct link to Create the sample app" translate="no">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create and test a new console app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet new console </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> keyvault-console-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> keyvault-console-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet run</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Add the Key Vault and Azure Identity Packages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> package Azure.Security.KeyVault.Secrets</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> package Azure.Identity</span><br></span></code></pre></div></div>
<p>Edit the app as follows:</p>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">using System;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using System.IO;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Azure.Core;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Azure.Identity;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Azure.Security.KeyVault.Secrets;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">class Program</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        static void Main(string[] args)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            //Get env variables</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            string? secretName = Environment.GetEnvironmentVariable("SECRET_NAME");;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            string? keyVaultName = Environment.GetEnvironmentVariable("KEY_VAULT_NAME");;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            string? versionID = Environment.GetEnvironmentVariable("VERSION_ID");;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            //Create Key Vault Client</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            var kvUri = String.Format("https://{0}.vault.azure.net", keyVaultName);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            SecretClientOptions options = new SecretClientOptions()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                Retry =</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    Delay= TimeSpan.FromSeconds(2),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    MaxDelay = TimeSpan.FromSeconds(16),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    MaxRetries = 5,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    Mode = RetryMode.Exponential</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                 }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            };</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            var client = new SecretClient(new Uri(kvUri), new DefaultAzureCredential(),options);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            // Get the secret value in a loop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            while(true){</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            Console.WriteLine("Retrieving your secret from " + keyVaultName + ".");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            KeyVaultSecret secret = client.GetSecret(secretName, versionID);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            Console.WriteLine("Your secret is '" + secret.Value + "'.");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            System.Threading.Thread.Sleep(5000);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre></div></div>
<p>Create a new Dockerfile with the following:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build-env</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WORKDIR /App</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Copy everything</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">COPY </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"> ./</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Restore as distinct layers</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN dotnet restore</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build and publish a release</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN dotnet publish </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-c</span><span class="token plain"> Release </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> out</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build runtime image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM mcr.microsoft.com/dotnet/aspnet:6.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WORKDIR /App</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">COPY </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--from</span><span class="token operator">=</span><span class="token plain">build-env /App/out </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ENTRYPOINT </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"dotnet"</span><span class="token plain">, </span><span class="token string" style="color:rgb(255, 121, 198)">"keyvault-console-app.dll"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<p>Build the image. I'll create an Azure Container Registry and build there, and then link that ACR to my AKS cluster.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the ACR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Standard</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr build </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> wi-kv-test </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Link the ACR to the AKS cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks update </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> --attach-acr </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><br></span></code></pre></div></div>
<p>Now deploy a pod that gets the value using the service account identity.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Pod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: wi-kv-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  serviceAccountName: wi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - image: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${ACR_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">.azurecr.io/wi-kv-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      name: wi-kv-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      env:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: KEY_VAULT_NAME</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${KEY_VAULT_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: SECRET_NAME</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: Secret</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: VERSION_ID</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${VERSION_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">       </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  nodeSelector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    kubernetes.io/os: linux</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check the pod logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> wi-kv-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Sample Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Retrieving your secret from wi-demo-keyvault.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Your secret is </span><span class="token string" style="color:rgb(255, 121, 198)">'Hello'</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="conclusion">Conclusion<a href="https://azureglobalblackbelts.com/2023/09/21/workload-identity-example#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion" translate="no">​</a></h3>
<p>Congrats! You should now have a working pod that uses MSAL along with a Kubernetes Service Account federated to an Azure Managed Identity to access and Azure Key Vault Secret.</p>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessing Azure SQL DB via Workload Identity and Managed Identity]]></title>
        <id>https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example</id>
        <link href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example"/>
        <updated>2021-09-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[How to create an AKS cluster enabled with Workload Identity to access Azure SQL DB with Azure Managed Identity from a Kubernetes pod]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="setup">Setup<a href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example#setup" class="hash-link" aria-label="Direct link to Setup" title="Direct link to Setup" translate="no">​</a></h2>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="cluster-creation">Cluster Creation<a href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example#cluster-creation" class="hash-link" aria-label="Direct link to Cluster Creation" title="Direct link to Cluster Creation" translate="no">​</a></h3>
<p>Lets create the AKS cluster with the OIDC Issure and Workload Identity add-on enabled.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">RG</span><span class="token operator">=</span><span class="token plain">WorkloadIdentitySQLRG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOC</span><span class="token operator">=</span><span class="token plain">eastus</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CLUSTER_NAME</span><span class="token operator">=</span><span class="token plain">wisqllab</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">UNIQUE_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">ACR_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az group create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-l</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the cluster with the OIDC Issuer and Workload Identity enabled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--node-count </span><span class="token number">1</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-oidc-issuer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--enable-workload-identity </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--generate-ssh-keys</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get the cluster credentials</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks get-credentials </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="set-up-the-identity">Set up the identity<a href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example#set-up-the-identity" class="hash-link" aria-label="Direct link to Set up the identity" title="Direct link to Set up the identity" translate="no">​</a></h3>
<p>In order to federate a managed identity with a Kubernetes Service Account we need to get the AKS OIDC Issure URL, create the Managed Identity and Service Account and then setup the federation.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the OIDC Issuer URL</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">AKS_OIDC_ISSUER</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">az aks show </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $CLUSTER_NAME </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable string" style="color:rgb(255, 121, 198);font-style:italic">"oidcIssuerProfile.issuerUrl"</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token string variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-otsv</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MANAGED_IDENTITY_NAME</span><span class="token operator">=</span><span class="token plain">wi-demo-identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MANAGED_IDENTITY_NAME</span><span class="token plain"> --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get identity client ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_CLIENT_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $MANAGED_IDENTITY_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'clientId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">USER_ASSIGNED_OBJ_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az identity show --resource-group $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $MANAGED_IDENTITY_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable string" style="color:rgb(255, 121, 198);font-style:italic">'principalId'</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create a service account to federate with the managed identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: ServiceAccount</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  annotations:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/client-id: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_CLIENT_ID}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: wi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Federate the identity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az identity federated-credential create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> wi-demo-federated-id </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--identity-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MANAGED_IDENTITY_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--issuer</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">${AKS_OIDC_ISSUER}</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--subject</span><span class="token plain"> system:serviceaccount:default:wi-demo-sa</span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-azure-sql-db-server-and-database">Create the Azure SQL DB Server and Database<a href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example#create-the-azure-sql-db-server-and-database" class="hash-link" aria-label="Direct link to Create the Azure SQL DB Server and Database" title="Direct link to Create the Azure SQL DB Server and Database" translate="no">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create a single database and configure a firewall rule</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">UNIQUE_ID</span><span class="token operator">=</span><span class="token environment constant" style="color:rgb(189, 147, 249)">$RANDOM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SERVER_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"widemo-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DATABASE_NAME</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"widemo</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">LOGIN</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"azureuser"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">PASSWD</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Pa</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$$</span><span class="token string" style="color:rgb(255, 121, 198)">w0rD-</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">$UNIQUE_ID</span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Specify appropriate IP address values for your environment</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># to limit access to the SQL Database server</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">MY_IP</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">curl</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> icanhazip.com</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the SQL Server Instance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az sql server create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--location</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOC</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--admin-user </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$LOGIN</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--admin-password </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$PASSWD</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Allow your ip through the server firewall</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az sql server firewall-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--server</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> AllowYourIp </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--start-ip-address </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MY_IP</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--end-ip-address </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$MY_IP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Allow azure services through the server firewall</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az sql server firewall-rule create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--server</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> AllowAzureServices </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--start-ip-address </span><span class="token number">0.0</span><span class="token plain">.0.0 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--end-ip-address </span><span class="token number">0.0</span><span class="token plain">.0.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Create the Database </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az sql db create --resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--server</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--name</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$DATABASE_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--sample-name AdventureWorksLT </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--edition</span><span class="token plain"> GeneralPurpose </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--family</span><span class="token plain"> Gen5 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--capacity</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--zone-redundant </span><span class="token boolean">false</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Get user info for adding admin user</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SIGNED_IN_USER_OBJ_ID</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az ad signed-in-user show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">id</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">SIGNED_IN_USER_DSP_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az ad signed-in-user show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> userPrincipalName</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Add yourself as the Admin User</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az sql server ad-admin create </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--resource-group </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--server-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SERVER_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--display-name </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SIGNED_IN_USER_DSP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">--object-id </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$SIGNED_IN_USER_OBJ_ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorTargetStickyNavbar_Vzrq" id="add-a-user-to-the-database">Add a user to the database<a href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example#add-a-user-to-the-database" class="hash-link" aria-label="Direct link to Add a user to the database" title="Direct link to Add a user to the database" translate="no">​</a></h3>
<p>For this step we'll need to use the <a href="https://learn.microsoft.com/en-us/sql/tools/sqlcmd/sqlcmd-utility?view=sql-server-ver16" target="_blank" rel="noopener noreferrer" class="">sqlcmd command line tool</a>. You can install sqlcmd yourself, or you can use the <a href="https://shell.azure.com/" target="_blank" rel="noopener noreferrer" class="">Azure Cloud Shell</a>, which has it pre-installed for you.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Get the server FQDN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DB_SERVER_FQDN</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">az sql server show </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $RG </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> $SERVER_NAME </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> tsv </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--query</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> fullyQualifiedDomainName</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Generate the user creation command</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Copy the output of the following to run against your SQL Server after logged in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"CREATE USER [</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MANAGED_IDENTITY_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">] FROM EXTERNAL PROVIDER WITH OBJECT_ID='</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${USER_ASSIGNED_OBJ_ID}</span><span class="token string" style="color:rgb(255, 121, 198)">'"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GO"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"ALTER ROLE db_datareader ADD MEMBER [</span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${MANAGED_IDENTITY_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GO"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Login to the SQL DB via interactive login</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sqlcmd </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-S</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$DB_SERVER_FQDN</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$DATABASE_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-G</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Paste the command generated above to create the </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># User and grant the user reader access</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># then type exit to leave the sqlcmd terminal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h2 class="anchor anchorTargetStickyNavbar_Vzrq" id="create-the-sample-app">Create the sample app<a href="https://azureglobalblackbelts.com/2021/09/21/workload-identity-azuresql-example#create-the-sample-app" class="hash-link" aria-label="Direct link to Create the sample app" title="Direct link to Create the sample app" translate="no">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create and test a new console app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet new console </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> sql-console-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> sql-console-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet run</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Add the Key Vault and Azure Identity Packages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dotnet </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token plain"> package Microsoft.Data.SqlClient</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#dotnet add package Azure.Identity</span><br></span></code></pre></div></div>
<p>Edit the app Program.cs as follows:</p>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">using Microsoft.Data.SqlClient;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">namespace sqltest</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    class Program</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        static void Main(string[] args)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            string? dbServerFQDN = Environment.GetEnvironmentVariable("DB_SERVER_FQDN");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            string? dbName = Environment.GetEnvironmentVariable("DATABASE_NAME");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            while(true){</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                try </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                { </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    // For system-assigned managed identity</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    // Use your own values for Server and Database.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    string ConnectionString = String.Format("Server={0}; Authentication=Active Directory Default; Encrypt=True; Database={1}",dbServerFQDN,dbName);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    using (SqlConnection connection = new SqlConnection(ConnectionString)) {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        Console.WriteLine("\nQuery data example:");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        Console.WriteLine("=========================================\n");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        connection.Open();       </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        String sql = "SELECT TOP 5 FirstName, LastName FROM [SalesLT].[Customer]";</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        using (SqlCommand command = new SqlCommand(sql, connection))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                            using (SqlDataReader reader = command.ExecuteReader())</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                            {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                while (reader.Read())</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                    Console.WriteLine("{0} {1}", reader.GetString(0), reader.GetString(1));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        }                    </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                catch (SqlException e)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    Console.WriteLine(e.ToString());</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            System.Threading.Thread.Sleep(5000);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>Test the changes</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Build and run the console app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DB_SERVER_FQDN</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$DB_SERVER_FQDN</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DATABASE_NAME</span><span class="token operator">=</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$DATABASE_NAME</span><span class="token plain"> dotnet run</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##################################################################</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># You should see the console app return sample data at this point</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">##################################################################</span><br></span></code></pre></div></div>
<p>Create a new Dockerfile with the following.</p>
<blockquote>
<p><strong>NOTE:</strong> Don't forget to check the dotnet version you used to generate your code by running 'dotnet --version' and make sure the base container image matches. For example, my dotnet version was 7.0.102 when I wrote this, so I used sdk 7.0.</p>
</blockquote>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build-env</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WORKDIR /App</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Copy everything</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">COPY </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"> ./</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Restore as distinct layers</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN dotnet restore</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build and publish a release</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">RUN dotnet publish </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-c</span><span class="token plain"> Release </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-o</span><span class="token plain"> out</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build runtime image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">FROM mcr.microsoft.com/dotnet/aspnet:7.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WORKDIR /App</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">COPY </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--from</span><span class="token operator">=</span><span class="token plain">build-env /App/out </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ENTRYPOINT </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"dotnet"</span><span class="token plain">, </span><span class="token string" style="color:rgb(255, 121, 198)">"sql-console-app.dll"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre></div></div>
<p>Build the image. I'll create an Azure Container Registry and build there, and then link that ACR to my AKS cluster.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Create the ACR</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr create </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--sku</span><span class="token plain"> Standard</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Link the ACR to the AKS cluster</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az aks update </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-g</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$RG</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-n</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$CLUSTER_NAME</span><span class="token plain"> --attach-acr </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> --no-wait</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Build the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">az acr build </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-t</span><span class="token plain"> wi-sql-test </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$ACR_NAME</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><br></span></code></pre></div></div>
<p>Now deploy a pod that gets the value using the service account identity.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token operator">&lt;&lt;</span><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> </span><span class="token string bash punctuation operator" style="color:rgb(248, 248, 242)">|</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> kubectl apply </span><span class="token string bash punctuation parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token string bash punctuation" style="color:rgb(248, 248, 242)"> -</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">apiVersion: v1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">kind: Pod</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">metadata:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  name: wi-sql-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  namespace: default</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  labels:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    azure.workload.identity/use: "true"  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">spec:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  serviceAccountName: wi-demo-sa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  containers:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    - image: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${ACR_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)">.azurecr.io/wi-sql-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      name: wi-sql-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      env:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: DB_SERVER_FQDN</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${DB_SERVER_FQDN}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      - name: DATABASE_NAME</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        value: </span><span class="token string variable" style="color:rgb(189, 147, 249);font-style:italic">${DATABASE_NAME}</span><span class="token string" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">      imagePullPolicy: Always   </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">  nodeSelector:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    kubernetes.io/os: linux</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Check the pod logs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">kubectl logs </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-f</span><span class="token plain"> wi-sql-test</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Steve Griffith</name>
            <uri>https://github.com/swgriffith</uri>
        </author>
    </entry>
</feed>