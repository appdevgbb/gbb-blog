"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[8332],{386:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/create_policy1-512a5c3c163990ef36f1dd8fb0fc04d6.jpg"},962:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/create-policy3-078b439f59f4ffa3d3ad72ccca804843.jpg"},2062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>r});var s=n(6627),a=n(4848),i=n(8453);const o={authors:["steve_griffith"],date:"2023-10-26",description:"Creating an AKS custom Gatekeeper policy to restrict ingress host names",tags:[],title:"AKS Custom Policy"},l="Gatekeeper - Custom Ingress Policy",c={authorsImageUrls:[void 0]},r=[{value:"Introduction",id:"introduction",level:2},{value:"Cluster Setup",id:"cluster-setup",level:2},{value:"Constraint Template Creation",id:"constraint-template-creation",level:2},{value:"Azure Policy Creation",id:"azure-policy-creation",level:2},{value:"Test the policy",id:"test-the-policy",level:2},{value:"Test the policy",id:"test-the-policy-1",level:2},{value:"Conclusion",id:"conclusion",level:2}];function g(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(t.p,{children:["In this walkthrough we'll use the ",(0,a.jsx)(t.a,{href:"https://open-policy-agent.github.io/gatekeeper/website/",children:"Gatekeeper"})," project and ",(0,a.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/azure/governance/policy/concepts/policy-for-kubernetes",children:"AKS Policy"})," to create a policy that resticts the host name on a Kubernetes Ingress. The host names used for validation will be provided via parameters on the Azure Policy assignment."]}),"\n",(0,a.jsxs)(t.p,{children:["The YAML manifest files for this walk through are located ",(0,a.jsx)(t.a,{href:"https://github.com/swgriffith/azure-guides/tree/master/aks-custom-policy",children:"here"})]}),"\n",(0,a.jsx)(t.h2,{id:"cluster-setup",children:"Cluster Setup"}),"\n",(0,a.jsx)(t.p,{children:"First we'll create an AKS cluster with Azure Policy for AKS enabled."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"# Define variables\nRG=PolicyTestRG\nLOC=eastus\nCLUSTER_NAME=policytest\n\n# Create the resource group\naz group create -n $RG -l $LOC\n\n# Create the AKS cluster with Azure Policy enabled\naz aks create -g $RG -n $CLUSTER_NAME --enable-addons azure-policy\n\n# Get the cluster credentials\naz aks get-credentials -g $RG -n $CLUSTER_NAME\n"})}),"\n",(0,a.jsx)(t.h2,{id:"constraint-template-creation",children:"Constraint Template Creation"}),"\n",(0,a.jsxs)(t.p,{children:["While the cluster creates we can work on the contraint template. You can read more about constraint templates here, but they are the CRD that provides Gatekeeper the policy details, including the evaluation which is written in ",(0,a.jsx)(t.a,{href:"https://www.openpolicyagent.org/docs/latest/policy-language/",children:"rego"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"In our example, we'll keep it simple and just restrict the ingress host name to one of the values in an 'allowedhosts' array parameter. The allowedhosts parameter will be set via the constraint definition, or via the policy definition when we create the Azure Policy."}),"\n",(0,a.jsxs)(t.p,{children:["Create a new file named IngressHostnameConstraintTemplate.yaml with the following contents. Or use the doc in ",(0,a.jsx)(t.a,{href:"./manifests/IngressHostnameConstraintTemplate.yaml",children:"manifests/IngressHostnameConstraintTemplate.yaml"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1beta1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srestrictingresshostname\n  annotations:\n    description: Restricts hostname for ingress\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRestrictIngressHostname # this must be the same name as the name on metadata.name (line 4)            \n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          properties:\n            allowedhosts:\n              type: array\n              items:\n                type: string        \n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8srestrictingresshostname\n\n        violation[{"msg": msg}] {\n          host := input.review.object.spec.rules[_].host\n          not input_allowed_hosts(host)\n          msg := sprintf("invalid ingress host %q", [host])\n        }\n\n        input_allowed_hosts(field) {\n          endswith(field, input.parameters.allowedhosts[_])\n        }\n'})}),"\n",(0,a.jsx)(t.h2,{id:"azure-policy-creation",children:"Azure Policy Creation"}),"\n",(0,a.jsx)(t.p,{children:"To create a policy in Azure that uses the above constraint template, we need to base64 encode the above file and pass that into a new policy definition."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"cat ./manifests/IngressHostnameConstraintTemplate.yaml|base64\n\n# Sample Output\nYXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQpraW5kOiBDb25zdHJhaW50VGVtcGxhdGUKbWV0YWRhdGE6CiAgbmFtZTogazhzcmVzdHJpY3RpbmdyZXNzaG9zdG5hbWUKICBhbm5vdGF0aW9uczoKICAgIGRlc2NyaXB0aW9uOiBSZXN0cmljdHMgaG9zdG5hbWUgZm9yIGluZ3Jlc3MKc3BlYzoKICBjcmQ6CiAgICBzcGVjOgogICAgICBuYW1lczoKICAgICAgICBraW5kOiBLOHNSZXN0cmljdEluZ3Jlc3NIb3N0bmFtZSAjIHRoaXMgbXVzdCBiZSB0aGUgc2FtZSBuYW1lIGFzIHRoZSBuYW1lIG9uIG1ldGFkYXRhLm5hbWUgKGxpbmUgNCkgICAgICAgICAgICAKICAgICAgdmFsaWRhdGlvbjoKICAgICAgICAjIFNjaGVtYSBmb3IgdGhlIGBwYXJhbWV0ZXJzYCBmaWVsZAogICAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgIGFsbG93ZWRob3N0czoKICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nICAgICAgICAKICB0YXJnZXRzOgogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaAogICAgICByZWdvOiB8CiAgICAgICAgcGFja2FnZSBrOHNyZXN0cmljdGluZ3Jlc3Nob3N0bmFtZQoKICAgICAgICB2aW9sYXRpb25beyJtc2ciOiBtc2d9XSB7CiAgICAgICAgICBob3N0IDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5ydWxlc1tfXS5ob3N0CiAgICAgICAgICBub3QgaW5wdXRfYWxsb3dlZF9ob3N0cyhob3N0KQogICAgICAgICAgbXNnIDo9IHNwcmludGYoImludmFsaWQgaW5ncmVzcyBob3N0ICVxIiwgW2hvc3RdKQogICAgICAgIH0KCiAgICAgICAgaW5wdXRfYWxsb3dlZF9ob3N0cyhmaWVsZCkgewogICAgICAgICAgZW5kc3dpdGgoZmllbGQsIGlucHV0LnBhcmFtZXRlcnMuYWxsb3dlZGhvc3RzW19dKQogICAgICAgIH0=\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create a new file called 'policy-definition.json', and paste the following contenxt, updating the base64 encoded value with your output from above."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n    "properties": {\n        "displayName": "Restrict Ingress Hostname",\n        "policyType": "Custom",\n        "mode": "Microsoft.Kubernetes.Data",\n        "description": "Restrict the host names used in ingress objects",\n        "metadata": {\n            "version": "1.0.0",\n            "category": "Kubernetes"\n        },\n        "parameters": {\n            "effect": {\n                "type": "String",\n                "metadata": {\n                    "displayName": "Effect",\n                    "description": "Enable or disable the execution of the policy"\n                },\n                "allowedValues": [\n                    "audit",\n                    "deny",\n                    "disabled"\n                ],\n                "defaultValue": "audit"\n            },\n            "excludedNamespaces": {\n                "type": "Array",\n                "metadata": {\n                    "displayName": "Namespace exclusions",\n                    "description": "List of Kubernetes namespaces to exclude from policy evaluation. Providing a value for this parameter is optional."\n                },\n                "defaultValue": [\n                    "kube-system",\n                    "gatekeeper-system",\n                    "azure-arc"\n                ]\n            },\n            "allowedhosts": {\n                "type": "Array",\n                "metadata": {\n                  "displayName": "Allowed Ingress Host Names",\n                  "description": "List of allowed host names that can be used on Ingress objects."\n                },\n                "defaultValue": []\n              }\n        },\n        "policyRule": {\n            "if": {\n                "field": "type",\n                "in": [\n                    "AKS Engine",\n                    "Microsoft.Kubernetes/connectedClusters",\n                    "Microsoft.ContainerService/managedClusters"\n                ]\n            },\n            "then": {\n                "effect": "[parameters(\'effect\')]",\n                "details": {\n                    "templateInfo": {\n                        "sourceType": "Base64Encoded",\n                        "content": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQpraW5kOiBDb25zdHJhaW50VGVtcGxhdGUKbWV0YWRhdGE6CiAgbmFtZTogazhzcmVzdHJpY3RpbmdyZXNzaG9zdG5hbWUKICBhbm5vdGF0aW9uczoKICAgIGRlc2NyaXB0aW9uOiBSZXN0cmljdHMgaG9zdG5hbWUgZm9yIGluZ3Jlc3MKc3BlYzoKICBjcmQ6CiAgICBzcGVjOgogICAgICBuYW1lczoKICAgICAgICBraW5kOiBLOHNSZXN0cmljdEluZ3Jlc3NIb3N0bmFtZSAjIHRoaXMgbXVzdCBiZSB0aGUgc2FtZSBuYW1lIGFzIHRoZSBuYW1lIG9uIG1ldGFkYXRhLm5hbWUgKGxpbmUgNCkgICAgICAgICAgICAKICAgICAgdmFsaWRhdGlvbjoKICAgICAgICAjIFNjaGVtYSBmb3IgdGhlIGBwYXJhbWV0ZXJzYCBmaWVsZAogICAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgIGFsbG93ZWRob3N0czoKICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nICAgICAgICAKICB0YXJnZXRzOgogICAgLSB0YXJnZXQ6IGFkbWlzc2lvbi5rOHMuZ2F0ZWtlZXBlci5zaAogICAgICByZWdvOiB8CiAgICAgICAgcGFja2FnZSBrOHNyZXN0cmljdGluZ3Jlc3Nob3N0bmFtZQoKICAgICAgICB2aW9sYXRpb25beyJtc2ciOiBtc2d9XSB7CiAgICAgICAgICBob3N0IDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlYy5ydWxlc1tfXS5ob3N0CiAgICAgICAgICBub3QgaW5wdXRfYWxsb3dlZF9ob3N0cyhob3N0KQogICAgICAgICAgbXNnIDo9IHNwcmludGYoImludmFsaWQgaW5ncmVzcyBob3N0ICVxIiwgW2hvc3RdKQogICAgICAgIH0KCiAgICAgICAgaW5wdXRfYWxsb3dlZF9ob3N0cyhmaWVsZCkgewogICAgICAgICAgZW5kc3dpdGgoZmllbGQsIGlucHV0LnBhcmFtZXRlcnMuYWxsb3dlZGhvc3RzW19dKQogICAgICAgIH0="\n                    },\n                    "excludedNamespaces": "[parameters(\'excludedNamespaces\')]",\n                    "values": {\n                        "allowedhosts": "[parameters(\'allowedhosts\')]"\n                    },\n                    "apiGroups": [\n                        "extensions", \n                        "networking.k8s.io"\n                    ],\n                    "kinds": [\n                        "Ingress"\n                    ]\n                }\n            }\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Now in the Azure portal, go to Azure Policy and create a new policy using the tempalate json from above."}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"In Azure Policy, open 'Definitions' and click '+ Policy Definition'"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"create policy 1",src:n(386).A+"",width:"1093",height:"451"})}),"\n",(0,a.jsxs)(t.ol,{start:"2",children:["\n",(0,a.jsx)(t.li,{children:"Fill in the details and paste in the contents from your policy-definition.json and click 'Save'"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"create policy 2",src:n(7343).A+"",width:"909",height:"1430"})}),"\n",(0,a.jsxs)(t.ol,{start:"3",children:["\n",(0,a.jsx)(t.li,{children:"Once the policy is created you will be navigated to the policy where you can select 'Assign'"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"assign policy 1",src:n(962).A+"",width:"759",height:"287"})}),"\n",(0,a.jsxs)(t.ol,{start:"4",children:["\n",(0,a.jsx)(t.li,{children:"Fill in the details in all the tabs, including the scope and optionally adjust the 'Effect' option to drive if the policy will audit or block"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"assign policy 2",src:n(4561).A+"",width:"874",height:"446"})}),"\n",(0,a.jsxs)(t.ol,{start:"5",children:["\n",(0,a.jsx)(t.li,{children:"After you've reviewed the policy, click 'Create'"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"assign policy 3",src:n(4612).A+"",width:"879",height:"941"})}),"\n",(0,a.jsx)(t.h2,{id:"test-the-policy",children:"Test the policy"}),"\n",(0,a.jsx)(t.p,{children:"It can take 30 minutes or more for the policy to apply to the selected resource. You can accelerate the process with the following. The following assumes you set the policy scope to the resource group of the cluster we created above."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"az policy state trigger-scan --resource-group $RG\n"})}),"\n",(0,a.jsx)(t.p,{children:"While the above command runs, you can watch the cluster for constraint templates and constraints to be automatically created by Azure Policy."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"kubectl get constrainttemplates|grep k8srestrictingresshostname\n\n# Sample Output\nk8srestrictingresshostname         49m\n\n# Check the Constraint \n# This assume you have the jq command, but you can remove it\nkubectl get constraint -o=jsonpath='{.items[?(@.kind==\"K8sRestrictIngressHostname\")]}'|jq\n"})}),"\n",(0,a.jsx)(t.p,{children:"If you apply this on a cluster that already has ingress instances that are not compliant, you will see them eventually in the portal, but can also look a the constraint itself."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'kubectl get constraint -o=jsonpath=\'{.items[?(@.kind=="K8sRestrictIngressHostname")].status.violations}\'|jq\n\n# Sample Output\n[\n  {\n    "enforcementAction": "dryrun",\n    "group": "networking.k8s.io",\n    "kind": "Ingress",\n    "message": "invalid ingress host \\"myapp.com\\"",\n    "name": "ingress-policy-fail",\n    "namespace": "default",\n    "version": "v1"\n  }\n]\n'})}),"\n",(0,a.jsx)(t.h2,{id:"test-the-policy-1",children:"Test the policy"}),"\n",(0,a.jsx)(t.p,{children:"Now lets try to create a new ingress that does not match the policy."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'kubectl apply -f manifests/sample-ingress.yaml\n\ningress.networking.k8s.io/ingress-policy-pass created\nError from server (Forbidden): error when creating "manifests/sample-ingress.yaml": admission webhook "validation.gatekeeper.sh" denied the request: [azurepolicy-k8srestrictingresshostname-ada01c8bf99df9ddb0a8] invalid ingress host "myapp.com"\n'})}),"\n",(0,a.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(t.p,{children:"You should now understand the process for creating a basic custom ConstraintTemplate and Azure Policy using that template."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},4561:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/create-policy4-e90f4aa21e255a00be57ffb0df7e9a6f.jpg"},4612:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/create-policy5-c68826fd6f31945206700163810a2636.jpg"},6627:e=>{e.exports=JSON.parse('{"permalink":"/2023/10/26/aks-custom-policy","editUrl":"https://github.com/appdevgbb/gbb-blog/tree/main/docusaurus/blog/2023-10-26/aks-custom-policy/index.md","source":"@site/blog/2023-10-26/aks-custom-policy/index.md","title":"AKS Custom Policy","description":"Creating an AKS custom Gatekeeper policy to restrict ingress host names","date":"2023-10-26T00:00:00.000Z","tags":[],"readingTime":4.68,"hasTruncateMarker":true,"authors":[{"name":"Steve Griffith","title":"Principal Cloud Architect, Azure Global Black Belt","url":"https://github.com/swgriffith","socials":{"x":"https://x.com/SteveGriffith","github":"https://github.com/swgriffith"},"imageURL":"https://github.com/swgriffith.png","key":"steve_griffith","page":null}],"frontMatter":{"authors":["steve_griffith"],"date":"2023-10-26","description":"Creating an AKS custom Gatekeeper policy to restrict ingress host names","tags":[],"title":"AKS Custom Policy"},"unlisted":false,"prevItem":{"title":"Image Verification Part 2 - Image Verification with Gatekeeper and Ratify","permalink":"/2023/11/09/part2-aks-image-verification"},"nextItem":{"title":"AKS User Minimum Roles","permalink":"/2023/10/12/aks-user-min-roles"}}')},7343:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/create-policy2-d20e679b75dbdee1f7ab9f80d6eb72b8.jpg"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const a={},i=s.createContext(a);function o(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);